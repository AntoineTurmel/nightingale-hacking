<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */
-->

<!DOCTYPE bindings SYSTEM "chrome://songbird/locale/songbird.dtd" >

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">


  <!-- 
    BROWSER TOOLBAR
    
    A toolbox for controlling the the browser.
    
    See http://www.xulplanet.com/tutorials/xultu/toolbar.html
    and http://developer.mozilla.org/en/docs/Custom_Toolbar_Button
    
    The classes and IDs used in this binding are intended to match those
    in used in FireFox.
    
    Add your own toolbars and palette items via (dynamic) overlay, or by adding
    them as children to this binding.
    
    Add 'defaultset' and 'mode' attributes on this binding to control
    what items appear and how they look.
    
    TODO Make this toolbar user customizable.
    -->
  <binding id="browser-toolbar">

    <content>
      <toolbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
               id="navigator-toolbox" class="toolbox-top" mode="icons" 
               defaultmode="icons" anonid="toolbox" flex="1" xbl:inherits="flex,mode">
        <toolbarpalette id="BrowserToolbarPalette">
        
          <!-- IDs and classes match FireFox in order to make porting extensions easier -->
          <toolbarbutton id="back-button" anonid="back-button" class="toolbarbutton-1"
                         label="&tooltip.browser.back;"
                         oncommand="gBrowser.goBack();"
                         tooltiptext="&tooltip.browser.back;"
                         disabled="true" />
                         
          <toolbarbutton id="forward-button" anonid="forward-button" class="toolbarbutton-1"
                         label="&tooltip.browser.fwd;"
                         oncommand="gBrowser.goForward();"
                         tooltiptext="&tooltip.browser.fwd;"
                         disabled="true" />
                         
          <toolbarbutton id="reload-button" class="toolbarbutton-1"
                         label="&tooltip.browser.refresh;"
                         oncommand="gBrowser.reload();"
                         tooltiptext="&tooltip.browser.refresh;"/>
                         
          <toolbarbutton id="stop-button" anonid="stop-button" class="toolbarbutton-1"
                         label="&tooltip.browser.stop;"
                         oncommand="gBrowser.stop();"
                         tooltiptext="&tooltip.browser.stop;" />
                         
          <toolbarbutton id="home-button" class="toolbarbutton-1"
                         label="&tooltip.browser.home;"
                         oncommand="gBrowser.goHome();"
                         tooltiptext="&tooltip.browser.home;"/>
                         
          <toolbarbutton id="bookmark-button" class="toolbarbutton-1"
                         label="&tooltip.browser.bookmark;"
                         oncommand="bmManager.addBookmark();"
                         tooltiptext="&tooltip.browser.bookmark;"/>

          <!-- ADDRESS BOX -->                 
          <toolbaritem id="urlbar-container" align="center" flex="6"
                       title="URL">
            <sb-locationbar-textbox id="location_bar"
                                    flex="1" align="center"
                                    browser="frame_main_pane" />  
          </toolbaritem>
          
          <sb-smart-splitter id="search_splitter" state="open">
            <grippy/>
          </sb-smart-splitter>    

          <!-- SEARCH WIDGET -->
          <toolbaritem id="searchbar-container" align="center" flex="6"
                       title="&tooltip.search;">
            <searchbar id="searchbar" flex="1"/>   
          </toolbaritem>

          <!-- SPINNER -->
          <toolbaritem id="spinner-container" align="center">
             <sb-browser-spinner />
          </toolbaritem>
                    
          <!-- All non-toolbar children go into the palette -->
          <xbl:children />
        </toolbarpalette>
        
        <!-- Note: Default set can be specified externally. -->
        <toolbar id="nav-bar" class="toolbar-primary"
                 toolbarname="WebToolbar"
                 mode="icons" 
                 customizable="true"
                 defaultset="back-button,forward-button,reload-button,stop-button,home-button,bookmark-button,urlbar-container,search_splitter,searchbar-container,spinner-container"
                 xbl:inherits="defaultset,mode"
                 flex="1">            
        </toolbar>
        
        <toolbarset id="customToolbars" />
        
        <!-- Additional toolbars can be added as children, or via overlay -->
        <children includes="toolbar"/>        
      </toolbox>
    </content>

    <implementation type="application/x-javascript" >

      <constructor>
       <![CDATA[
         this._bindDataRemotes();
       ]]>
      </constructor>
      
      <destructor>
       <![CDATA[
         // Release any dataremotes
         if (this._dataremotes) {
           for (var i = 0; i < this._dataremotes.length; i++) {
             this._dataremotes[i].unbind();
           }
           this._dataremotes = null;
         }
       ]]>
      </destructor>

      <!-- Array of all dataremotes created in this binding -->
      <field name="_dataremotes">null</field>
    
      <method name="_bindDataRemotes">    
        <body>
          <![CDATA[
            // Bind the back, forward, and stop button disabled attributes to 
            // dataremotes.
            // XXX: This won't work once we support multiple windows.
            // Leaving as-is for now.
            var back = document.getAnonymousElementByAttribute(this,"anonid", "back-button");
            var forward = document.getAnonymousElementByAttribute(this,"anonid", "forward-button");
            var stop = document.getAnonymousElementByAttribute(this,"anonid", "stop-button");
            this._dataremotes = [
              SBDataBindElementAttribute( "browser.cangoback", back, "disabled", true, true ),
              SBDataBindElementAttribute( "browser.cangofwd", forward, "disabled", true, true ),
              SBDataBindElementAttribute( "faceplate.loading", stop, "disabled", true, true ) 
            ];
          ]]>
        </body>
      </method> 
                            
    </implementation>
  </binding>  
  
  
  

  <!-- 
    SPINNER    
    Loading indicator.  Pretty much the same as the FireFox throbber.
    -->
  <binding id="browser-spinner">

    <content>
      <hbox xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
        <!--TODO: Should be rewritten to use a single image tag, an attribute, and css padding -->
        <spacer style="min-width: 5px !important;" width="5" height="16"/>
        <spacer width="16" height="16" anonid="spinner_spin" class="spinner_spin" hidden="true"/>
        <spacer width="16" height="16" anonid="spinner_stopped" class="spinner_stopped" hidden="true"/>
        <spacer style="min-width: 8px !important;" width="8" height="16"/>      
      </hbox>
    </content>

    <implementation type="application/x-javascript" >

      <constructor>
       <![CDATA[
         this._bindDataRemotes();
       ]]>
      </constructor>
      
      <destructor>
       <![CDATA[
         // Release any dataremotes
         if (this._dataremotes) {
           for (var i = 0; i < this._dataremotes.length; i++) {
             this._dataremotes[i].unbind();
           }
           this._dataremotes = null;
         }
       ]]>
      </destructor>

      <!-- Array of all dataremotes created in this binding -->
      <field name="_dataremotes">null</field>
    
      <method name="_bindDataRemotes">    
        <body>
          <![CDATA[
            // XXX: This won't work once we support multiple windows.
            // Leaving as-is for now.
            var spin = document.getAnonymousElementByAttribute(this,"anonid", "spinner_spin");
            var stopped = document.getAnonymousElementByAttribute(this,"anonid", "spinner_stopped");
            this._dataremotes = [
              SBDataBindElementAttribute( "faceplate.loading", stopped, "hidden", true ),
              SBDataBindElementAttribute( "faceplate.loading", spin, "hidden", true, true )
            ];
          ]]>
        </body>
      </method> 
                            
    </implementation>
  </binding>  
  
  
</bindings>


