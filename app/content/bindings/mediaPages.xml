<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */
-->


<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">


  <!--
    A binding that adds mediapages-related menu elements that allows selection of media pages
  -->
  <binding 
    id="mediapages-menuitems" 
    extends="chrome://songbird/content/bindings/generatedMenuItems.xml#generated-menuitems-base"
  >
    <content/>
    <implementation type="application/x-javascript">
      <constructor>
      <![CDATA[
        // NOTE: this would be much nicer in the base class but their constructor fires first!
        // We need to explicitly call onPopupShowing() here since the first
        // time this constructor is called it is after the popupshowing event
        // has fired.
        this.onPopupShowing();
      ]]>
      </constructor>

      <destructor>
      <![CDATA[
      ]]>
      </destructor>

      <!--
        Called when a child menuitem is selected.  Attempts 
        to switch media pages based on the properties of the
        menuitem.
      -->
      <method name="onCommand">
        <parameter name="item"/>
        <body>
        <![CDATA[
          item.onCommand();
        ]]>
        </body>
      </method>

      <!--
        Populates the menupopup with a menu allowing selection
        of compatible media pages
      -->
      <!-- 
        NOTE: this function uses _addToMenu directly instead of returning an array
              of content either method is fine, and here this one probably makes
              more sense
      -->
      <method name="generateMenuItems">
        <body>
        <![CDATA[
          // bail out if we don't have a mediaListPage
          if (!gBrowser.currentMediaPage) {
            return;
          }
          
          var ml = gBrowser.currentMediaPage.mediaListView.mediaList;

          // Make a disabled menuitem to act as a label above the page items
          var item = document.createElement("menuitem");
            item.setAttribute("label", ml.name);
            item.setAttribute("name", "mediapage.item");
            item.setAttribute("disabled", "true");
            item.setAttribute("class", "mediapage-menu-selected-page-title");
          this._addToMenu(item);
          
          var mgr = Components.classes["@songbirdnest.com/Songbird/MediaListPageManager;1"]
                        .getService(Components.interfaces.sbIMediaListPageManager);
          var pages = mgr.getAvailablePages(ml);
          
          // Attach a menuitem for each compatible layout
          while (pages.hasMoreElements()) {
            var page = pages.getNext()
            page.QueryInterface(Components.interfaces.sbIMediaListPageInfo);
            
            var item = this._makeMenuItem(page);
            
            if (page.contentUrl == gBrowser.currentURI.spec) {
              item.setAttribute("checked", "true");
            }
            else {
              item.setAttribute("checked", "false");
            }
          
            item.setAttribute("class", "mediapage-menu-selected-page");
            
            this._addToMenu(item);
          }
          
          // If the current window has a browser/servicepane, then add a link
          // to get more media pages.
          // NOTE: This is brittle. Please change this once we have a proper API.
          if (typeof(gBrowser) != "undefined") {
            this._addToMenu(document.createElement("menuseparator"));
            this._addToMenu(this._makeGetMore());
          }
        ]]>
        </body>
      </method>

      <!-- Return a menuitem element for the given page -->
      <method name="_makeMenuItem">
        <parameter name="page"/>
        <body>
        <![CDATA[
          var item = document.createElement("menuitem");
          item.setAttribute("label", page.contentTitle);
          item.setAttribute("name", "mediapage.item");
          item.setAttribute("pageUrl", page.contentUrl);
          item.setAttribute("type", "radio");
          
          item.onCommand = function() {
            gBrowser.loadURI(
              page.contentUrl,
              null, null, null,
              '_top',
              gBrowser.currentMediaPage.mediaListView
            );
          }
          return item;
        ]]>
        </body>
      </method>
      
      <!-- Adds a "Get More" menu item that links to the addons site -->
      <method name="_makeGetMore">
        <body>
        <![CDATA[
          var item = document.createElement("menuitem");

          var getMoreText;
          try {
            getMoreText = this._stringBundle.GetStringFromName("mediapages.getmore");
          } catch (e) { 
            getMoreText="Error";
            dump("\n\n\nmediaPages.xml:  Error getting menu text from songbird.properties" +
                 " bundle\n"+ e + "\n"); 
          }
          
          item.setAttribute("label", getMoreText);
          item.setAttribute("name", "menu.getmore");
          item.onCommand = function() { 
            gBrowser.loadURI(
              "http://addons.songbirdnest.com/",
              null, null, null,
              '_blank',
              gBrowser.currentMediaPage.mediaListView
            ); 
          }
          return item;
        ]]>
        </body>
      </method>
    </implementation>
  </binding>
  
</bindings>


