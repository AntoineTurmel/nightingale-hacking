<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window SYSTEM "chrome://songbird/locale/songbird.dtd">

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * Device operation progress widget.
   *
   *   This widget displays progress for device operations.  It displays two
   * lines of progress text and a progress meter.  It also provides a button for
   * cancelling device operations.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-device-progress">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>

      <xul:groupbox sbid="device_progress_box" class="device-progress-groupbox"
                    flex="1"
                    orient="horizontal">

        <!-- Device operation progress box. -->
        <xul:vbox flex="1" pack="center">

          <!-- Progress text 1 label. -->
          <xul:label observestarget="true"
                     observeskey="text1"
                     observesattribute="value"
                     class="dev-progress-text1-label"/>

          <!-- Operation progress meter. -->
          <xul:progressmeter class="device-progressmeter"
                                mode="determined"
                                observestarget="true"
                                observeskey="progress"
                                observesattribute="value"/>

          <!-- Progress text 2 label. -->
          <xul:label observestarget="true"
                     observeskey="text2"
                     observesattribute="value"
                     class="dev-progress-text2-label"/>

        </xul:vbox>

        <!-- Cancel device operation button. -->
        <xul:vbox pack="center">
          <xul:button sbid="cancel_operation_button"
                      class="device-progress-button"
                      label="&window.cancel;"
                      action="cancel"
                      oncommand="DPW.onAction(event);"/>
        </xul:vbox>

        <!-- Finish progress button. -->
        <xul:vbox pack="center">
          <xul:button sbid="finish_progress_button"
                      class="device-progress-button"
                      label="&window.ok;"
                      action="finish"
                      oncommand="DPW.onAction(event);"/>
        </xul:vbox>

      </xul:groupbox>

    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * Widget fields.
       *
       *   deviceID                 Bound device identifier.
       -->

      <field name="deviceID"/>


      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
        /* Import external services. */
        this.importExternalServices();

        /* Bind to the device. */
        this.bind();
      ]]></constructor>


      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
        /* Finalize the device info services. */
        DPW.finalize(this);
      ]]></destructor>


      <!-- *********************************************************************
       *
       * Internal device progress services.
       *
       ********************************************************************* -->

      <!--
       * importExternalServices
       *
       *   This function imports external services.
       -->

      <method name="importExternalServices"><body><![CDATA[
        var                         jsLoader;

        /* Get the Javascript sub-script loader services. */
        jsLoader = Components.classes["@mozilla.org/moz/jssubscript-loader;1"]
                             .getService
                                (Components.interfaces.mozIJSSubScriptLoader);

        /* Import the device progress services. */
        if (typeof(DPW) == "undefined") {
          jsLoader.loadSubScript
                 ("chrome://songbird/content/scripts/device/deviceProgress.js",
                  null);
        }
      ]]></body></method>


      <!--
       * bind
       *
       *   This function binds the device progress widget to a specific device.
       -->

      <method name="bind"><body><![CDATA[
        var                       deviceID;

        /* Get the device ID.  Do nothing if device has not changed. */
        deviceID = this.getAttribute("device-id");
        if ((deviceID == this.deviceID) || (!deviceID))
          return;
        this.deviceID = deviceID;

        /* Re-initialize the device info services. */
        DPW.finalize(this);
        DPW.initialize(this);
      ]]></body></method>

    </implementation>


    <!-- ***********************************************************************
     *
     * Handlers.
     *
     *********************************************************************** -->

    <handlers>
      <handler event="DOMAttrModified" action="this.bind();"/>
    </handlers>


  </binding>

</bindings>

