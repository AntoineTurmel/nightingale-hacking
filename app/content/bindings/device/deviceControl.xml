<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window SYSTEM "chrome://songbird/locale/songbird.dtd">

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <binding id="sb-device-control">
    <implementation>
      <field name="deviceID"/>
      <field name="device"/>
      <constructor> <![CDATA[
        this._bindDevice();
      ]]></constructor>
      <method name="_bindDevice"><body><![CDATA[
        var deviceID;

        // Get the device ID.  
        deviceID = this.getAttribute("device-id");
        // Do nothing if device has not changed.
        if ((deviceID == this.deviceID) || (!deviceID)) {
          return;
        }
        this.deviceID = deviceID;

        // get the device manager
        var deviceManager = Cc["@songbirdnest.com/Songbird/DeviceManager;2"]
            .getService(Ci.sbIDeviceManager2);
        // and ask for the device instance
        this.device = deviceManager.getDevice(Components.ID(deviceID));

        // create an event
        var event = document.createEvent("Events");
        // the event is called 'deviceBound', it doesn't bubble, you can't
        // cancel it.
        event.initEvent("deviceBound", false, false);
        // dispatch it forth!
        this.dispatchEvent(event);
      ]]></body></method>

    </implementation>

    <handlers>
      <handler event="DOMAttrModified" action="this._bindDevice();"/>
    </handlers>

  </binding>

</bindings>

