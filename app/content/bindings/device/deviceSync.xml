<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window SYSTEM "chrome://songbird/locale/songbird.dtd">

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * Sync widget.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-device-sync"
     extends="chrome://songbird/content/bindings/device/deviceControl.xml#sb-device-control">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

     <content>

      <xul:vbox class="device-tab-content">

        <xul:vbox>

          <xul:hbox class="device-tab-header-box">
            <!-- Header label and info. -->
            <xul:label class="device-tab-header-label"
                       sbid="content_management_header_label"
                       value="&device.sync.header.label;"/>
            <xul:label sbid="content_management_header_info_label"
                       class="device-tab-header-info"/>
          </xul:hbox>

          <xul:groupbox>

            <!-- Management preferences. -->
            <xul:vbox class="content-controls"
                      oncommand="_onUIPrefChange();">

              <!-- Content management radio group. -->
              <xul:radiogroup sbid="content_auto_sync_type_radio_group">
                <xul:radio sbid="content_auto_sync_all_radio"
                           label="&device.sync.sync_all.label;"/>
                <xul:radio
                        sbid="content_auto_sync_selected_radio"
                        label="&device.sync.sync_selected.label;"/>
                <xul:tree sbid="content_auto_sync_playlist_tree"
                          hidecolumnpicker="true"
                          enableColumnDrag="false"
                          editable="true"
                          seltype="single"
                          rows="5"
                          onkeyup="_onUIPrefChange();"
                          onclick="_onUIPrefChange();">
                  <xul:treecols>
                    <xul:treecol sbid="content_auto_sync_playlist_check"
                                 type="checkbox"
                                 editable="true"
                                 class="content-auto-sync-playlist-check"/>
                    <xul:treecol sbid="content_auto_sync_playlist_title"
                                 label="&device.sync.playlist.title;"
                                 editable="false"
                                 class="content-auto-sync-playlist-title"
                                 flex="1"/>
                    <xul:splitter class="tree-splitter" />
                    <xul:treecol sbid="content_auto_sync_playlist_duration"
                                 hidden="true"
                                 editable="false"
                                 class="content-auto-sync-playlist-duration"
                                 label="&device.sync.playlist.video.duration;"/>
                  </xul:treecols>

                  <xul:treechildren sbid="content_auto_sync_playlist_children"
                                    alternatingbackground="true"/>
                </xul:tree>

              </xul:radiogroup>
            </xul:vbox>

          </xul:groupbox>

        </xul:vbox>

      </xul:vbox>

    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
      {
        /* Import external services. */
        this.importExternalServices();
      }
      ]]></constructor>


      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
      {
        /* Finalize the sync management services. */
        this.DeviceSyncWidget.finalize(this);
      }
      ]]></destructor>

      <!--
       * \brief Handle changes to the UI.
       *
       * \param aEvent          UI event.
       -->

      <method name="_onUIPrefChange">
        <parameter name="aEvent"/>
        <body><![CDATA[
          this.DeviceSyncWidget.onUIPrefChange();
        ]]></body>
      </method>

      <!--
       * \brief Handle action events.
       *
       * \param aEvent          Action event.
       -->

      <method name="_onActionEvent">
        <parameter name="aEvent"/>
        <body><![CDATA[
          this.DeviceSyncWidget.onAction(aEvent);
        ]]></body>
      </method>

      <!-- *********************************************************************
       *
       * Internal sync management panel services.
       *
       ********************************************************************* -->

      <!--
       * importExternalServices
       *
       *   This function imports external services.
       -->

      <method name="importExternalServices"><body><![CDATA[
      {
        /* Import the device sync services. */
        if (typeof(this.DeviceSyncWidget) == "undefined") {
          var jsLoader;

          /* Get the Javascript sub-script loader services. */
          jsLoader = Components.classes["@mozilla.org/moz/jssubscript-loader;1"]
                               .getService
                                  (Components.interfaces.mozIJSSubScriptLoader);
          jsLoader.loadSubScript
                  ("chrome://songbird/content/scripts/device/deviceSync.js",
                   this);
        }

      }
      ]]></body></method>

    </implementation>


    <!-- ***********************************************************************
     *
     * Handlers.
     *
     *********************************************************************** -->

    <handlers>
      <handler event="deviceBound"><![CDATA[
        /* Re-initialize the device sync management services. */
        this.DeviceSyncWidget.finalize(this);
        this.DeviceSyncWidget.initialize(this);
        ]]></handler>
    </handlers>

  </binding>

</bindings>
