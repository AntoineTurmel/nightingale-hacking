<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
 */
-->

<!-- Import external definitions. -->
<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
<!ENTITY % songbirdDTD SYSTEM "chrome://songbird/locale/songbird.dtd">
%brandDTD;
%songbirdDTD;
]>

<bindings
      xmlns="http://www.mozilla.org/xbl"
      xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
      xmlns:xbl="http://www.mozilla.org/xbl"
      xmlns:html="http://www.w3.org/1999/xhtml">

  <!-- *************************************************************************
   *****************************************************************************
   *
   * First-run add-ons widget.
   *
   *   This widget provides first-run add-ons UI.
   *
   * Properties:
   *
   *   addOnsBundle             First-run add-ons bundle object.
   *
   * Methods:
   *
   *   saveSettings             Save the user settings in the first-run wizard
   *                            page.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-first-run-add-ons">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>

      <xul:vbox anonid="container_box" class="sb-first-run-add-ons-box">

        <!-- Header. -->
        <xul:label class="sb-first-run-header"
                   value="&first_run.add_ons.header.label;"/>

        <!-- Description. -->
        <xul:description>
          &first_run.add_ons.description.line1;
          <html:br/>
          <html:br/>
          &first_run.add_ons.description.line2;
        </xul:description>

        <!-- Template for add-on list item. -->
        <xul:richlistitem anonid="list_item_template" hidden="true">
          <xul:sb-first-run-add-ons-item templateid="item"
                                         class="sb-first-run-add-ons-item"/>
        </xul:richlistitem>

        <!-- Add-ons status deck.  Can't use comments inside of decks. -->
        <xul:deck anonid="status_deck" class="sb-first-run-add-ons-status-deck">

          <xul:box anonid="no_status"/>

          <xul:hbox anonid="add_ons_loading_status"
                    class="sb-first-run-add-ons-status-text-box">
            <xul:image class="sb-first-run-add-ons-loading-image"/>
            <xul:label value="&first_run.add_ons.loading.label;"/>
          </xul:hbox>

          <xul:richlistbox anonid="add_ons_list"
                           class="sb-first-run-add-ons-listbox"/>

          <xul:hbox anonid="add_ons_load_failed_status"
                    class="sb-first-run-add-ons-status-text-box">
            <xul:label value="&first_run.add_ons.load_failed.label;"/>
          </xul:hbox>

        </xul:deck>

      </xul:vbox>

    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * Widget properties.
       -->

      <!-- addOnsBundle -->
      <property name="addOnsBundle" readonly="true">
        <getter>
          return this._widgetSvc.addOnsBundle;
        </getter>
      </property>


      <!--
       * Private fields.
       *
       *   _widgetSvc           First-run add-ons widget services object.
       -->

      <field name="_widgetSvc"/>


      <!--
       * constructor
       *
       *   This method constructs the widget.
       -->

      <constructor> <![CDATA[
        // Import external services.
        this._importExternalServices();

        // Create a widget services object.
        this._widgetSvc = new firstRunAddOnsSvc(this);

        // Initialize the widget services.
        this._widgetSvc.initialize();
      ]]></constructor>


      <!--
       * destructor
       *
       *   This method destroys the widget.
       -->

      <destructor> <![CDATA[
        // Finalize the widget services.
        if (this._widgetSvc)
            this._widgetSvc.finalize();
      ]]></destructor>


      <!--
       * Save the user settings in the first-run-wizard page.
       -->

      <method name="saveSettings"><body><![CDATA[
        this._widgetSvc.saveSettings();
      ]]></body></method>


      <!--
       * Import external services.
       -->

      <method name="_importExternalServices"><body><![CDATA[
        // Import the first-run add-ons widget services.
        if (typeof(firstRunAddOnsSvc) == "undefined") {
          var Cc = Components.classes;
          var Ci = Components.interfaces;
          var jsLoader = Cc["@mozilla.org/moz/jssubscript-loader;1"]
                           .getService(Ci.mozIJSSubScriptLoader);
          jsLoader.loadSubScript
            ("chrome://songbird/content/scripts/firstRun/firstRunAddOns.js",
             null);
        }
      ]]></body></method>

    </implementation>

  </binding> <!-- sb-first-run-add-ons -->


  <!-- *************************************************************************
   *****************************************************************************
   *
   * First-run add-ons item widget.
   *
   *   This widget implements an item within a first-run add-ons item list.
   *
   * Attributes:
   *
   *   defaultinstall           If true, select add-on installation by default.
   *   addonid                  Add-on ID.
   *   addonurl                 URL to add-on file.
   *   name                     Name of add-on.
   *   description              Add-on description.
   *   icon                     URL of add-on icon.
   *
   * Properties:
   *
   *   install                  If true, add-on is marked for installation.
   *
   *****************************************************************************
   ************************************************************************* -->

  <binding id="sb-first-run-add-ons-item">

    <!-- ***********************************************************************
     *
     * Content.
     *
     *********************************************************************** -->

    <content>

      <xul:hbox anonid="container_box" class="sb-first-run-add-ons-item-box">

        <!-- Add-on installation checkbox. -->
        <xul:checkbox anonid="install_checkbox"
                      xbl:inherits="checked=defaultinstall"/>

        <!-- Add-on image.  Use a box to constrain image size. -->
        <xul:box class="sb-first-run-add-ons-item-image-box">
          <xul:image class="sb-first-run-add-ons-item-image"
                     xbl:inherits="src=icon"/>
        </xul:box>

        <!-- Add-on name and description. -->
        <xul:vbox class="sb-first-run-add-ons-item-desc-box">
          <xul:label class="sb-first-run-add-ons-item-name"
                     xbl:inherits="value=name"/>
          <xul:label class="sb-first-run-add-ons-item-desc"
                     xbl:inherits="xbl:text=description"/>
        </xul:vbox>

      </xul:hbox> <!-- container_box -->

    </content>


    <!-- ***********************************************************************
     *
     * Implementation.
     *
     *********************************************************************** -->

    <implementation>

      <!--
       * Widget properties.
       -->

      <!-- install -->
      <property name="install" readonly="true">
        <getter>
          var installCheckboxElem =
                document.getAnonymousElementByAttribute(this,
                                                        "anonid",
                                                        "install_checkbox");
          return installCheckboxElem.checked;
        </getter>
      </property>

    </implementation>

  </binding> <!-- sb-first-run-add-ons-item -->

</bindings>

