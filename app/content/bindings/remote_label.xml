<?xml version="1.0"?>
<!--
/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright© 2006 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the “GPL”).
// 
// Software distributed under the License is distributed 
// on an “AS IS” basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */
-->

<!DOCTYPE window SYSTEM "chrome://songbird/locale/songbird.dtd" >

<bindings xmlns="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
          xmlns:xbl="http://www.mozilla.org/xbl">




  <!-- GENERIC REMOTE DISPLAY -->




  <binding id="remote_label">
  
    <content>
      <xul:label sbid="label" xbl:inherits="id=id,class=class,value=value,align=align,crop=crop,disabled=disabled,flex=flex" /> 
    </content>

    <implementation>

      <field name="label">this</field>

      <property name="data">
        <getter>
          return this.dataremote;
        </getter>
        <setter>
          // XXXredfive - why do we bind on set property? every time!?!?
          //     this is crazy, we should be able to do this simpler
          //     plus I think we can just re-bind to the same DR and not unbind/null
          
          // mig - I assume we do this to allow us to update the binding at runtime 
          //       by setting the data property and unbind it by setting "".
          this.setAttribute("data", val);
          this.dataremote = val;
          if (this.bind) {
            this.bind.unbind();
            this.bind = null;
          }
          if (val != "") 
            this.bind = SBDataBindElementAttribute ( val, this, "value" );
        </setter>
      </property>
      
    </implementation>
    
  </binding>


  <binding id="multiremote_label">
  
    <content>
      <xul:label sbid="label" xbl:inherits="id=id,class=class,value=value,align=align,crop=crop,disabled=disabled,flex=flex" /> 
    </content>

    <implementation>

      <constructor>
        <![CDATA[
        ]]>
      </constructor>

      <field name="label">document.getAnonymousElementByAttribute(this, 'sbid', 'label');</field>

      <property name="data">
        <getter>
          return this.dataremote;
        </getter>
        <setter>
          this.setAttribute("data", val);
          this.dataremote = val;
          
          var strArray = val.split(";");
          if (this.dataArray.length > 0) {
            for (var i in this.dataArray) {
              this.dataArray[i].unbind();
              this.bind = null;
            }
          }
          if (val != "") 
            this.bind = SBDataBindElementProperty ( val, this.label, "value" );
        </setter>
      </property>
      
    </implementation>
    
  </binding>


</bindings>

