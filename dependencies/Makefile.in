#
# BEGIN SONGBIRD GPL
#
# This file is part of the Songbird web player.
#
# Copyright(c) 2005-2008 POTI, Inc.
# http://www.songbirdnest.com
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 2 (the GPL).
#
# Software distributed under the License is distributed
# on an AS IS basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# END SONGBIRD GPL
#

DEPTH = ..
topsrcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

include $(DEPTH)/build/autodefs.mk

SUBDIRS = vendor/mozbrowser

# XXXredfive -erhn?

ifeq (,$(filter-out linux solaris,$(SB_PLATFORM)))
  SONGBIRD_MAIN_APP = $(SONGBIRD_XULRUNNERDIR)/songbird-bin
else
  SONGBIRD_MAIN_APP = $(SONGBIRD_XULRUNNERDIR)/songbird$(BIN_SUFFIX)
endif

GUNZIP_SRC = $(XULRUNNER_DIR)/xulrunner.tar.gz
GUNZIP_DEST_DIR = $(SONGBIRD_XULRUNNERDIR)

ifeq (windows,$(SB_PLATFORM))

ifdef MEDIA_CORE_VLC
VLC_PLUGIN = npvlc
SONGBIRD_PLUGINS += $(DEPS_DIR)/plugins/vlc/plugins/*$(DLL_SUFFIX)

SONGBIRD_VLCPLUGINS = $(DEPS_DIR)/plugins/vlc/plugins/plugins/*$(DLL_SUFFIX) \
                      $(NULL)
endif

# Kinda hacky (mostly because there *could* be other useful things on win32
# in the runtime dir, OTHER than the MSVCRTs... there *aren't*, but there 
# could be); this is:
# if we're windows, but not using jemalloc (so we need the MSVCRT)
#   ... add it ...
# else if we're not windows
#   ... add whatever is in the runtime dir for that platform ...

ifeq ($(SB_PLATFORM)_$(SB_USE_JEMALLOC),windows_)
  SONGBIRD_DIST += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*$(DLL_SUFFIX)

  # have to put the dlls here too because updater can't copy yet
  SONGBIRD_XULRUNNER += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*$(DLL_SUFFIX) 

  # MSVC 8 needs the manifest files, but only if we're not jemalloc!
  ifeq ($(_MSC_VER), 1400)
    SONGBIRD_DIST += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*.manifest
    # have to put the manifest here too because updater can't copy yet
    SONGBIRD_XULRUNNER += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*.manifest
  endif # _MSC_VER==1400

else ifneq ($(SB_PLATFORM),windows)
  SONGBIRD_DIST += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*$(DLL_SUFFIX)
  SONGBIRD_XULRUNNER += $(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/*$(DLL_SUFFIX) 
endif

# Copy these immaterial of whether --disable-jemalloc is specified for 
# Songbird proper, because XR needs it.
ifdef DEBUG
MOZ_WIN32_CUSTOM_CRT = $(SONGBIRD_XULRUNNERDIR)/mozcrt19d.dll
else
MOZ_WIN32_CUSTOM_CRT = $(SONGBIRD_XULRUNNERDIR)/mozcrt19.dll
endif

endif # windows

ifeq (,$(filter-out linux solaris,$(SB_PLATFORM)))

SONGBIRD_DIST += $(SONGBIRD_XULRUNNERDIR)/libjemalloc.so

# non-existent variable, VLC no-worky on linux yet...
ifdef (MEDIA_CORE_VLC)
ifdef (SB_LINUX_VLC)
VLC_PLUGIN = libvlcplugin

SONGBIRD_PLUGINS += $(PLUGINS_DIR)/vlc/plugins/$(VLC_PLUGIN)$(DLL_SUFFIX)
SONGBIRD_COMPONENTS += $(PLUGINS_DIR)/vlc/components/vlcintf.xpt
SONGBIRD_VLCPLUGINS = $(PLUGINS_DIR)/vlc/vlcplugins/*$(DLL_SUFFIX)
endif # SB_LINUX_VLC

SONGBIRD_XULRUNNER += $(DEPS_DIR)/id3lib/$(SB_CONFIGURATION)/lib/libid3-3.8.so.3.0.0 \
                      $(DEPS_DIR)/id3lib/$(SB_CONFIGURATION)/lib/libid3-3.8.so.3 \
                      $(DEPS_DIR)/id3lib/$(SB_CONFIGURATION)/lib/libid3.so \
                      $(NULL)
endif # MEDIA_CORE_VLC

endif # linux

ifeq (macosx,$(SB_PLATFORM))

all:: runtimelibs

ifdef MEDIA_CORE_VLC
all:: vlcplugin
endif

runtimelibs::
	$(MKDIR) -p $(SONGBIRD_MACOS)
	$(CP) -Lfp $(DEPS_DIR)/libogg/$(SB_CONFIGURATION)/lib/*$(DLL_SUFFIX) \
               $(SONGBIRD_MACOS) \
               $(NULL)

# Plugins on OS X are not files but rather directories! Doing it this way
# keeps us from having to remove a bunch of '.svn' folders after a recursive
# directory copy.

VLC_TAR_FILENAME = VLC\ Plugin.tar.gz

vlcplugin::
	$(MKDIR) -p $(SONGBIRD_PLUGINSDIR)
	$(TAR) -z -x -f $(DEPS_DIR)/plugins/vlc/$(SB_CONFIGURATION)/$(VLC_TAR_FILENAME) \
    -C $(SONGBIRD_PLUGINSDIR)

endif

# GStreamer
ifdef MEDIA_CORE_GST

GST_VERSION=0.10
GLIB_VERSION=2.0

GLIB_NAMES = glib \
             gmodule \
             gobject \
             gthread \
             $(NULL)

LIBICONV_NAMES = charset \
                 iconv \
                 $(NULL)

GETTEXT_NAMES = gettextlib \
                gettextpo \
                gettextsrc \
                intl \
                $(NULL)

GSTREAMER_NAMES = gstreamer \
                  gstbase \
                  gstcontroller \
                  gstdataprotocol \
                  gstnet \
                  $(NULL)

GST_PLUGINS_BASE_LIBS_NAMES = gstaudio \
                              gstcdda \
                              gstfft \
                              gstinterfaces \
                              gstnetbuffer \
                              gstpbutils \
                              gstriff \
                              gstrtp \
                              gstrtsp \
                              gstsdp \
                              gsttag \
                              gstvideo \
                              $(NULL)

OGG_NAMES = ogg \
            $(NULL)

VORBIS_NAMES = vorbis \
               vorbisenc \
               vorbisfile \
               $(NULL)

THEORA_NAMES = theora \
               theoradec \
               theoraenc \
               $(NULL)

FLAC_NAMES = FLAC \
             $(NULL)

GST_PLUGINS_CORE_NAMES = gstcoreelements \
                         gstcoreindexers \
                         $(NULL)

GST_PLUGINS_BASE_NAMES = gstadder \
                         gstaudioconvert \
                         gstaudiorate \
                         gstaudioresample \
                         gstaudiotestsrc \
                         gstdecodebin \
                         gstdecodebin2 \
                         gstffmpegcolorspace \
                         gstgdp \
                         gstogg \
                         gstplaybin \
                         gstqueue2 \
                         gsttheora \
                         gsttypefindfunctions \
                         gstvideorate \
                         gstvideoscale \
                         gstvideotestsrc \
                         gstvolume \
                         gstvorbis \
                         $(NULL)

GST_PLUGINS_GOOD_NAMES := gstalaw \
                         gstalpha \
                         gstalphacolor \
                         gstapetag \
                         gstaudiofx \
                         gstauparse \
                         gstautodetect \
                         gstavi \
                         gstcutter \
                         gsteffectv \
                         gstequalizer \
                         gstflac \
                         gstgamma \
                         gstgoom \
                         gsticydemux \
                         gstid3demux \
                         gstlevel \
                         gstmatroska \
                         gstmulaw \
                         gstmultifile \
                         gstmultipart \
                         gstqtdemux \
                         gstreplaygain \
                         gstrtp \
                         gstrtsp \
                         gstsmpte \
                         gstspectrum \
                         gstudp \
                         gstvideobalance \
                         gstvideobox \
                         gstvideocrop \
                         gstvideoflip \
                         gstvideomixer \
                         gstwavenc \
                         gstwavparse \
                         $(NULL)

GST_PLUGINS_UGLY_NAMES = gstasf \
                         gstmpegaudioparse \
                         $(NULL)

GST_PLUGINS_BAD_NAMES := gstaiffparse \
                        gstrtpmanager \
                        gstsdpelem \
                        gstselector \
                        gstmozillasrc \
                        $(NULL)

ifeq (windows,$(SB_PLATFORM))

GST_PLUGINS_GOOD_NAMES += gstdirectdrawsink \
                          gstdirectsoundsink \
                          $(NULL)

GST_PLUGINS_BAD_NAMES += gstacmmp3dec \
                         gstqtaudiowrapper \
                         gstqtvideowrapper \
                         gstdshowdecwrapper \
                         gstdshowvideosink \
                         $(NULL)

GLIB = $(addprefix $(DEPS_DIR)/glib/$(SB_CONFIGURATION)/bin/lib, \
         $(addsuffix -$(GLIB_VERSION)-0$(DLL_SUFFIX), $(GLIB_NAMES)))

LIBICONV = $(addprefix $(DEPS_DIR)/libiconv/$(SB_CONFIGURATION)/bin/, \
             $(addsuffix $(DLL_SUFFIX), $(LIBICONV_NAMES)))

GETTEXT = $(addprefix $(DEPS_DIR)/gettext/$(SB_CONFIGURATION)/bin/, \
            $(addsuffix $(DLL_SUFFIX), $(GETTEXT_NAMES)))

GSTREAMER = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/bin/, \
              $(addsuffix -$(GST_VERSION)-0$(DLL_SUFFIX), $(GSTREAMER_NAMES)))

GST_PLUGINS_BASE_LIBS = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/bin/, \
                          $(addsuffix -$(GST_VERSION)-0$(DLL_SUFFIX), $(GST_PLUGINS_BASE_LIBS_NAMES)))

OGG = $(addprefix $(DEPS_DIR)/libogg/$(SB_CONFIGURATION)/bin/, \
        $(addsuffix -0$(DLL_SUFFIX), $(OGG_NAMES)))

LIBICONV = $(addprefix $(DEPS_DIR)/libiconv/$(SB_CONFIGURATION)/bin/, \
             $(addsuffix $(DLL_SUFFIX), $(LIBICONV_NAMES)))

# XXX We need to append the version numbers of the libraries
VORBIS_VERSIONED_NAMES = $(join $(VORBIS_NAMES), -0 -2 -3)
VORBIS = $(addprefix $(DEPS_DIR)/libvorbis/$(SB_CONFIGURATION)/bin/, \
           $(addsuffix $(DLL_SUFFIX), $(VORBIS_VERSIONED_NAMES)))

THEORA_VERSIONED_NAMES = $(join $(THEORA_NAMES), -0 -1 -1)
THEORA = $(addprefix $(DEPS_DIR)/libtheora/$(SB_CONFIGURATION)/bin/, \
           $(addsuffix $(DLL_SUFFIX), $(THEORA_VERSIONED_NAMES)))

FLAC_VERSIONED_NAMES = $(join $(FLAC_NAMES), -8)
FLAC = $(addprefix $(DEPS_DIR)/flac/$(SB_CONFIGURATION)/bin/, \
           $(addsuffix $(DLL_SUFFIX), $(FLAC_VERSIONED_NAMES)))

GST_PLUGINS_CORE = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/lib/gstreamer-0.10/, \
                     $(addsuffix $(DLL_SUFFIX), $(GST_PLUGINS_CORE_NAMES)))

GST_PLUGINS_BASE = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/lib/gstreamer-0.10/, \
                     $(addsuffix $(DLL_SUFFIX), $(GST_PLUGINS_BASE_NAMES)))

GST_PLUGINS_GOOD = $(addprefix $(DEPS_DIR)/gst-plugins-good/$(SB_CONFIGURATION)/lib/gstreamer-0.10/, \
                     $(addsuffix $(DLL_SUFFIX), $(GST_PLUGINS_GOOD_NAMES)))

GST_PLUGINS_UGLY = $(addprefix $(DEPS_DIR)/gst-plugins-ugly/$(SB_CONFIGURATION)/lib/gstreamer-0.10/, \
                    $(addsuffix $(DLL_SUFFIX), $(GST_PLUGINS_UGLY_NAMES)))

GST_PLUGINS_BAD = $(addprefix $(DEPS_DIR)/gst-plugins-bad/$(SB_CONFIGURATION)/lib/gstreamer-0.10/, \
                    $(addsuffix $(DLL_SUFFIX), $(GST_PLUGINS_BAD_NAMES)))

SONGBIRD_LIB += $(GLIB) \
                $(LIBICONV) \
                $(GETTEXT) \
                $(GSTREAMER) \
                $(GST_PLUGINS_BASE_LIBS) \
                $(OGG) \
                $(VORBIS) \
                $(THEORA) \
                $(FLAC) \
                $(NULL)

SONGBIRD_GST_PLUGINS += $(GST_PLUGINS_CORE) \
                        $(GST_PLUGINS_BASE) \
                        $(GST_PLUGINS_GOOD) \
                        $(GST_PLUGINS_UGLY) \
                        $(GST_PLUGINS_BAD) \
                        $(NULL)

endif # windows

ifeq (macosx,$(SB_PLATFORM))

GST_PLUGINS_GOOD_NAMES += gstosxaudio \
                          gstosxvideosink \
                          $(NULL)

GST_PLUGINS_BAD_NAMES += gstqtaudiowrapper \
                         gstqtvideowrapper \
                         $(NULL)

GLIB = $(addprefix $(DEPS_DIR)/glib/$(SB_CONFIGURATION)/lib/lib, \
         $(addsuffix -$(GLIB_VERSION)$(DLL_SUFFIX), $(GLIB_NAMES)))

# We use system iconv on Mac
LIBICONV = 

GETTEXT = $(addprefix $(DEPS_DIR)/gettext/$(SB_CONFIGURATION)/lib/lib, \
            $(addsuffix $(DLL_SUFFIX), $(GETTEXT_NAMES)))

GSTREAMER = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/lib/lib, \
              $(addsuffix -$(GST_VERSION)$(DLL_SUFFIX), $(GSTREAMER_NAMES)))

GST_PLUGINS_BASE_LIBS = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/lib/lib, \
                          $(addsuffix -$(GST_VERSION)$(DLL_SUFFIX), $(GST_PLUGINS_BASE_LIBS_NAMES)))

OGG = $(addprefix $(DEPS_DIR)/libogg/$(SB_CONFIGURATION)/lib/lib, \
        $(addsuffix $(DLL_SUFFIX), $(OGG_NAMES)))

VORBIS = $(addprefix $(DEPS_DIR)/libvorbis/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(VORBIS_NAMES)))

THEORA = $(addprefix $(DEPS_DIR)/libtheora/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(THEORA_NAMES)))

FLAC = $(addprefix $(DEPS_DIR)/flac/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(FLAC_NAMES)))

GST_PLUGINS_CORE = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_CORE_NAMES)))

GST_PLUGINS_BASE = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_BASE_NAMES)))

GST_PLUGINS_GOOD = $(addprefix $(DEPS_DIR)/gst-plugins-good/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_GOOD_NAMES)))

GST_PLUGINS_UGLY = $(addprefix $(DEPS_DIR)/gst-plugins-ugly/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_UGLY_NAMES)))

GST_PLUGINS_BAD = $(addprefix $(DEPS_DIR)/gst-plugins-bad/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                    $(addsuffix .so, $(GST_PLUGINS_BAD_NAMES)))

SONGBIRD_LIB += $(GLIB) \
                $(LIBICONV) \
                $(GETTEXT) \
                $(GSTREAMER) \
                $(GST_PLUGINS_BASE_LIBS) \
                $(OGG) \
                $(VORBIS) \
                $(THEORA) \
                $(FLAC) \
                $(NULL)

SONGBIRD_GST_PLUGINS += $(GST_PLUGINS_CORE) \
                        $(GST_PLUGINS_BASE) \
                        $(GST_PLUGINS_GOOD) \
                        $(GST_PLUGINS_UGLY) \
                        $(GST_PLUGINS_BAD) \
                        $(NULL)

endif # macosx

# everything but macosx and windows
ifneq (,$(filter-out macosx windows,$(SB_PLATFORM)))

GST_PLUGINS_BASE_NAMES += gstalsa \
                          gstximagesink \
                          gstxvimagesink \
                          $(NULL)

GST_PLUGINS_GOOD_NAMES += gstpulse \
                          $(NULL)

GSTREAMER = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/lib/lib, \
              $(addsuffix -$(GST_VERSION)$(DLL_SUFFIX), $(GSTREAMER_NAMES)))

GST_PLUGINS_BASE_LIBS = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/lib/lib, \
                          $(addsuffix -$(GST_VERSION)$(DLL_SUFFIX), $(GST_PLUGINS_BASE_LIBS_NAMES)))

OGG = $(addprefix $(DEPS_DIR)/libogg/$(SB_CONFIGURATION)/lib/lib, \
        $(addsuffix $(DLL_SUFFIX), $(OGG_NAMES)))

VORBIS = $(addprefix $(DEPS_DIR)/libvorbis/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(VORBIS_NAMES)))

THEORA = $(addprefix $(DEPS_DIR)/libtheora/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(THEORA_NAMES)))

FLAC = $(addprefix $(DEPS_DIR)/flac/$(SB_CONFIGURATION)/lib/lib, \
           $(addsuffix $(DLL_SUFFIX), $(FLAC_NAMES)))

GST_PLUGINS_CORE = $(addprefix $(DEPS_DIR)/gstreamer/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_CORE_NAMES)))

GST_PLUGINS_BASE = $(addprefix $(DEPS_DIR)/gst-plugins-base/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_BASE_NAMES)))

GST_PLUGINS_GOOD = $(addprefix $(DEPS_DIR)/gst-plugins-good/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_GOOD_NAMES)))

GST_PLUGINS_UGLY = $(addprefix $(DEPS_DIR)/gst-plugins-ugly/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                     $(addsuffix .so, $(GST_PLUGINS_UGLY_NAMES)))

GST_PLUGINS_BAD = $(addprefix $(DEPS_DIR)/gst-plugins-bad/$(SB_CONFIGURATION)/lib/gstreamer-0.10/lib, \
                    $(addsuffix .so, $(GST_PLUGINS_BAD_NAMES)))

SONGBIRD_LIB += $(GSTREAMER) \
                $(GST_PLUGINS_BASE_LIBS) \
                $(OGG) \
                $(VORBIS) \
                $(THEORA) \
                $(FLAC) \
                $(NULL)

SONGBIRD_GST_PLUGINS += $(GST_PLUGINS_CORE) \
                        $(GST_PLUGINS_BASE) \
                        $(GST_PLUGINS_GOOD) \
                        $(GST_PLUGINS_UGLY) \
                        $(GST_PLUGINS_BAD) \
                        $(NULL)

ifdef HAVE_FLUENDO_MP3
FLUENDO_PLUGIN = $(DEPS_DIR)/fluendo-mp3/libgstflump3dec.so
SONGBIRD_GST_PLUGINS += $(FLUENDO_PLUGIN)
endif

endif # not mac or windows

endif # MEDIA_CORE_GST

ifeq (macosx,$(SB_PLATFORM))
EXECUTABLE = $(SONGBIRD_XULRUNNERDIR)/xulrunner-bin$(BIN_SUFFIX)
else
EXECUTABLE = $(SONGBIRD_XULRUNNERDIR)/xulrunner$(BIN_SUFFIX)
endif

include $(topsrcdir)/build/rules.mk

# Move all extensions from XULRUNNERDIR/extensions to SONGBIRD_EXTENSIONSDIR
xulrunner_extensions = $(notdir $(wildcard $(SONGBIRD_XULRUNNERDIR)/extensions/*))

all:: move-sb-stub-executable copy-extensions copy-xr-shell-stub addmsvcrtmanifest

# WE have to add manifest information to the few remaining .exes that actually
# link against the MSVCRT; see bug 10022
ADD_MANIFEST_EXES = crashreporter.exe \
                    mangle.exe \
                    shlibsign.exe \
                    $(NULL)

addmsvcrtmanifest::
ifeq ($(SB_USE_JEMALLOC)_$(MSMANIFEST_TOOL),_1)
	for f in $(ADD_MANIFEST_EXES); do \
   echo $(CYGWIN_WRAPPER) mt.exe -NOLOGO -MANIFEST "$(SONGBIRD_XULRUNNERDIR)/Microsoft.VC80.CRT.manifest" -OUTPUTRESOURCE:$(call normalizepath, $(SONGBIRD_XULRUNNERDIR))/$$f\;1 ; \
   $(CYGWIN_WRAPPER) mt.exe -NOLOGO -MANIFEST "$(SONGBIRD_XULRUNNERDIR)/Microsoft.VC80.CRT.manifest" -OUTPUTRESOURCE:$(call normalizepath, $(SONGBIRD_XULRUNNERDIR))/$$f\;1 ; \
   done
endif # NOT SB_USE_JEMALLOC and MSVC with manifest tool


.PHONY : move-sb-stub-executable copy-xr-shell-stub copy-extensions addmsvcrtmanifest

copy-extensions : gunzip_file
	@echo $(xulrunner_extensions)
ifneq (,$(xulrunner_extensions))
	$(MKDIR) -p $(SONGBIRD_EXTENSIONSDIR)
	for item in $(xulrunner_extensions); do \
    $(RM) -rf $(SONGBIRD_EXTENSIONSDIR)/$$item; \
    $(MV) -f $(SONGBIRD_XULRUNNERDIR)/extensions/$$item $(SONGBIRD_EXTENSIONSDIR); \
  done
	$(RM) -rf $(SONGBIRD_XULRUNNERDIR)/extensions
endif

ifeq (macosx,$(SB_PLATFORM))
sb_executable_dir = $(SONGBIRD_MACOS)
else
sb_executable_dir = $(call normalizepath,$(SONGBIRD_DISTDIR))
endif

include $(topsrcdir)/$(SONGBIRD_BRANDING_DIR)/branding.mk
SONGBIRD_STUB = $(sb_executable_dir)/$(notdir $(SONGBIRD_MAIN_APP))
RESHACKER_BIN = $(CYGWIN_WRAPPER) $(topsrcdir)/tools/win32/reshacker/ResHacker.exe
ifeq (,$(SONGBIRD_OFFICIAL))
ICON_FILE = $(topsrcdir)/installer/windows/songbird_nightly.ico
else
ICON_FILE = $(topsrcdir)/installer/windows/songbird.ico
endif
RESHACKER_OVERWRITE_ICON = $(RESHACKER_BIN) -addoverwrite $(sb_executable_dir)/$(1), $(sb_executable_dir)/$(1), $(ICON_FILE), icongroup, $(2), 1033
RESHACKER_REPLACE_RC = $(PERL) -p -i.bak -e "s/(VALUE \"$1\", \")[^\"]*(\")/\$${1}$(2)\$${2}/" songbird.rc
move-sb-stub-executable: $(SONGBIRD_MAIN_APP)
	$(CYGWIN_WRAPPER) $(MKDIR) -p $(sb_executable_dir)
	$(CYGWIN_WRAPPER) $(MV) -f $(SONGBIRD_MAIN_APP) $(sb_executable_dir)
ifeq (windows,$(SB_PLATFORM))
# If we're not using jemalloc, add the manifest...
ifeq ($(MSMANIFEST_TOOL)_$(SB_USE_JEMALLOC),1_)
	$(CYGWIN_WRAPPER) mt.exe -NOLOGO -MANIFEST "$(DEPS_DIR)/runtime/$(SB_CONFIGURATION)/Microsoft.VC80.CRT.manifest" \
          -OUTPUTRESOURCE:$(SONGBIRD_STUB)\;1
endif # Not-jemalloc and MSVC with manifest tool
	# On Win32, the stub requires the custom CRT in the same directory now,
	# if it's enabled; move that along if we find it too...
	test -e $(MOZ_WIN32_CUSTOM_CRT) && $(CYGWIN_WRAPPER) $(CP) -vf $(MOZ_WIN32_CUSTOM_CRT) $(sb_executable_dir)
	# Win32 only - munge the stub installer for icons
	$(call RESHACKER_OVERWRITE_ICON,xulrunner/xulrunner.exe,IDI_APPICON)
	$(call RESHACKER_OVERWRITE_ICON,xulrunner/xulrunner.exe,IDI_DOCUMENT)
	$(call RESHACKER_OVERWRITE_ICON,xulrunner/xulrunner.exe,32512)
	$(call RESHACKER_OVERWRITE_ICON,songbird.exe,IDI_APPICON)
	$(call RESHACKER_OVERWRITE_ICON,songbird.exe,IDI_DOCUMENT)
	$(call RESHACKER_OVERWRITE_ICON,songbird.exe,32512)
	# overwrite the VersionInfo fields to say Songbird
	$(RESHACKER_BIN) -extract $(sb_executable_dir)/songbird.exe, songbird.rc, VersionInfo, 1, 1033
	$(call RESHACKER_REPLACE_RC,Comments,Songbird.exe is based on the Mozilla XULRunner stub loader)
	$(call RESHACKER_REPLACE_RC,CompanyName,$(SB_BRAND_VENDOR_NAME)) 
	$(call RESHACKER_REPLACE_RC,FileDescription,$(SB_BRAND_FULL_NAME))
	$(call RESHACKER_REPLACE_RC,ProductName,$(SB_BRAND_SHORT_NAME))
	$(call RESHACKER_REPLACE_RC,ProductVersion,$(SB_MILESTONE_WINDOWS))
	$(call RESHACKER_REPLACE_RC,LegalTrademarks,$(SB_BRAND_TRADEMARKS))
	$(call RESHACKER_REPLACE_RC,BuildID,$(SB_BUILD_NUMBER))
	rc -v -fo songbird.res songbird.rc
	$(RESHACKER_BIN) -addoverwrite $(sb_executable_dir)/songbird.exe, $(sb_executable_dir)/songbird.exe, songbird.res, VersionInfo,1,1033
endif # windows
	$(CYGWIN_WRAPPER) $(CHMOD) +x $(sb_executable_dir)/$(notdir $(SONGBIRD_MAIN_APP))

copy-xr-shell-stub: gunzip_file
ifeq (,$(filter-out linux solaris,$(SB_PLATFORM)))
	$(CP) -dfp $(topsrcdir)/installer/linux/songbird.sh $(SONGBIRD_DISTDIR)/songbird
endif
