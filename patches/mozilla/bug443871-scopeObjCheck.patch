Index: js/src/jslock.c
===================================================================
RCS file: /cvsroot/mozilla/js/src/jslock.c,v
retrieving revision 3.84
diff -u -p -r3.84 jslock.c
--- js/src/jslock.c	29 Mar 2008 13:38:28 -0000	3.84
+++ js/src/jslock.c	9 Sep 2008 19:24:11 -0000
@@ -353,18 +353,20 @@ js_FinishSharingTitle(JSContext *cx, JST
     scope = (JSScope *)map;
 
     obj = scope->object;
-    nslots = scope->map.freeslot;
-    for (i = 0; i != nslots; ++i) {
-        v = STOBJ_GET_SLOT(obj, i);
-        if (JSVAL_IS_STRING(v) &&
-            !js_MakeStringImmutable(cx, JSVAL_TO_STRING(v))) {
-            /*
-             * FIXME bug 363059: The following error recovery changes runtime
-             * execution semantics, arbitrarily and silently ignoring errors
-             * except out-of-memory, which should have been reported through
-             * JS_ReportOutOfMemory at this point.
-             */
-            STOBJ_SET_SLOT(obj, i, JSVAL_VOID);
+    if (obj) {
+        nslots = scope->map.freeslot;
+        for (i = 0; i != nslots; ++i) {
+            v = STOBJ_GET_SLOT(obj, i);
+            if (JSVAL_IS_STRING(v) &&
+                !js_MakeStringImmutable(cx, JSVAL_TO_STRING(v))) {
+                /*
+                 * FIXME bug 363059: The following error recovery changes
+                 * runtime execution semantics, arbitrarily and silently
+                 * ignoring errors except out-of-memory, which should have been
+                 * reported through JS_ReportOutOfMemory at this point.
+                 */
+                STOBJ_SET_SLOT(obj, i, JSVAL_VOID);
+            }
         }
     }
 
