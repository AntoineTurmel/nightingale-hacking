Index: xpfe/appshell/src/nsAppShellService.cpp
===================================================================
RCS file: /cvsroot/mozilla/xpfe/appshell/src/nsAppShellService.cpp,v
retrieving revision 1.236
diff -u -8 -r1.236 nsAppShellService.cpp
--- xpfe/appshell/src/nsAppShellService.cpp	23 Mar 2008 22:30:57 -0000	1.236
+++ xpfe/appshell/src/nsAppShellService.cpp	13 May 2008 22:33:19 -0000
@@ -305,30 +305,16 @@
     widgetInitData.mWindowType = eWindowType_invisible;
   else
     widgetInitData.mWindowType = aChromeMask & nsIWebBrowserChrome::CHROME_OPENAS_DIALOG ?
       eWindowType_dialog : eWindowType_toplevel;
 
   if (aChromeMask & nsIWebBrowserChrome::CHROME_WINDOW_POPUP)
     widgetInitData.mWindowType = eWindowType_popup;
 
-#ifdef XP_MACOSX
-  // Mac OS X sheet support
-  // Adding CHROME_OPENAS_CHROME to sheetMask makes modal windows opened from
-  // nsGlobalWindow::ShowModalDialog() be dialogs (not sheets), while modal
-  // windows opened from nsPromptService::DoDialog() still are sheets.  This
-  // fixes bmo bug 395465 (see nsCocoaWindow::StandardCreate() and
-  // nsCocoaWindow::SetModal()).
-  PRUint32 sheetMask = nsIWebBrowserChrome::CHROME_OPENAS_DIALOG |
-                       nsIWebBrowserChrome::CHROME_MODAL |
-                       nsIWebBrowserChrome::CHROME_OPENAS_CHROME;
-  if (aParent && ((aChromeMask & sheetMask) == sheetMask))
-    widgetInitData.mWindowType = eWindowType_sheet;
-#endif
-
   widgetInitData.mContentType = eContentTypeUI;                
 
   // note default chrome overrides other OS chrome settings, but
   // not internal chrome
   if (aChromeMask & nsIWebBrowserChrome::CHROME_DEFAULT)
     widgetInitData.mBorderStyle = eBorderStyle_default;
   else if ((aChromeMask & nsIWebBrowserChrome::CHROME_ALL) == nsIWebBrowserChrome::CHROME_ALL)
     widgetInitData.mBorderStyle = eBorderStyle_all;
