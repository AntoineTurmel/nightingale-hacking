<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://songbird/skin/songbird.css" type="text/css" title="Skin"?>
<?xml-stylesheet href="chrome://albumartmanager/skin/albumart.css" type="text/css"?>

<!DOCTYPE dialog [
<!ENTITY % albumartmanagerDTD SYSTEM "chrome://albumartmanager/locale/albumartmanager.dtd">
%albumartmanagerDTD;
]>

<dialog xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
    title="Cover Fetcher Priority"
    onload="onLoad();"
    buttons="accept,cancel"
    buttonlabelcancel="Cancel"
    buttonlabelaccept="Ok"
    ondialogaccept="onOK();"
    ondialogcancel="window.close();">

<script type="application/x-javascript">
<![CDATA[
    // Constants for convience
    if (typeof(Cc) == "undefined")
      var Cc = Components.classes;
    if (typeof(Ci) == "undefined")
      var Ci = Components.interfaces;
    if (typeof(Cu) == "undefined")
      var Cu = Components.utils;
    if (typeof(Cr) == "undefined")
      var Cr = Components.results;
    
    const STRING_BUNDLE = "chrome://albumartmanager/locale/albumartmanager.properties";
    
    Cu.import("resource://app/jsmodules/StringUtils.jsm");
    
    function moveFetcher(offset) {
      var fetcherBox = document.getElementById("fetcherListBox");
      var currentFetcher = fetcherBox.getSelectedItem(0);
      if (currentFetcher) {
        var fetcherIndex = fetcherBox.getIndexOfItem(currentFetcher);
        if ( (fetcherIndex > 0) || (offset > 0) ) {
          fetcherBox.removeItemAt(fetcherIndex);
          if (fetcherIndex <= fetcherBox.getRowCount()) {
            newFetcher = fetcherBox.insertItemAt((fetcherIndex + offset),
                                                 currentFetcher.getAttribute("label"),
                                                 currentFetcher.getAttribute("value"));
          } else {
            newFetcher = fetcherBox.appendItem(currentFetcher.getAttribute("label"),
                                               currentFetcher.getAttribute("value"));
          }
          fetcherBox.selectItem(newFetcher);
        }
      }
    }
    
    function onLoad() {
      var fetcherBox = document.getElementById("fetcherListBox");
      
      // Remove any existing ones
      while(fetcherBox.getRowCount() > 0) {
        fetcherbox.removeItemAt(0);
      }
      
      var albumArtService = Cc["@songbirdnest.com/songbird-album-art-service;1"]
                              .getService(Ci.sbIAlbumArtService);
      var fetchers = albumArtService.getFetcherList();
      var stringBundleService = Cc["@mozilla.org/intl/stringbundle;1"]
                                .getService(Ci.nsIStringBundleService);
      var bundle = stringBundleService.createBundle(STRING_BUNDLE);

      for (var fIndex = 0; fIndex < fetchers.length; fIndex++) {
        // Add a list item entry for each one
        var fetcherCid = fetchers.queryElementAt(fIndex, Ci.nsISupportsString).toString();
        var cFetcher = Cc[fetcherCid].createInstance(Ci.sbICoverFetcher);
        
        var itemLabel = SBFormattedString("albumartmanager.priority.dialog.fetcher.label",
                                          [cFetcher.name],
                                          bundle);
        var newFetcher = fetcherBox.appendItem(itemLabel, cFetcher.shortName);
        newFetcher.setAttribute("type", "checkbox");
        newFetcher.setAttribute("checked", cFetcher.isEnabled);
      }
    }
    
    function onOK() {
      var prefService = Cc['@mozilla.org/preferences-service;1']
                          .getService(Ci.nsIPrefBranch);
      var fetcherBox = document.getElementById("fetcherListBox");
      
      var fetcherCount = fetcherBox.getRowCount();
      var fPref = "songbird.albumartmanager.fetcher.";
      
      for (var fIndex = 0; fIndex < fetcherCount; fIndex++) {
        var fetcherItem = fetcherBox.getItemAtIndex(fIndex);
        if (fetcherItem) {
          prefService.setIntPref(fPref + fetcherItem.value + ".priority", fIndex + 1);
          prefService.setBoolPref(fPref + fetcherItem.value + ".isEnabled",
                                  fetcherItem.checked);
        }
      }
      
     var albumArtService = Cc["@songbirdnest.com/songbird-album-art-service;1"]
                              .getService(Ci.sbIAlbumArtService);
      albumArtService.loadFetcherList();

      window.close();
    }
]]>
</script>

<hbox flex="1">
    <listbox flex="1"
             selType="single"
             id="fetcherListBox"
             suppressonselect="true"/>
  
    <vbox flex="1">
        <button label="Up" onclick="moveFetcher(-1);"/>
        <button label="Down" onclick="moveFetcher(1);"/>
        <button label="Reset" onclick="onLoad();"/>
    </vbox>

</hbox>

</dialog>