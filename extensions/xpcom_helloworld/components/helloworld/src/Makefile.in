#
# BEGIN SONGBIRD GPL
#
# This file is part of the Songbird web player.
#
# Copyright(c) 2005-2007 POTI, Inc.
# http://songbirdnest.com
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 2 (the "GPL").
#
# Software distributed under the License is distributed
# on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# END SONGBIRD GPL
#

DEPTH = ../../../../..
topsrcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

include $(DEPTH)/build/autodefs.mk

# the name of our component
target_name = sbHelloWorld

# compile these C++ files
CPP_SRCS = sbHelloWorldModule.cpp \
           sbHelloWorld.cpp \
           $(NULL)

# include the headers generated from our IDL, plus bits of the XULRunner SDK
# that we're using
CPP_INCLUDES = $(DEPTH)/extras/xpcom_helloworld/components/helloworld/public \
               $(MOZSDK_INCLUDE_DIR) \
               $(MOZSDK_INCLUDE_DIR)/nspr \
               $(MOZSDK_INCLUDE_DIR)/xpcom \
               $(MOZSDK_INCLUDE_DIR)/string \
               $(MOZSDK_IDL_DIR) \
               $(NULL)

# build a component (ie: a dynamically loadable module)
IS_COMPONENT = 1

# build a library - DLL_SUFFIX is the platform-specific file extensions for
# dynamic libraries (.so on unix, .dll on windows, etc)
DYNAMIC_LIB = $(target_name)$(DLL_SUFFIX)

# compile our C++ files into the component
DYNAMIC_LIB_OBJS = $(CPP_SRCS:.cpp=$(OBJ_SUFFIX))

# our component depends on these mozilla libraries
DYNAMIC_LIB_EXTRA_IMPORTS = nspr4 \
                            xpcom \
                            xpcomglue_s \
                            $(NULL)

DYNAMIC_LIB_IMPORT_PATHS = $(MOZSDK_LIB_DIR) \
                           $(NULL)

ifeq ($(SB_PLATFORM), windows)
  DYNAMIC_LIB_EXTRA_IMPORTS += unicharutil_external_s \
                               $(NULL)
endif

ifeq ($(SB_PLATFORM), macosx)
  DYNAMIC_LIB_EXTRA_IMPORTS += mozjs
endif

# put this in our staging directory
EXTENSION_STAGE_DIR = $(SONGBIRD_OBJDIR)/extras/xpcom_helloworld/.xpistage

# into components/ 
SONGBIRD_COMPONENTS = $(DYNAMIC_LIB)

include $(topsrcdir)/build/rules.mk

