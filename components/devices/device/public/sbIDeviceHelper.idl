/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright© 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
*/

/**
 * \file sbIDeviceHelper.idl
 * \brief Helper routines for device implementation
 */

#include "nsISupports.idl"

interface sbIDevice;
interface sbIDeviceLibrary;

/**
 * \interface sbIDeviceHelper
 * \note This interface is NOT expected to be threadsafe
 *
 * Helper routines for device implementations
 */
[scriptable, uuid(43c7f78b-9508-4ed4-8576-4e24974eaaa8)]
interface sbIDeviceHelper : nsISupports
{
  /**
   * Check if a given device library has space for a write request
   * Will prompt the user for a partial write if not enough
   *
   * \param aSpaceNeeded the amount of space required, in bytes
   * \param aLibrary the device library to write to
   * \param aDevice the device to write to; if not supplied, will attempt to 
   *                determine based on the library (slow)
   * \param aSpaceRemaining [optional] the amount of space available
   * \return True if the write should proceed (even partially), false if not
   */
  boolean hasSpaceForWrite(in unsigned long long aSpaceNeeded,
                           in sbIDeviceLibrary aLibrary,
                           [optional] in sbIDevice aDevice,
                           [optional] out unsigned long long aSpaceRemaining);
};
