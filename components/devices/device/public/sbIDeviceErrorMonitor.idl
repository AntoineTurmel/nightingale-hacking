/* vim: ts=2 sw=2 expandtab
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbIDeviceErrorMonitor.idl
 * \brief Interface to the device service pane provider
 */

#include "nsISupports.idl"

interface sbIDevice;
interface nsIArray;

/**
 * \interface sbIDeviceErrorMonitor
 * \brief This service monitors devices for errors and stores them for easy
 *        access later.
 */
[scriptable, uuid(7a2a55d1-0270-4789-bc7c-12ffaa19b4cd)]
interface sbIDeviceErrorMonitor : nsISupports {
  
  /**
   * \brief Checks to see if a device has had any recent errors.
   *
   * \param aDevice device to check for errors on.
   * \returns true if any errors are currently registered for this device.
   */
  boolean deviceHasErrors(in sbIDevice aDevice);

  /**
   * \brief Gets an array of strings (nsISupportsString) that indicate errors
   *        that have happend on this device recently.
   *
   * \param aDevice device to get error list from.
   * \returns array of error strings, empty if no errors exist yet.
   */
  nsIArray getErrorsForDevice(in sbIDevice aDevice);
  
  /**
   * \brief Clears the array of error strings for a device.
   *
   * \param aDevice device to clear error list from.
   */
  void clearErrorsForDevice(in sbIDevice aDevice);
  
};
