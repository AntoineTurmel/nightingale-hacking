/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 :miv */
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//
// Interface description for the album art service interface.
//
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

#include "nsISupports.idl"

interface nsIArray;
interface nsIFileURL;


/**
 * \interface sbIAlbumArtService
 * \brief Interface for the album art service.  Instantiate as a component
 *        service.
 *
 * "@songbirdnest.com/Songbird/album-art-service;1"
 */
[scriptable, uuid(9c101073-c3a4-4c8a-a967-32ff855cd748)]
interface sbIAlbumArtService : nsISupports
{
  /**
   * Return a list of album art fetcher contract ID's as an array of
   * nsIVariant's of type ACString.  If aLocalOnly is true, return only local
   * album art fetchers.
   *
   * \param aLocalOnly          If true, only return local album art fetchers.
   *
   * \return                    List of album art fetcher contract ID's.
   */

  nsIArray getFetcherList(in boolean aLocalOnly);


  /**
   * \brief Determine whether the image specified by aData and aDataLen of type
   *        specified by aMimeType is a valid album art image.  Return true if
   *        so.
   *
   * \param aMimeType           MIME type of image data.
   * \param aData               Album art image data.
   * \param aDataLen            Length in bytes of image data.
   *
   * \return                    True if image is valid album art.
   */

  boolean imageIsValidAlbumArt
            (in AUTF8String                             aMimeType,
             [const, array, size_is(aDataLen)] in octet aData,
             in unsigned long                           aDataLen);


  /**
   * \brief Write the album art image specified by aData and aDataLen of type
   *        specified by aMimeType to a cache file and return the cache file
   *        URL.
   *
   * \param aMimeType           MIME type of image data.
   * \param aData               Album art image data.
   * \param aDataLen            Length in bytes of image data.
   *
   * \return                    Album art image cache file URL.
   */

  nsIFileURL cacheImage(in AUTF8String                             aMimeType,
                        [const, array, size_is(aDataLen)] in octet aData,
                        in unsigned long                           aDataLen);

  
  /**
   * \brief Add arbitrary data to a temporary cache.
   *
   * Used by art fetchers to cache intermediate results
   * for a short period of time.  Allows fetchers to 
   * avoid additional work without keeping their own
   * static cache.
   *
   * Note: The contents of this cache is flushed periodically
   *
   * \param aKey           Hash key
   * \param aData          Arbitrary data to store.
   */
  void cacheTemporaryData(in AString aKey, in nsISupports aData);


  /**
   * \brief Get data previously placed into the temporary cache
   *
   * \param aKey                Hash key
   * \return                    Arbitrary data
   *
   * \throws NS_ERROR_NOT_AVAILABLE if the key is not found
   */
  nsISupports retrieveTemporaryData(in AString aKey);
};


//
// C++ defs.
//

%{C++
#define SB_ALBUMARTSERVICE_CONTRACTID \
          "@songbirdnest.com/Songbird/album-art-service;1"
%}C++

