/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 :miv */
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//
// Interface description for the album art listener interface.
//
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

#include "nsISupports.idl"

interface nsIURI;
interface sbIAlbumArtFetcher;
interface sbIMediaItem;

/**
 * \interface sbIAlbumArtListener
 * \brief A component which is interested in the result of an album art fetch
 *        request
 * \sa sbIAlbumArtFetcher
 * \sa sbIAlbumArtFetcherSet
 */

[scriptable, uuid(34b2e101-e6b5-4be4-a5fd-adfc67a70051)]
interface sbIAlbumArtListener : nsISupports
{
  /**
   * \brief onChangeFetcher - Notifies the listener when the fetcher
   *          being used has changed. This is used from the
   *          sbIAlbumArtFetcherSet component.
   * \param aFetcher - Fetcher that has been changed to.
   */
  void onChangeFetcher(in sbIAlbumArtFetcher aFetcher);

  /**
   * \brief onResult - Notifies the listener when either an image has
   *          or has not been found. aImageLocation will be null if
   *          the operation failed to get artwork.
   * \param aImageLocation - uri of the image location, this can be
   *          a file, http, or other.
   * \param aMediaItem - The media item that the result is for.
   * \note This will be called even if the autoSet has been set in the
   *       FetchAlbumArtForMediaItem call. In this case the aMediaItem
   *       will have already been updated with the image location if
   *       successfull.
   */
  void onResult(in nsIURI aImageLocation,
                in sbIMediaItem aMediaItem);
};

