/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* vim: set sw=2 :miv */
/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
//
// Interface description for the album art fetcher interface.
//
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------

#include "nsISupports.idl"


/**
 * \interface sbIAlbumArtFetcher
 * \brief Interface for an album art fetcher.  Instantiate as a component
 *        service.
 * \sa sbIAlbumArtListener
 */

interface sbIAlbumArtListener;
interface nsIDOMWindow;
interface sbIMediaItem;

[scriptable, uuid(baf8cbd1-34f1-41e0-bdff-4c13aac81e08)]
interface sbIAlbumArtFetcher : nsISupports
{
  /**
   * \brief Short name of AlbumArtFetcher.
   */
  readonly attribute AString shortName;

  /**
   * \brief Name of AlbumArtFetcher to display to the user on things like
   *        menus.
   */
  readonly attribute AString name;

  /**
   * \brief Description of the AlbumArtFetcher to display to the user.
   */
  readonly attribute AString description;

  /**
   * \brief Flag to indicate if this Fetcher can be used as a fetcher from a
   *        user menu.
   */
  readonly attribute boolean userFetcher;

  /**
   * \brief Flag to indicate if this Fetcher fetches from local sources.
   */

  readonly attribute boolean isLocal;

  /**
   * \brief Flag to indicate if this Fetcher is enabled or not
   */
  attribute boolean isEnabled;

  /* \brief try to fetch album art for the given media item
   * \param aMediaItem the media item that we're looking for album art for
   * \param aListener the listener to inform of success or failure
   * \param aWindow the window this was called from, can be null
   */
  void fetchAlbumArtForMediaItem(in sbIMediaItem        aMediaItem,
                                 in sbIAlbumArtListener aListener,
                                 in nsIDOMWindow        aWindow);

  /* \brief shut down the fetcher
   */
  void shutdown();
};


//
// C++ defs.
//

%{C++
#define SB_FILEALBUMARTFETCHER_CONTRACTID \
          "@songbirdnest.com/Songbird/album-art/file-fetcher;1"

#define SB_METADATAALBUMARTFETCHER_CONTRACTID \
          "@songbirdnest.com/Songbird/album-art/metadata-fetcher;1"
%}C++

