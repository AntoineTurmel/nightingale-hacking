/*
 //
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright© 2006 Pioneers of the Inevitable LLC
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the “GPL”).
// 
// Software distributed under the License is distributed 
// on an “AS IS” basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

#include "nsISupports.idl"
#include "IDatabaseResult.idl"

[scriptable, uuid(918745AE-0F40-4d08-BA4E-27A739459952)]
interface sbIDatabaseSimpleQueryCallback : nsISupports
{
  void OnQueryEnd(in sbIDatabaseResult dbResultObject, in wstring dbGUID, in wstring strQuery);
};

[scriptable, uuid(A901158A-3735-44fd-9AD2-1753F1407284)]
interface sbIDatabaseQueryCallback : nsISupports
{
  void OnQueryError(in PRInt32 dbError, in wstring dbGUID, in wstring strQuery);
  void OnQueryStart(in wstring dbGUID, in wstring strQuery);
  void OnQueryRow(in sbIDatabaseResult dbResultObject, in PRInt32 dbRowResult, in PRInt32 dbRowTotal);
  void OnQueryEnd(in sbIDatabaseResult dbResultObject, in wstring dbGUID, in wstring strQuery); 
};

[scriptable, uuid(192FE564-1D86-49c8-A31A-5798D62B2525)]
interface sbIDatabaseQuery : nsISupports
{
  void SetAsyncQuery(in PRBool bAsyncQuery);
  PRBool IsAyncQuery();
  
  void SetPersistentQuery(in PRBool bPersistentQuery);
  PRBool IsPersistentQuery();

  void AddSimpleQueryCallback(in sbIDatabaseSimpleQueryCallback dbPersistCB);
  void RemoveSimpleQueryCallback(in sbIDatabaseSimpleQueryCallback dbPersistCB);

  void SetDatabaseGUID(in wstring dbGUID);
  wstring GetDatabaseGUID();

  void AddQuery(in wstring strQuery);
  PRInt32 GetQueryCount();
  wstring GetQuery(in PRInt32 nIndex);

  void ResetQuery();
  
  sbIDatabaseResult GetResultObject();
  [noscript] sbIDatabaseResult GetResultObjectOrphan();

  PRInt32 GetLastError();
  void SetLastError(in PRInt32 dbError);

  PRInt32 Execute();
  PRInt32 WaitForCompletion();

  void AddCallback(in sbIDatabaseQueryCallback dbCallback);
  void RemoveCallback(in sbIDatabaseQueryCallback dbCallback);

  PRBool IsExecuting();
  PRInt32 CurrentQuery();

  PRBool Abort();
};