/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"

[scriptable, uuid(4187f9fa-1dd2-11b2-aa06-fa9e44f7e445)]
interface sbIWatchFolderService : nsISupports
{
  //
  // \brief Find out if the watch folder services are supported on 
  //        the current OS.
  // \return True if watch folder is supported, false if not.
  //
  readonly attribute boolean isSupported;

  //
  // \brief Find out if the watch folder services are currently running and
  //        actively updating the users library.
  // \return True if the watch folder is running, false if not.
  //
  readonly attribute boolean isRunning;

  //
  // \brief Add a absolute file path to be ignored by the watch folder service.
  //        This path will be ignored until it is removed via a call to
  //        |removeIgnorePath()|.
  // \param aFilePath The absolute path to start ignoring.
  // \param aIgnoreCount The number of times to ignore; 0 means infinite.  If
  //        The item is already being ignored, the count is incremented.
  // \see   removeIgnorePath
  //
  void addIgnorePath(in AString aFilePath, [optional] in long aIgnoreCount);

  //
  // \brief Remove a absolute file path from the ignored paths list of the
  //        watch folder service. All future events at the specified path
  //        will be processed by the watch folders service.
  // \param aFilePath The absolute path to stop ignoring.
  //
  void removeIgnorePath(in AString aFilePath);
};

