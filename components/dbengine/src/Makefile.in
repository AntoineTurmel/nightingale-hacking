#
# BEGIN SONGBIRD GPL
#
# This file is part of the Songbird web player.
#
# Copyright(c) 2005-2008 POTI, Inc.
# http://www.songbirdnest.com
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 2 (the GPL).
#
# Software distributed under the License is distributed
# on an AS IS basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
#
# END SONGBIRD GPL
#

DEPTH = ../../..
topsrcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

include $(DEPTH)/build/autodefs.mk

DYNAMIC_LIB = sbDBEngine

# preedTODO investigate
ifeq (windows,$(SB_PLATFORM))
C_FLAGS = -nologo \
          -W3 \
          -WL \
          -Zi \
          -GS \
          -c \
          -TC \
          -FI "mozilla-config.h" \
          -FI "xpcom/xpcom-config.h" \
          $(NULL)

C_EXTRA_DEFS += -DOS_WIN=1 \
                $(NULL)

ARFLAGS = -NOLOGO \
          -MACHINE:X86 \
          -SUBSYSTEM:WINDOWS \
          $(NULL)

ifdef DEBUG
  C_FLAGS += -Od \
             $(NULL)
else
  C_FLAGS += -Ox \
             $(NULL)
endif

ifneq ($(SB_USE_JEMALLOC),1)
  ifdef DEBUG
    C_FLAGS += -MTd
  else
    C_FLAGS += -MT
  endif
endif


endif

ifeq (macosx, $(SB_PLATFORM))
   export MACOSX_DEPLOYMENT_TARGET=10.4
endif

ifdef SB_SQLITE_DEBUG
  C_EXTRA_DEFS += -DSQLITE_DEBUG=1 \
                  $(NULL)
endif

C_EXTRA_DEFS += -DSQLITE_ALLOW_XTHREAD_CONNECT=1 \
                -DSQLITE_OMIT_LOAD_EXTENSION=1 \
                -DSQLITE_THREADSAFE=1 \
                -DSQLITE_ENABLE_MEMORY_MANAGEMENT=1 \
                -DTEMP_STORE=2 \
                -DNO_TCL \
                -DSQLITE_CORE \
                -DSQLITE_ENABLE_FTS3 \
                $(NULL)

ifeq (macosx, $(SB_PLATFORM))
  C_EXTRA_DEFS += -DSQLITE_ENABLE_LOCKING_STYLE=1 \
                  $(NULL)
endif

# If this is gcc, suppress some warnings when we compile sqlite
ifeq (gcc, $(CC))
  CFLAGS += -Wno-conversion \
            -Wno-pointer-arith \
            -Wno-cast-align \
            -Wno-uninitialized \
            -Wno-unused \
            $(NULL)
endif

C_SRCS = sqlite3.c \
         $(NULL)

C_INCLUDES = $(srcdir) \
             $(MOZSDK_INCLUDE_DIR) \
             $(NULL)

CPP_SRCS = DatabaseEngineComponent.cpp \
           DatabaseEngine.cpp \
           DatabaseQuery.cpp \
           DatabasePreparedStatement.cpp \
           DatabaseResult.cpp \
           $(NULL)

CPP_EXTRA_INCLUDES = $(srcdir) \
               $(DEPTH)/components/dbengine/public \
               $(DEPTH)/components/moz/strings/components/public \
               $(DEPTH)/components/moz/prompter/public \
               $(DEPTH)/components/metrics/public \
               $(topsrcdir)/components/include \
               $(topsrcdir)/components/intl/src \
               $(topsrcdir)/components/moz/strings/src \
               $(topsrcdir)/components/moz/threadpoolservice/src \
               $(topsrcdir)/components/moz/threads/src \
               $(MOZSDK_INCLUDE_DIR)/appcomps \
               $(MOZSDK_INCLUDE_DIR)/necko \
               $(MOZSDK_INCLUDE_DIR)/xpconnect \
               $(MOZSDK_INCLUDE_DIR)/unicharutil \
               $(MOZSDK_INCLUDE_DIR)/locale \
               $(MOZSDK_INCLUDE_DIR)/intl \
               $(MOZSDK_INCLUDE_DIR)/pref \
               $(MOZSDK_INCLUDE_DIR)/windowwatcher \
               $(MOZSDK_IDL_DIR) \
               $(NULL)

DYNAMIC_LIB_EXTRA_IMPORTS = plds4 \
                            $(NULL)
                            
DYNAMIC_LIB_STATIC_IMPORTS += \
   components/moz/strings/src/sbMozStringUtils \
   components/moz/threads/src/sbMozThreads \
   $(NULL)

ifeq (windows,$(SB_PLATFORM))
   DYNAMIC_LIB_STATIC_IMPORTS += unicharutil_external_s
endif

ifeq (macosx,$(SB_PLATFORM))
   DYNAMIC_LIB_EXTRA_IMPORTS +=  unicharutil_external_s
endif

ifeq (linux,$(SB_PLATFORM))
   DYNAMIC_LIB_EXTRA_IMPORTS += unicharutil_external_s 
   DYNAMIC_LIB_EXTRA_FLAGS += -Wl,-version-script,$(srcdir)/hide-sqlite.ver \
                              $(PTHREAD_LIBS) \
                              $(GLIB_LIBS) \
                              $(NULL)
   CPP_RAW_INCLUDES = $(GLIB_CFLAGS) \
                      $(NULL)
endif

ifeq (solaris,$(SB_PLATFORM))
   DYNAMIC_LIB_EXTRA_IMPORTS += unicharutil_external_s
   DYNAMIC_LIB_EXTRA_FLAGS += -M $(srcdir)/hide-sqlite.ver \
                              $(PTHREAD_LIBS) \
                              $(GLIB_LIBS) \
                              -lm \
                              $(NULL)
   CPP_RAW_INCLUDES = $(GLIB_CFLAGS) \
                      $(NULL)
endif

ifeq (macosx,$(SB_PLATFORM))
   DYNAMIC_LIB_EXTRA_FLAGS += -framework Foundation \
	                           -framework Cocoa
endif

LIBSONGBIRD_COMPONENT = SongbirdDatabaseEngineComponent

IS_COMPONENT = 1

include $(topsrcdir)/build/rules.mk
