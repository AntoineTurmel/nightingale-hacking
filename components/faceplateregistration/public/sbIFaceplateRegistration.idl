#include "nsISupports.idl"

/**       
 * \file sbIFaceplateRegistration.idl
 * \brief Songbird Faceplate Registration Interface file
 * This file contains interfaces used by the faceplate registration component
 * \sa sbFaceplateRegistration.js
 */
  
/**
 * \interface sbIFaceplatePane sbIFaceplatePane.h
 * \brief Songbird Faceplate Pane Interface
 * This interface manipulates faceplate panes created by the faceplate registration service 
 * \sa sbIFaceplateRegistration
 */
      
[scriptable, uuid(f69da1b6-6f8f-11db-968e-00e08161165f)]
interface sbIFaceplatePane : nsISupports
{
  AString getPaneId();
  AString getPaneName();
  void setLabel1(in AString text);
  void showLabel1();
  void hideLabel1();
  void setLabel2(in AString text);
  void showLabel2();
  void hideLabel2();
  void setProgressMeter(in PRInt32 percent);
  void showProgressMeter();
  void hideProgressMeter();
};

/**
 * \interface sbIFaceplateRegistration sbIFaceplateRegistration.h
 * \brief Songbird Faceplate Registration Interface
 * This is the main faceplate registration interface, used by faceplate providers to register their panes
 * \sa sbIFaceplatePane
 */
      
[scriptable, uuid(4ca8a00c-6f8f-11db-968e-00e08161165f)]
interface sbIFaceplateRegistration : nsISupports
{
  /**
   * \brief Create a new faceplate pane
   * This method creates a new faceplate pane and returns an interface to the pane object
   * \param paneid A string id for the pane.
   * \sa sbIFaceplatePane
   */
  sbIFaceplatePane registerPane(in AString paneid, in AString readablename);

  /**
   * \brief Destroys a faceplate pane
   * This method destroys a previously created faceplate pane
   * \param pane The pane to destroy
   * \sa sbIFaceplatePane
   */
  void unregisterPane(in AString paneid);





  PRInt32 getNumPanes();
  sbIFaceplatePane enumPane(in PRInt32 pane);

};


