/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

/**
 * \file sbIRemoteWebPlaylist.idl
 * \brief Definition of the Remote API WebPlaylist Interface
 */

#include "nsISupports.idl"

interface nsISimpleEnumerator;
interface sbIMediaListView;
interface sbIRemoteMediaList;

/**
 * \interface sbIRemoteWebPlaylist
 * \brief An interface to control a media list from remote web pages.
 *
 * TODO: Write this documentation
 *
 */
[scriptable, uuid(6aa00573-1aaa-4ff9-9080-fbd172669997)]
interface sbIRemoteWebPlaylist : nsISupports
{
  attribute sbIRemoteMediaList mediaList;

  readonly attribute nsISimpleEnumerator selection;

  void setSelectionByIndex(in unsigned long aIndex, in boolean aSelected);

  // ugh, nsIXPCScriptable take me away
  void addColumn( in AString aColumnType,
                  in AString aColumnName,
                  in AString aDisplayName,
                  in AString aBeforeColumnName,
                  in boolean aHidden,
                  in boolean aUserViewable,
                  in boolean aUserEditable,
                  in boolean aHasNullSort,
                  in unsigned long aNullSort,
                  in unsigned long aWidth );

  void showColumnBefore( in AString aColumnName,
                         in AString aBeforeColumnName );
};

