/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

/**
 * \file sbIRemoteWebPlaylist.idl
 * \brief Definition of the Remote API WebPlaylist Interface
 */

#include "nsISupports.idl"

interface nsISimpleEnumerator;
interface sbIMediaListView;
interface sbIRemoteMediaList;

/*
Class: WebPlaylist

The <WebPlaylist> UI object.

*/
/**
 * \interface sbIRemoteWebPlaylist
 * \brief An interface to control a media list from remote web pages.
 *
 * TODO: Write this documentation
 *
 */
[scriptable, uuid(6aa00573-1aaa-4ff9-9080-fbd172669997)]
interface sbIRemoteWebPlaylist : nsISupports
{
  /*
  Prop: mediaList

  The <MediaList> associated with this <WebPlaylist> instance.

  Type:
    <MediaList>
  */
  attribute sbIRemoteMediaList mediaList;

  /*
  Prop: selection

  The current selection in the <WebPlaylist>.

  Type:
    Enumerator, contains <MediaItems>.

  Example:
    (start code)
    //Get the current webplaylist.
    var webPlaylist = songbird.webPlaylist;
    

    //Get the currently selected mediaitems in the webplaylist.
    var selectedMediaItems = webPlaylist.selection;

    //Go through all the selected mediaitems.
    while(selectedMediaItems.hasMoreElements()) {
      var mediaItem = selectedMediaItems.getNext();

      //Do something with the mediaitem.
      ...
    }
    (end)

  See Also:
    Visit <http://www.xulplanet.com/references/xpcomref/ifaces/nsISimpleEnumerator.html> for nsISimpleEnumerator interface reference.
  */
  readonly attribute nsISimpleEnumerator selection;

  /*
  Func: setSelectionByIndex()

  Set the selection in the <WebPlaylist>.

  Prototype:
    setSelectionByIndex(Number index, Boolean selected)

  Parameters:
    index - Index of the item in the <WebPlaylist>. Index starts at 0.
    selected - Flag used for setting the selection state, may be true or false.

  Example:
    (start code)
    //Get the current webPlaylist.
    var webPlaylist = songbird.webPlaylist;

    //Select the first item.
    webPlaylist.setSelectionByIndex(0, true);

    //Select the third item.
    webPlaylist.setSelectionByIndex(2, true);

    //Unselect the first item.
    webPlaylist.setSelectionByIndex(0, false);
    (end)
  */
  void setSelectionByIndex(in unsigned long aIndex, in boolean aSelected);

  /*
  Func: addColumn()

  Add a column of data to the <WebPlaylist>.

  Prototype:
    addColumn(String columnType, 
              String columnName,  
              String displayName, 
              String beforeColumn, 
              Boolean hidden, 
              Boolean viewable, 
              Boolean editable,
              Boolean hasNullsort,
              Number nullsort,
              Number width)

  Parameters:
    columnType - The type of column.
    columnName - The name of the column.
    displayName - The displayed name of the column.
    beforeColumn - Insert this column before the column with this name. 
                   If an empty string is specified, the column is appended 
                   to the end of the existing columns.
    hidden - Hidden column by default.
    viewable - Column can be viewed by the user.
    editable - Column row cell values can be edited by the user.
    hasNullsort - Specify how null values will be sorted visually.
    nullsort - The type of null sorting desired.
    width - The default width of the column when displayed.
  
  Column Types:
    text - Plain text.
    datetime - A time interval.
    uri - A URI (web address).
    number - A number.
    button - A clickable button.
    image - A picture.
    downloadbutton - A button which, when clicked, initiates a download.
  
  Null Sorting Types:
    0 - Null values are infinitely small.  This is the default.
    1 - Null values are infinitely large.
    2 - Null values are always first (regardless of sort direction)
    3 - Null values are always last

  Example:
    (start code)
    // add a text column to the web playlist
    songbird.webPlaylist.addColumn( "text",
                                    "columnName",
                                    "column heading goes here",
                                    "", // add at the end
                                    false, // not hidden
                                    true, // can be viewed
                                    false, // read-only
                                    false, // no null sorting
                                    0,
                                    150); // pixels
    (end)

  See Also:
    <showColumnBefore()>
  */
  void addColumn( in AString aColumnType,
                  in AString aColumnName,
                  in AString aDisplayName,
                  in AString aBeforeColumnName,
                  in boolean aHidden,
                  in boolean aUserViewable,
                  in boolean aUserEditable,
                  in boolean aHasNullSort,
                  in unsigned long aNullSort,
                  in unsigned long aWidth );

  /*
  Func: showColumnBefore()

  Show a column before another column. This enables you to move
  columns around visually as well as specify where you might want your own
  column to be shown.

  Prototype:
    showColumnBefore(String columnName, String beforeColumn)

  Parameters:
    columnName - The name of column to move.
    beforeColumn - Show the column with columnName 
                   before the column with beforeColumn.

  Example:
    (start code)
    (end)

  See Also:
    <addColumn()>
  */
  void showColumnBefore( in AString aColumnName,
                         in AString aBeforeColumnName );
};

