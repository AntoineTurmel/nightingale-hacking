/*
 //
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

#include "nsISupports.idl"

#include "nsIProgressEventSink.idl"
#include "nsIPrompt.idl"
#include "nsIAuthPrompt.idl"

/**
 * \interface sbIPlaylistWriterListener
 * \brief [UNIMPLEMENTED UNTIL AFTER 0.3]
 */
[scriptable, uuid(3FE9E285-F0F8-4154-9C21-8B6E4B8EFA93)]
interface sbIPlaylistWriterListener : nsIProgressEventSink
{
};

/**
 * \interface sbIPlaylistWriter
 * \brief [UNIMPLEMENTED UNTIL AFTER 0.3]
 */
[scriptable, uuid(27B68B9B-E471-4367-B159-63B65C581847)]
interface sbIPlaylistWriter : nsISupports
{
  attribute sbIPlaylistWriterListener writerListener;

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  PRBool write(in AString aGUID, 
               in AString aSourcePlaylist,
               in AString aOutputURL,
               in AString aOutputContentType,
               out PRInt32 aErrorCode);

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  PRInt32 vote(in AString aURL);

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  AString name();

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  AString description();
  
  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  void supportedMIMETypes(out PRUint32 aMIMECount, 
    [array, size_is (aMIMECount), retval] out wstring aMIMETypes);

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  void supportedFileExtensions(out PRUint32 aExtCount, 
    [array, size_is (aExtCount), retval] out wstring aExts);
};

/**
 * \interface sbIPlaylistWriterManager
 * \brief [UNIMPLEMENTED UNTIL AFTER 0.3]
 */
[scriptable, uuid(CB6A505E-D8CB-4711-A50F-38439561C6D0)]
interface sbIPlaylistWriterManager : nsISupports
{
  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  PRInt32 write(in AString aGUID, 
    in AString aName,
    in AString aOutputURL,
    in AString aOutputContentType,
    in sbIPlaylistWriterListener aWriterListener);

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  void supportedMIMETypes(out PRUint32 aMIMECount, 
    [array, size_is (aMIMECount), retval] out wstring aMIMETypes);

  /**
   * \brief 
   *
   * \param 
   * \sa sbIDatabaseQuery
   */
  void supportedFileExtensions(out PRUint32 aExtCount, 
    [array, size_is (aExtCount), retval] out wstring aExts);
};