/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

#include "nsISupports.idl"
interface nsISimpleEnumerator;

/**       
 * \file sbIAddOnPanes.idl
 * \brief Songbird AddOn Panes Interface file
 * This file contains interfaces used by the addon panes management
 * \sa sbAddOnPanes.js
 */

[scriptable, uuid(f768570e-4026-4dd8-8c4a-a9dfbd0c6cc1)]
interface sbIAddOnPanesInstantiator : nsISupports
{
  readonly attribute AString contentGroup; 
  readonly attribute AString contentUrl; 
  readonly attribute AString contentTitle; 

  void loadContent(in AString aContentUrl, 
                   in AString aContentTitle, 
                   in PRInt32 aContentDefaultWidth, 
                   in PRInt32 aContentDefaultHeight);
  void collapse();
  void expand();
  void toggle();
  readonly attribute PRBool collapsed;
};


[scriptable, uuid(296a0efc-baf2-416d-9392-c2f2fd8a4a80)]
interface sbIAddOnPaneInfo : nsISupports
{
  readonly attribute AString contentUrl;
  readonly attribute AString contentTitle;
  readonly attribute PRInt32 defaultWidth;
  readonly attribute PRInt32 defaultHeight;
  readonly attribute AString suggestedContentGroup; 
};

  
/**
 * \interface sbIAddOnPanes sbIAddOnPanes.h
 * \brief Songbird AddOnPanes Interface
 * This is the main addon panes management interface, used to register and list panes and instantiators.
 */
      
[scriptable, uuid(64dbfa0b-9ca6-42fe-a81e-caab24ad7a5b)]
interface sbIAddOnPanes : nsISupports
{
  void registerInstantiator(in sbIAddOnPanesInstantiator aInstantiator);
  void unregisterInstantiator(in sbIAddOnPanesInstantiator aInstantiator);

  void registerContent(in AString aContentUrl,
                       in AString aContentTitle,
                       in PRInt32 aDefaultWidth,
                       in PRInt32 aDefaultHeight,
                       in AString aSuggestedContentGroup);
  
  void unregisterContent(in AString aContentUrl);

  readonly attribute nsISimpleEnumerator contentList;
  readonly attribute nsISimpleEnumerator instantiatorsList;
};


