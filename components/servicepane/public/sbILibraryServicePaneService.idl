/* vim: ts=2 sw=2 expandtab
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILibraryServicePaneService.idl
 * \brief Interface to the library service pane provider
 */

#include "nsISupports.idl"

interface sbIServicePaneNode;
interface sbILibrary;
interface sbILibraryResource;

/**
 * \interface sbILibraryServicePaneService
 * \brief Provides information about libraries and medialists needed by the service pane
 */
[scriptable, uuid(961b6911-c48a-4a48-a3a3-596f5fa68b7c)]
interface sbILibraryServicePaneService : nsISupports {

  /* \brief Suggest a library for creating a new media list
   *
   * \param aMediaListType string identifying a media list type, eg "simple"
   * \param aNode A service pane node to provide context for new list creation
   * \return a library, or null if this service can't suggest anything based on
   *         the given context and type.
   */
  sbILibrary suggestLibraryForNewList (in AString aMediaListType,
                                       in sbIServicePaneNode aNode);

  /* \brief Attempts to create a service pane node for a given library.
   *
   * The node is created hidden. After you have parented or positioned your
   * node appropriately, show it by changing the hidden attribute to false
   * (node.hidden = false).
   *
   * \param aLibrary an sbILibrary.
   * \return a service pane node that represents the given library, null
   *         if aLibrary is not an sbILibrary.
   */
  sbIServicePaneNode createNodeForLibrary (in sbILibrary aLibrary);

  /* \brief Attempt to get a service pane node for the given library resource
   *
   * \param aResource an sbIMediaItem, sbIMediaItem, or sbILibrary
   * \return a service pane node that represents the given resource, if one exists
   */
  sbIServicePaneNode getNodeForLibraryResource (in sbILibraryResource aResource);


  /* \brief Attempt to get a library resource for the given service pane node.
   *
   * Note that there is no guarantee that hidden service pane nodes
   * will have corresponding library resources
   *
   * \param aNode
   * \return a sbIMediaItem, sbIMediaItem, sbILibrary, or null
   */
  sbILibraryResource getLibraryResourceForNode (in sbIServicePaneNode aNode);
};
