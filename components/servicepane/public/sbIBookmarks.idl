/* vim: ts=2 sw=2 expandtab
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbIBookmarksidl
 * \brief Definition of the sbIBookmarks interface
 */

#include "nsISupports.idl"

interface sbIServicePaneNode;

/**
 * \interface sbIBookmarks
 * \brief Definition of the sbIBookmarks interface
 *
 *  TODO: Write this documentation.
 *
 */
[scriptable, uuid(12526a6a-3edd-4853-97a9-2a729d883178)]

interface sbIBookmarks : nsISupports {
  /* \brief Add a bookmark
   * Add a bookmark to the service pane. It will be added in the default
   * folder. The bookmark's node object will be returned.
   * If a bookmark for the given URL already exists then null will be
   * returned.
   * \param aURL The URL of the page to bookmark
   * \param aTitle The title of the bookmark
   * \param aIconURL The url of the icon to associate with the bookmark
   * \return a new bookmark node or null if the bookmark already exists
   */
  sbIServicePaneNode addBookmark (in AString aURL,
                                  in AString aTitle,
                                  in AString aIconURL);

  /* \brief Add a bookmark to a specific service pane node (folder)
   * Given a folder, add a bookmark to that folder.  The bookmark's node
   * object will be returned.  The folder node can be the node returned
   * by addFolder() or getNode()
   * If a bookmark for the given URL already exists then null will be
   * returned.
   * \param aURL The URL of the page to bookmark
   * \param aTitle The title of the bookmark
   * \param aIconURL The URL of the icon to associate with the bookmark
   * \param aParent The parent node (folder) to add the bookmark to
   * \param aBefore The node (bookmark) to insert this bookmark before
   * \return a new bookmark node or null if the bookmark already exists
   * \see addBookmark()
   */
  sbIServicePaneNode addBookmarkAt (in AString aURL,
                                  in AString aTitle,
                                  in AString aIconURL,
                                  in sbIServicePaneNode aParent,
                                  in sbIServicePaneNode aBefore);

  /* \brief Add a folder
   * Add a bookmark folder in the service pane.
   * \param aTitle The title of the folder
   * \return a new folder node
   */
  sbIServicePaneNode addFolder (in AString aTitle);
  
  /* \brief Test if a bookmark exists for the given URL
   * \param aURL the URL to test
   * \return true if the bookmark exists, false if it does not
   */
  boolean bookmarkExists (in AString aURL);
};
