/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */

/**       
 * \file sbIFileSystemObserverService.idl
 * \brief Directory change monitoring system.
 *
 * This file contains the interface to the directory monitoring component.
 * It provides system-level independent file monitoring service for XPCOM.
 *
 *  MacOS X: kqueue
 *  Linux: inotify
 *  Windows: TODO: Write Me!
 *
 */
 
#include "nsISupports.idl"

interface nsIFile;


/**
 * \interface sbIFileObserver
 * \brief File listening observer callback interface
 * This interface should be used by any component that wants to listen to
 * file events.
 */
[scriptable, uuid(DC5DB1A9-0F26-496A-A648-B07A250052D1)]
interface sbIFileSystemObserver : nsISupports
{
  /**
   * Callback function when a file changed.
   * \param aFileSpec A file reference to the file that was changed.
   */
  void onFileSystemChanged(in nsIFile aFileSpec);
  
  /**
   * Callback function when a file has been renamed.
   * \param aFileSpec The name of the file that was removed. This is NOT the
   *                  reference to where the file was moved to.
   */
  void onFileSystemRenamed(in nsIFile aFileSpec);
  
  /**
   * Callback function when a file is removed.
   * \param aFileSpec A file reference to the file that was removed.
   */
  void onFileSystemRemoved(in nsIFile aFileSpec);
};


/**
 * \interface sbIFileSystemObserverService
 * \brief File System observer service.
 * This interface provides a OS-generic file-system notification system. 
 */
[scriptable, uuid(ECDF6F45-510A-43CF-8CBB-87026C940640)]
interface sbIFileSystemObserverService : nsISupports
{
  /**
   * Add a file-system resource observer.
   * \param aFileSpec A reference to the file-system resource to observe.
   * \param aListener A observer callback interface.
   */
  void addResourceObserver(in nsIFile aFileSpec, 
                           in sbIFileSystemObserver aObserver);
  
  /**
   * Remove a file-system resource observer.
   * \param aFileSpec A reference to the file-system resource to stop observing.
   * \param aListener A observer callback interface.
   */
  void removeResourceObserver(in nsIFile aFileSpec,
                              in sbIFileSystemObserver aObserver);
};
