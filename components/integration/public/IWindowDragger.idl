/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2006 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
 */
#include "nsISupports.idl"

/**       
 * \file IWindowDragger.idl
 * \brief Window dragging service interface file
 * This file contains the interface to the window dragging service, used to drag a window
 * without losing mousemove messages when the mouse moves outside the rect of the window
 * being dragged
 */

/**
 * \interface sbIWindowDraggerCallback IWindowDragger.h
 * \brief Window dragging callback interface
 * This is an interface to a callback method used to detect the end of a window drag operation
 */
[scriptable, uuid(55bc09ea-6ded-11db-968c-00e08161165f)]
interface sbIWindowDraggerCallback : nsISupports
{
  /**
   * \brief Window Dragger callback
   * This callback method is triggered when the mouse button is released at the end of a drag operation
   */
  void onWindowDragComplete();
};


/**
 * \interface sbIWindowDragger IWindowDragger.h
 * \brief Window dragging service interface
 * This is an interface to the window dragging service, used to drag a window without 
 * losing mousemove messages when the mouse moves outside the rect of the window being 
 * dragged
 */
[scriptable, uuid(47fcfb00-6ded-11db-968c-00e08161165f)]
interface sbIWindowDragger : nsISupports
{
  /**
   * \brief Begin dragging
   * This method takes over window dragging and returns once the mouse button
   * has been released.
   * \param dockDistance The minimum distance between the edge of the window and the 
   * edge of the desktop area before automatic docking is triggered (use 0 to disable
   * docking)
   * \param cb The callback object to use
   * \sa sbIWindowDraggerCallback
   */
  void beginWindowDrag( in PRInt32 dockDistance, in sbIWindowDraggerCallback cb );
};

