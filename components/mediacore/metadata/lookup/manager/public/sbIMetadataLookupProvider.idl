/*
 *=BEGIN SONGBIRD GPL
 *
 * This file is part of the Songbird web player.
 *
 * Copyright(c) 2005-2009 POTI, Inc.
 * http://www.songbirdnest.com
 *
 * This file may be licensed under the terms of of the
 * GNU General Public License Version 2 (the ``GPL'').
 *
 * Software distributed under the License is distributed
 * on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
 * express or implied. See the GPL for the specific language
 * governing rights and limitations.
 *
 * You should have received a copy of the GPL along with this
 * program. If not, go to http://www.gnu.org/licenses/gpl.html
 * or write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 *=END SONGBIRD GPL
 */

/**
  * \file sbIMetadataLookupProvider.idl
  * \brief A metadata lookup service provider
  * \sa sbICDTOC
  */
#include "nsISupports.idl"
#include "sbIMetadataLookupData.idl"

interface sbICDTOC;

/**
  * \interface sbIMetadataLookupProvider sbIMetadataLookupProvider.h
  * \brief A metadata lookup service provider
  */
[scriptable, uuid(81366f9a-1dd2-11b2-a9ec-d70de1d5278b)]
interface sbIMetadataLookupProvider : nsISupports
{
  /**
   * \brief The name this provider is identified by.  Used by the metadata
   * lookup manager's getProvider() method
   */
  readonly attribute ACString name;

  /**
   * \brief Purely descriptive and are for some future use, maybe when/if
   * we make a preference pane for viewing the different providers and
   * reprioritising them, etc.  would be good to have some sort of
   * description & URL to hit up for more info on each provider
   */
  readonly attribute AUTF8String description;
  readonly attribute ACString infoURL;

  /*
  ACString calculateIdFromTracks([array, size_is(numTracks)] in aTracks,
                     in unsigned long numTracks);
  ACString calculateIdFromAlbum(in sbIMetadataAlbumDetail aAlbum);

  sbIMetadataLookupJob queryId(in AUTF8String aID);
  sbIMetadataLookupJob submitID(in sbIMetadataAlbumDetail aAlbum);
  */

  /**
   * \brief Given a CD TOC (sbICDTOC), lookup the results for matching albums
   * from this provider.  Returns a metadata lookup job from which you can
   * get sbIMetadataAlbumDetail objects.  You must then call getAlbumDetail()
   * to fill out the exact detail information for each album (such as track
   * listings, etc.)
   * \return sbIMetadataLookupJob
   */
  sbIMetadataLookupJob queryDisc(in sbICDTOC aCDTOC);
  
  /**
   * \brief Get follow-up album detailed information such as track listing,
   * etc.
   * \return sbIMetadataLookupJob
   */
  sbIMetadataLookupJob getAlbumDetail(in sbIMetadataAlbumDetail aAlbum);
};
