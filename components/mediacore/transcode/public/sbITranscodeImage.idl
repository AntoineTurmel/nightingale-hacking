/*
//
// BEGIN SONGBIRD GPL
// 
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2009 POTI, Inc.
// http://songbirdnest.com
// 
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
// 
// Software distributed under the License is distributed 
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either 
// express or implied. See the GPL for the specific language 
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this 
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc., 
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// END SONGBIRD GPL
//
*/

/**
 * \file sbITranscodeImage.idl
 * \brief An interface for transcoding images.
 */
#include "nsISupports.idl"

interface nsIInputStream;
interface nsIFile;

/**
 * \interface sbITranscodeImage sbITranscodeImage.h
 * \brief An object capable of transcoding a source still image to a destination
 *        format, possibly scaling.
 */
[scriptable, uuid(341c3d24-ec0e-49bb-908f-808bf8d7e297)]
interface sbITranscodeImage : nsISupports
{
  /**
   * \brief Transcode from input file to output stream, given chosen mime types
   *        and target size.
   *
   * Transcode the image found in aInputFile (of type aInputMimeType) to
   * type aOutputMimeType (e.g. "image/jpeg"), and write the encoded output
   * to a stream that is returned.
   * aOutputFile.
   * 
   * \param aInputFile The input image file
   * \param aInputMimeType The mime type of the image (e.g. image/png)
   * \param aOutputMimeType The mime type of the output image (e.g. image/jpeg)
   * \param aWidth The width of the destination file in pixels. May be 0 to
   *               use the original width of the input.
   * \param aHeight The height of the destination file in pixels. May be 0 to
   *                use the original height of the input.
   * \return aEncodedStream The input stream that the encoded data can be read
   *                        from
  */
  nsIInputStream transcodeImage(in nsIFile aInputFile,
                                in ACString aInputMimeType,
                                in ACString aOutputMimeType,
                                in long aWidth,
                                in long aHeight);
};

