/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILocalDatabaseLibrary.idl
 * \brief Definition of the sbILocalDatabaseLibrary interfaces
 */

#include "nsISupports.idl"

interface nsIURI;
interface nsIArray;
interface sbIMediaItem;
interface sbIDatabaseQuery;
interface sbILocalDatabasePropertyCache;
interface sbILocalDatabaseResourcePropertyBag;

/**
 * \interface sbILocalDatabaseLibrary
 * \brief [USER CODE SHOULD NOT REFERENCE THIS CLASS]
 */
[scriptable, uuid(2fbd49f8-3c95-437b-b3ac-efaeefb86d6a)]
interface sbILocalDatabaseLibrary : nsISupports
{
  readonly attribute AString databaseGuid;

  /**
   * \brief Returns the folder in which the database is stored.
   *
   * This can be null to indicate that the library lives in the default location
   */
  readonly attribute nsIURI databaseLocation;

  readonly attribute sbILocalDatabasePropertyCache propertyCache;

  ACString getContractIdForGuid(in AString aGuid);

  unsigned long getMediaItemIdForGuid(in AString aGuid);

  sbILocalDatabaseResourcePropertyBag getPropertiesForGuid(in AString aGuid);

  void notifyListenersItemUpdated(in sbIMediaItem aItem);

  sbIDatabaseQuery createQuery();

  /**
   * \brief Return a filled query to create many media items from a list of URIs
   *
   * Note: You must call sbILibrary::batchNotifyAdded() on the returned list 
   * after the query fully completes!
   *
   * \param aURLCount The number of items in the url array.
   * \param aURLArray An array of strings of urls to media
   * \param aGUIDArray [out] An array of strings of guids for the new media items
   * \return sbIDatabaseQuery The composed query
   */
  sbIDatabaseQuery batchCreateMediaItemsQuery(in PRUint32 aURLCount, [array, size_is (aURLCount)] in wstring aURLArray, out nsIArray aGUIDArray ); 
};


