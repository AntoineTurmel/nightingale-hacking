/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILocalDatabasePropertyCache.idl
 * \brief Definition of the sbILocalDatabasePropertyCache interfaces
 */

#include "nsISupports.idl"

interface sbILocalDatabaseResourcePropertyBag;

/**
 * \interface sbILocalDatabasePropertyCache
 * \brief [USER CODE SHOULD NOT REFERENCE THIS CLASS]
 */
[scriptable, uuid(26bba3ab-a69e-4600-8e0d-3fb2f6c9baf8)]
interface sbILocalDatabasePropertyCache : nsISupports
{
  readonly attribute boolean writePending;

  void getProperties([array, size_is(aGUIDArrayCount)] in wstring aGUIDArray,
                     in unsigned long aGUIDArrayCount,
                     out unsigned long aPropertyArrayCount,
                     [retval, array, size_is(aPropertyArrayCount)]
                       out sbILocalDatabaseResourcePropertyBag aPropertyArray);

  void setProperties([array, size_is(aGUIDArrayCount)] in wstring aGUIDArray,
                     in unsigned long aGUIDArrayCount,
                     [array, size_is(aPropertyArrayCount)] in 
                       sbILocalDatabaseResourcePropertyBag aPropertyArray,
                     in unsigned long aPropertyArrayCount,
                     in boolean aWriteThroughNow);

  void cacheProperties([array, size_is(aGUIDArrayCount)] in wstring aGUIDArray,
                     in unsigned long aGUIDArrayCount);

  void write();

  unsigned long getPropertyDBID(in AString aPropertyID);
};
