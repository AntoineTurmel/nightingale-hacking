/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbISearchableMediaList.idl
 * \brief Definition of the sbISearchableMediaList interface
 * \sa sbIMediaList.idl
 */

#include "nsISupports.idl"

interface nsIStringEnumerator;
interface nsIPropertyBag;

/**
* \interface sbISearchableMediaList
* \brief Control the search settings on a media list
*
* Media lists that implement this interface declare themselves as searchable.
* The search is applied as an additional constraint to the list.
*
* \sa sbIMediaList
*/
[scriptable, uuid(1db2f57c-5fcf-4fe0-8951-c1b40d9f7bf6)]
interface sbISearchableMediaList : nsISupports
{
  /**
   * \brief Get a list of all the properties that can be searched
   */
  readonly attribute nsIStringEnumerator searchableProperties;

  /**
   * \brief The current search
   */
  readonly attribute nsIPropertyBag currentSearch;

  /**
   * \brief Set a new search
   * \param aSearch A property bag of search parameters.  The keys map to
   * properties and the values are the search value for each property.  A
   * null key will search all searchable properties with its value.
   */
  void setSearch(in nsIPropertyBag aSearch);

  /**
   * \brief Clear the search
   */
  void clearSearch();
};

