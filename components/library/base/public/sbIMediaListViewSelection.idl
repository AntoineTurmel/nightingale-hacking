/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2008 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbIMediaListViewSelection.idl
 */

#include "nsISupports.idl"

interface nsISimpleEnumerator;
interface sbIMediaItem;

/**
 * \interface sbIMediaListViewSelectionListener
 * \brief Listener interface that gets notified on selection changes
 */
[scriptable, uuid(8e4e9f65-9c90-4381-a8ed-b8aa2d1ad028)]
interface sbIMediaListViewSelectionListener : nsISupports
{
  /**
   * \brief Called when the selection has changed
   */
  void onSelectionChanged();

  /**
   * \brief Called when the current index of has changed
   * \see sbIMediaListViewSelection::currentIndex
   */
  void onCurrentIndexChanged();
};

/**
 * \interface sbIMediaListViewSelection
 * \brief Manage the selection of items within a view.  This interface is a
 *        subset of nsITreeView.
 */
[scriptable, uuid(9a1b097d-c649-4a02-a7e7-16adcc2c899e)]
interface sbIMediaListViewSelection : nsISupports
{
  /**
   * \brief The number of selected items
   */
  readonly attribute long count;

  /**
   * \brief The index of the current media item.
   */
  attribute long currentIndex;

  /**
   * \brief The current media item
   */
  readonly attribute sbIMediaItem currentMediaItem;

  /**
   * \brief The shift select pivot keeps the index from which the next
   *        selection range should start on a selection augmentation
   */
  readonly attribute long shiftSelectPivot;

  /**
   * \brief Indicates whether or not if the item at the specified index
   *        is part of the selection
   * \param aIndex Index of the item in the view
   */
  boolean isSelected(in long aIndex);

  /**
   * \brief Get an enumerator of all the selected media items.  The elements
   *        contained in the enumerator implement sbIIndexedMediaItem which
   *        allows the consumer of the enumerator to know the item and the
   *        index of the item.
   */
  readonly attribute nsISimpleEnumerator selectedMediaItems;

  /**
   * \brief Deselect all items and select the item at the given index
   * \param aIndex Index of the item in the view
   */
  void select(in long aIndex);

  /**
   * \brief Toggle the selection state of the item at the given index
   * \param aIndex Index of the item in the view
   */
  void toggleSelect(in long aIndex);

  /**
   * \brief Select the range specified by the indices.  If aAugment is true,
   *        then we add the range to the selection without clearing anything
   *        else.  If aAugment is false, everything is cleared except for the
   *        specified range.
   * \param aStartIndex Index of the starting item in the view.  If the
   *        aStartIndex is -1, the range starts at the shift select pivot.  If
   *        the shift select pivot is -1, then the range starts at the current
   *        index.  If the current index is -1, then the range starts at
   *        aEndIndex.
   * \param aEndIndex Index of the ending item in the view.  This must be a
   *        valid row.
   * \param aAugment True to augment the current selection, false to replace.
   */
  void rangedSelect(in long aStartIndex,
                    in long aEndIndex,
                    in boolean aAugment);

  /**
   * \brief Clear the specified range
   * \param aStartIndex Index of the starting item in the view
   * \param aEndIndex Index of the ending item in the view
   */
  void clearRange(in long aStartIndex, in long aEndIndex);

  /**
   * \brief Shift the selection.  This is used when items are added or removed
   *        from the view.  Currently, this only impacts the current item index
   *        and the shift pivot since item selection is not tracked by index.
   * \param aIndex Index of the point in the view where the change occurred
   * \param aCount Number of items that were added or removed.  A positive
   *               number indicates addition, negative indicates removeal.
   */
  void adjustSelection(in long aIndex, in long aCount);

  /**
   * \brief Clears the selection
   */
  void clearSelection();

  /**
   * \brief Selects all items
   */
  void selectAll();

  /**
   * \brief Add a listener to the selection.  It will be notified when the
   *        selection or current index changes
   * \param aListener The listener to add
   */
  void addListener(in sbIMediaListViewSelectionListener aListener);

  /**
   * \brief Remove a listener from the selection
   * \param aListener The listener to remove
   */
  void removeListener(in sbIMediaListViewSelectionListener aListener);

  /**
   * \brief When set to true, notifications are not sent to the listeners
   */
  attribute boolean selectionNotificationsSuppressed;
};
