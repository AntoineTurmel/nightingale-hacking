/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILibraryResource.idl
 * \brief Definition of the sbILibraryResource interface
 */

#include "nsISupports.idl"

interface nsIStringEnumerator;
interface nsIURI;
interface sbIPropertyArray;

/**
* \interface sbILibraryResource
* \brief General interface to data resources
*
* This interface should be implemented by each object of the data model,
* including libraries, media items, and media lists.
*
* \sa sbILibraryPropertiesManager
*/
[scriptable, uuid(9f36cf73-a3c4-408b-9161-3ef59b8c3f2c)]
interface sbILibraryResource : nsISupports
{
  /**
   * \brief The guid of this resource
   */

  /*
  Prop: guid

  The global unique identifier of this Library object.
  
  Type:
    String

  Note:
    <MediaItem>, <MediaList> and <Library> are all Library Objects.
  */
  readonly attribute AString guid;

  /**
   * \brief The creation time of this resource as a unix timestamp
   */

  /*
  Prop: created

  The creation time of this Library object.

  Type:
    Number, in (TODO units???)

  Note:
    <MediaItem>, <MediaList> and <Library> are all Library Objects.
  */
  readonly attribute long long created;

  /**
   * \brief The last update time of this resource as a unix timestamp
   */

  /*
  Prop: updated

  The last update time of this Library object. Changing any property
  constitutes an update.

  Type:
    Number, in (TODO units???)
  
  Note:
    <MediaItem>, <MediaList> and <Library> are all Library Objects.
  */
  readonly attribute long long updated;

  /**
   * \brief Returns a string enumerator of the names of all the properties
   *        set on this resource
   */
  readonly attribute nsIStringEnumerator propertyNames;

  /**
   * \brief Get the value of a property of this resource
   *
   * This method will *never* throw. If a value doesn't exist it will return a
   * special "void" string that behaves just like an empty string except that
   * the IsVoid() method will return PR_TRUE for those who care.
   *
   * \param aName Name of the property to get
   * \return Value of the requested property
   */

  /*
  Func: getProperty()

  Get the value of a property for this library object.

  Prototype:
    String getProperty(String name)

  Parameters:
    name - The name property value requested.

  Example:
    (start code)
    //This example assumes you already have created 
    //a mediaitem and assigned it to mediaItem.

    //Get the albumName property from a mediaitem.
    var albumName = mediaItem.getProperty("http://songbirdnest.com/data/1.0#albumName");
    (end)

  Standard Properties:
    http://songbirdnest.com/data/1.0#albumArtURL - The address of the album art
    http://songbirdnest.com/data/1.0#albumName - The name of the album
    http://songbirdnest.com/data/1.0#artistName - The name of the artist
    http://songbirdnest.com/data/1.0#columnSpec - Column display data
    http://songbirdnest.com/data/1.0#composerName - The name of the composer
    http://songbirdnest.com/data/1.0#defaultColumnSpec - Default column display data
    http://songbirdnest.com/data/1.0#discNumber - The number of disc this media appears on in a compilation
    http://songbirdnest.com/data/1.0#downloadDetails - Download state and progress
    http://songbirdnest.com/data/1.0#duration - The duration of this media, in milliseconds
    http://songbirdnest.com/data/1.0#genre - The genre of this media
    http://songbirdnest.com/data/1.0#hidden - Whether this item should be hidden from the user
    http://songbirdnest.com/data/1.0#isPartOfCompilation - Whether this media is part of a compilation
    http://songbirdnest.com/data/1.0#lastPlayTime - The last time the media was played
    http://songbirdnest.com/data/1.0#lyricistName - The name of the lyricist
    http://songbirdnest.com/data/1.0#lyrics - The lyrics of the media
    http://songbirdnest.com/data/1.0#originPage - The page this media was located on
    http://songbirdnest.com/data/1.0#originPageTitle - The title of the page this media was located on
    http://songbirdnest.com/data/1.0#originURL - The URL this media was retrived from
    http://songbirdnest.com/data/1.0#playCount - The number of times this media has been played
    http://songbirdnest.com/data/1.0#producerName - The name of the producer
    http://songbirdnest.com/data/1.0#recordLabelName - The name of the record label
    http://songbirdnest.com/data/1.0#skipCount - The number of times this item was skipped
    http://songbirdnest.com/data/1.0#totalDiscs - The total number of discs in a compilation
    http://songbirdnest.com/data/1.0#totalTracks - The total number of tracks in a compilation
    http://songbirdnest.com/data/1.0#trackName - The name of the track
    http://songbirdnest.com/data/1.0#trackNumber - The track number of this media in a compilation
    http://songbirdnest.com/data/1.0#year - The year the media was released

  See Also:
    <setProperty()>
  */
  AString getProperty(in AString aName);

  /**
   * \brief Set the value of a property on this resource
   * \param aName Name of the property to set
   * \param aValue New value for the specified property
   */

  /*
  Func: setProperty()

  Set the value of a property for this library object.

  Prototype:
    setProperty(String name, String value)

  Example:
    (start code)
    //This example assumes you already have created 
    //a mediaitem and assigned it to mediaItem.

    //Set the albumName property from a mediaitem.
    mediaItem.setProperty("http://songbirdnest.com/data/1.0#albumName", "Let Us Play");
    (end)

  Standard Properties:
    http://songbirdnest.com/data/1.0#albumArtURL - The address of the album art
    http://songbirdnest.com/data/1.0#albumName - The name of the album
    http://songbirdnest.com/data/1.0#artistName - The name of the artist
    http://songbirdnest.com/data/1.0#columnSpec - Column display data
    http://songbirdnest.com/data/1.0#composerName - The name of the composer
    http://songbirdnest.com/data/1.0#defaultColumnSpec - Default column display data
    http://songbirdnest.com/data/1.0#discNumber - The number of disc this media appears on in a compilation
    http://songbirdnest.com/data/1.0#downloadDetails - Download state and progress
    http://songbirdnest.com/data/1.0#duration - The duration of this media, in milliseconds
    http://songbirdnest.com/data/1.0#genre - The genre of this media
    http://songbirdnest.com/data/1.0#hidden - Whether this item should be hidden from the user
    http://songbirdnest.com/data/1.0#isPartOfCompilation - Whether this media is part of a compilation
    http://songbirdnest.com/data/1.0#lyricistName - The name of the lyricist
    http://songbirdnest.com/data/1.0#lyrics - The lyrics of the media
    http://songbirdnest.com/data/1.0#producerName - The name of the producer
    http://songbirdnest.com/data/1.0#recordLabelName - The name of the record label
    http://songbirdnest.com/data/1.0#totalDiscs - The total number of discs in a compilation
    http://songbirdnest.com/data/1.0#totalTracks - The total number of tracks in a compilation
    http://songbirdnest.com/data/1.0#trackName - The name of the track
    http://songbirdnest.com/data/1.0#trackNumber - The track number of this media in a compilation
    http://songbirdnest.com/data/1.0#year - The year the media was released

  See Also:
    <getProperty()>
  */
  void setProperty(in AString aName, in AString aValue);

  /**
   * \brief Get properties from this resource in a property array
   * \param aPropertyNames A property array containing the names of the
   *        properties you wish to retrieve.  The values of these properties
   *        are disregarded.  If this parameter is null or not specified, all
   *        properties will be returned
   * \return A property array containing the requested properties and values
   */
  sbIPropertyArray getProperties([optional] in sbIPropertyArray aPropertyNames);

  /**
   * \brief Sets the properties and values in the supplied property array to
   *        this resource.  This works as if you called setProperty on each
   *        property in the array
   * \param aProperties Properties to set to this resource
   *
   * \note Until bug 3694 is fixed, it is possible for this method to throw
   * NS_ERROR_INVALID_ARG if one of the property values in the array is not
   * valid.  This will have no side effects -- if an error is thrown, the
   * resource will not be modified.  This will go away when the bug is fixed
   * as it will then be impossible to have invalid properties in the array
   */
  void setProperties(in sbIPropertyArray aProperties);

  /**
   * \brief Tests the equality of two library resources.
   */
  boolean equals(in sbILibraryResource aOtherLibraryResource);
};


