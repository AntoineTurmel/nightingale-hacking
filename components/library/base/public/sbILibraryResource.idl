/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbILibraryResource.idl
 * \brief Definition of the sbILibraryResource interface
 */

#include "nsISupports.idl"

interface nsIURI;

/**
* \interface sbILibraryResource
* \brief General interface to data resources
*
* This interface should be implemented by each object of the data model,
* including libraries, media items, and media lists.
*
* \sa sbILibraryPropertiesManager
*/
[scriptable, uuid(9f36cf73-a3c4-408b-9161-3ef59b8c3f2c)]
interface sbILibraryResource : nsISupports
{
  /**
   * \brief A unique uri for this resource
   */
  readonly attribute nsIURI uri;

  /**
   * \brief The creation time of this resource as a unix timestamp
   */
  readonly attribute long created;

  /**
   * \brief The last update time of this resource as a unix timestamp
   */
  readonly attribute long updated;

  /**
   * \brief If this is enabled anytime setProperty is called it will
   * cause the property to immediately be updated.
   */
  attribute boolean writeThrough;
  
  /**
   * \brief Indicates if there is a pending write operation.
   * This boolean is meaningless if you have writeThrough enabled.
   */
  readonly attribute boolean writePending;

  /**
   * \brief Get the value of a property of this resource
   * \param aName Name of the property to get
   * \return Value of the requested property
   */
  AString getProperty(in AString aName);

  /**
   * \brief Set the value of a property on this resource
   * \param aName Name of the property to set
   * \param aValue New value for the specified property
   */
  void setProperty(in AString aName, in AString aValue);

  /**
   * Bulk get/set?
   */
/*
  getProperties();
  setProperties(?);
*/

  /**
   * \brief Finish all pending write operations.
   */
  void write();
};


