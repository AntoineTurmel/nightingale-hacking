/*
//
// BEGIN SONGBIRD GPL
//
// This file is part of the Songbird web player.
//
// Copyright(c) 2005-2007 POTI, Inc.
// http://songbirdnest.com
//
// This file may be licensed under the terms of of the
// GNU General Public License Version 2 (the "GPL").
//
// Software distributed under the License is distributed
// on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either
// express or implied. See the GPL for the specific language
// governing rights and limitations.
//
// You should have received a copy of the GPL along with this
// program. If not, go to http://www.gnu.org/licenses/gpl.html
// or write to the Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
//
// END SONGBIRD GPL
//
*/

/**
 * \file sbISortableMediaList.idl
 * \brief Definition of the sbISortableMediaList interface
 * \sa sbIMediaList.idl
 */

#include "nsISupports.idl"

interface nsIStringEnumerator;
interface nsIPropertyBag;

/**
* \interface sbISortableMediaList
* \brief Control the sort settings on a media list
*
* Media lists that implement this interface declare themselves as sortable.
*
* \sa sbIMediaList
*/
[scriptable, uuid(a3579817-5ba7-49e6-98ad-5ab8270d1848)]
interface sbISortableMediaList : nsISupports
{
  /**
   * \brief A list of properties that support sorting
   */
  readonly attribute nsIStringEnumerator sortableProperties;

  /**
   * \brief The current sort
   */
  readonly attribute nsIPropertyBag currentSort;

  /**
   * \brief Set a new sort for the media list
   * \param aSort A property bag containing the sort parameters.  The keys
   * map to sortable properties and the value for each key is a boolean where
   * true is ascending and false is descending.  The sort is applied in the
   * order they appear in the bag (XXX: does the bag preserve order?)
   */
  void setSort(in nsIPropertyBag aSort);

  /**
   * \brief Clear the sort
   */
  void clearSort();

};

