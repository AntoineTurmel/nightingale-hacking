<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="interfacesb_i_faceplate_pane" kind="interface" prot="public">
    <compoundname>sbIFaceplatePane</compoundname>
    <includes refid="sb_i_faceplate_pane_8idl" local="no">sbIFaceplatePane.idl</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_faceplate_pane_1cffab3569a69485aac30fef37657f66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplatePane::setData</definition>
        <argsstring>(in AString aKey, in nsIVariant aValue)</argsstring>
        <name>setData</name>
        <param>
          <type>in AString</type>
          <declname>aKey</declname>
        </param>
        <param>
          <type>in nsIVariant</type>
          <declname>aValue</declname>
        </param>
        <briefdescription>
<para>Stores the given data under the given key name, and notifies all observers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aKey</parametername>
</parameternamelist>
<parameterdescription>
<para>A name to store the data under. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aValue</parametername>
</parameternamelist>
<parameterdescription>
<para>Something to store. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="84"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_pane_194d6c8c9bdb37e5847f512106244ca43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIVariant</type>
        <definition>nsIVariant sbIFaceplatePane::getData</definition>
        <argsstring>(in AString aKey)</argsstring>
        <name>getData</name>
        <param>
          <type>in AString</type>
          <declname>aKey</declname>
        </param>
        <briefdescription>
<para>Retrieve the data with the given key name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The name under which the data is stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Some data, or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="92"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_pane_1112878968d6865332f191efd2e0043f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIStringEnumerator</type>
        <definition>nsIStringEnumerator sbIFaceplatePane::getKeys</definition>
        <argsstring>()</argsstring>
        <name>getKeys</name>
        <briefdescription>
<para>Gets a string enumerator for all data keys. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>String enumerator. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="98"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_pane_1e771ef7ce5877bead3b50f1faab32587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplatePane::addObserver</definition>
        <argsstring>(in nsIObserver aObserver)</argsstring>
        <name>addObserver</name>
        <param>
          <type>in nsIObserver</type>
          <declname>aObserver</declname>
        </param>
        <briefdescription>
<para>Adds an observer to receive notification when setData is called. </para>        </briefdescription>
        <detaileddescription>
<para>Adds an observer that will be called with observe(this, key, null) when setData is called on this interface. The third parameter is not used, as the data is an nsIVariant, and not necessarily a string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aObserver</parametername>
</parameternamelist>
<parameterdescription>
<para>A callback object with an observe method. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="109"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_pane_166654dabd332b7df6fc0d5f61302e0eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplatePane::removeObserver</definition>
        <argsstring>(in nsIObserver aObserver)</argsstring>
        <name>removeObserver</name>
        <param>
          <type>in nsIObserver</type>
          <declname>aObserver</declname>
        </param>
        <briefdescription>
<para>Remove an observer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aObserver</parametername>
</parameternamelist>
<parameterdescription>
<para>an callback object previously passed to addObserver. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_faceplate_pane_1c1675e51741bc525fde69a1f94cb172e" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIFaceplatePane::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Human readable name for this pane. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="64" bodyfile="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_faceplate_pane_1e298d8b443492babd768476ee0c78c07" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIFaceplatePane::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>Unique identifier for this pane. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="69" bodyfile="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_faceplate_pane_1e34b8d0ab3e5ccb3bbd9af28a8da719a" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIFaceplatePane::bindingURL</definition>
        <argsstring></argsstring>
        <name>bindingURL</name>
        <briefdescription>
<para>The location and id of the XBL binding for this faceplate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="74" bodyfile="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface used to communicate with faceplate pane binding instances. </para>    </briefdescription>
    <detaileddescription>
<para>This interface provides a single point of access to the potentially many instances of a single faceplate pane (if more than one window is open, then there is more than one faceplate, and each faceplate must have an instance of the pane)</para><para>Calling setData can be used to cause all observing faceplate panes to update their UI.</para><para>Since setData takes an nsIVariant it is possible to send interfaces to pane bindings. For example, you could provide an RDFDataSource and have your panes generate their UI from a template.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_faceplate_manager" kindref="compound">sbIFaceplateManager</ref> faceplate.xml </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" line="60" bodyfile="C:/projects/songbird/components/faceplate/public/sbIFaceplatePane.idl" bodystart="59" bodyend="116"/>
    <listofallmembers>
      <member refid="interfacesb_i_faceplate_pane_1e771ef7ce5877bead3b50f1faab32587" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>addObserver</name></member>
      <member refid="interfacesb_i_faceplate_pane_1e34b8d0ab3e5ccb3bbd9af28a8da719a" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>bindingURL</name></member>
      <member refid="interfacesb_i_faceplate_pane_194d6c8c9bdb37e5847f512106244ca43" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>getData</name></member>
      <member refid="interfacesb_i_faceplate_pane_1112878968d6865332f191efd2e0043f6" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>getKeys</name></member>
      <member refid="interfacesb_i_faceplate_pane_1e298d8b443492babd768476ee0c78c07" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>id</name></member>
      <member refid="interfacesb_i_faceplate_pane_1c1675e51741bc525fde69a1f94cb172e" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>name</name></member>
      <member refid="interfacesb_i_faceplate_pane_166654dabd332b7df6fc0d5f61302e0eb" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>removeObserver</name></member>
      <member refid="interfacesb_i_faceplate_pane_1cffab3569a69485aac30fef37657f66a" prot="public" virt="non-virtual"><scope>sbIFaceplatePane</scope><name>setData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
