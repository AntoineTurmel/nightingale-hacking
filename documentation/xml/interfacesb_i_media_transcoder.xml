<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="interfacesb_i_media_transcoder" kind="interface" prot="public">
    <compoundname>sbIMediaTranscoder</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_media_transcoder_1506580255574f461491292e2c5a75872" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PRInt32</type>
        <definition>PRInt32 sbIMediaTranscoder::transcode</definition>
        <argsstring>(in AString aInputURL, in sbIMediaType aInputMIMEType, in AString aOutputURL, in sbIMediaType aOutputMIMEType, in sbIMediaTranscoderCallback aCallback)</argsstring>
        <name>transcode</name>
        <param>
          <type>in AString</type>
          <declname>aInputURL</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref></type>
          <declname>aInputMIMEType</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aOutputURL</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref></type>
          <declname>aOutputMIMEType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_transcoder_callback" kindref="compound">sbIMediaTranscoderCallback</ref></type>
          <declname>aCallback</declname>
        </param>
        <briefdescription>
<para>Start a transcode operation. </para>        </briefdescription>
        <detaileddescription>
<para>This method is called by the <ref refid="interfacesb_i_media_transcoder_manager" kindref="compound">sbIMediaTranscoderManager</ref> after the proper <ref refid="interfacesb_i_media_transcoder" kindref="compound">sbIMediaTranscoder</ref> instance is found to handle the desired input and output files.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aInputURL</parametername>
</parameternamelist>
<parameterdescription>
<para>The url to the input file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aInputType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the input file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aOutputURL</parametername>
</parameternamelist>
<parameterdescription>
<para>The url to the output file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aOutputType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type for the output file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>The optional callback object to observe the transcoding </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Error conditions of some form or another </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="191"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_transcoder_13fce113d52fa9a86eafcd6fa5195bf28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaTranscoder::getSupportedMajorInputTypes</definition>
        <argsstring>(out PRUint32 nMajorCount,[array, size_is(nMajorCount), retval] out wstring aMajorInputs)</argsstring>
        <name>getSupportedMajorInputTypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>nMajorCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nMajorCount), retval]</attributes>
          <type>out wstring</type>
          <declname>aMajorInputs</declname>
        </param>
        <briefdescription>
<para>Get the list of input major types. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns an array of all the major mimetype strings that it supports (the string to the left of the &quot;/&quot; in the mimetype string).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nMajorCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aMajorInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of major type strings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="203"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_transcoder_12306b3e670de31be05fb92117f2a800f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaTranscoder::getSupportedInputMediaTypes</definition>
        <argsstring>(out PRUint32 nInputCount,[array, size_is(nInputCount), retval] out sbIMediaType aInputTypes)</argsstring>
        <name>getSupportedInputMediaTypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>nInputCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nInputCount), retval]</attributes>
          <type>out <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref></type>
          <declname>aInputTypes</declname>
        </param>
        <briefdescription>
<para>Get the list of input types. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns an array of <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref> objects that it supports.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nInputCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aInputTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of types </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="214"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_transcoder_15c5a73f147775a3a7709e4399bbd9faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaTranscoder::getSupportedMajorOutputTypes</definition>
        <argsstring>(out PRUint32 nMajorCount,[array, size_is(nMajorCount), retval] out wstring aMajorOutputs)</argsstring>
        <name>getSupportedMajorOutputTypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>nMajorCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nMajorCount), retval]</attributes>
          <type>out wstring</type>
          <declname>aMajorOutputs</declname>
        </param>
        <briefdescription>
<para>Get the list of output major types. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns an array of all the major mimetype strings that it supports (the string to the left of the &quot;/&quot; in the mimetype string).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nMajorCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aMajorOutputs</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of major type strings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="226"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_transcoder_17790b60db3e27592a8a60ae4e084670c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaTranscoder::getSupportedOutputMediaTypes</definition>
        <argsstring>(out PRUint32 nOutputCount,[array, size_is(nOutputCount), retval] out sbIMediaType aOutputTypes)</argsstring>
        <name>getSupportedOutputMediaTypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>nOutputCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nOutputCount), retval]</attributes>
          <type>out <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref></type>
          <declname>aOutputTypes</declname>
        </param>
        <briefdescription>
<para>Get the list of output types. </para>        </briefdescription>
        <detaileddescription>
<para>This method returns an array of <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref> objects that it supports.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nOutputCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aOutputTypes</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of types </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_media_transcoder_163aa89d79dfb4e4ec29ab31438b935e9" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaTranscoder::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the transcoder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="161" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_transcoder_1fc32715697be1637d6b4b33c7f02bf86" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaTranscoder::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>The long description of the transcoder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="166" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_transcoder_17c02237ff9f50633e4957dbc03d325cb" prot="public" static="no" mutable="no">
        <type>attribute PRBool</type>
        <definition>attribute PRBool sbIMediaTranscoder::completed</definition>
        <argsstring></argsstring>
        <name>completed</name>
        <briefdescription>
<para>TRUE, if the transcode has completed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="171" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>[UNIMPLEMENTED UNTIL AFTER 0.3] An object that performs a transcode operation </para>    </briefdescription>
    <detaileddescription>
<para>This object is supposed to be a high-level wrapper for a full featured transcoder underneath the covers that does complex transcoding already.</para><para>It handles chaining the decode of the input type to the encode of the output type, internally.</para><para><xrefsect id="todo_1_todo000013"><xreftitle>Todo</xreftitle><xrefdescription><para>Stub interface. Currently unimplemented. Lots of work. </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="interfacesb_i_media_transcoder_manager" kindref="compound">sbIMediaTranscoderManager</ref>, <ref refid="interfacesb_i_media_transcoder_callback" kindref="compound">sbIMediaTranscoderCallback</ref>, <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="156" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="155" bodyend="238"/>
    <listofallmembers>
      <member refid="interfacesb_i_media_transcoder_17c02237ff9f50633e4957dbc03d325cb" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>completed</name></member>
      <member refid="interfacesb_i_media_transcoder_1fc32715697be1637d6b4b33c7f02bf86" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>description</name></member>
      <member refid="interfacesb_i_media_transcoder_12306b3e670de31be05fb92117f2a800f" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>getSupportedInputMediaTypes</name></member>
      <member refid="interfacesb_i_media_transcoder_13fce113d52fa9a86eafcd6fa5195bf28" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>getSupportedMajorInputTypes</name></member>
      <member refid="interfacesb_i_media_transcoder_15c5a73f147775a3a7709e4399bbd9faa" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>getSupportedMajorOutputTypes</name></member>
      <member refid="interfacesb_i_media_transcoder_17790b60db3e27592a8a60ae4e084670c" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>getSupportedOutputMediaTypes</name></member>
      <member refid="interfacesb_i_media_transcoder_163aa89d79dfb4e4ec29ab31438b935e9" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>name</name></member>
      <member refid="interfacesb_i_media_transcoder_1506580255574f461491292e2c5a75872" prot="public" virt="non-virtual"><scope>sbIMediaTranscoder</scope><name>transcode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
