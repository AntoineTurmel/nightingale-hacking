<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="interfacesb_i_library" kind="interface" prot="public">
    <compoundname>sbILibrary</compoundname>
    <basecompoundref refid="interfacesb_i_library_resource" prot="public" virt="non-virtual">sbILibraryResource</basecompoundref>
    <includes refid="sb_i_library_8idl" local="no">sbILibrary.idl</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_library_1bc37a369815fbf2f1174658ce0ec5f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIChannel</type>
        <definition>nsIChannel sbILibrary::resolve</definition>
        <argsstring>(in nsIURI aUri)</argsstring>
        <name>resolve</name>
        <param>
          <type>in nsIURI</type>
          <declname>aUri</declname>
        </param>
        <briefdescription>
<para>Resolves a songbird schemed URL to a channel. Throws an exception if the item referenced in the URL is not found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aUri</parametername>
</parameternamelist>
<parameterdescription>
<para>The nsIURI to a media item to resolve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An open channel to the content of the referenced media item </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="107"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_1eef8f889905c110f95219797196917ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
        <definition>sbIMediaItem sbILibrary::createMediaItem</definition>
        <argsstring>(in nsIURI aContentUri)</argsstring>
        <name>createMediaItem</name>
        <param>
          <type>in nsIURI</type>
          <declname>aContentUri</declname>
        </param>
        <briefdescription>
<para>Creates a new media item  aContentUri The URI pointing to the content of the new media item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new, persisted media item </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="114"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_173cf5777340f4c11d077621bacd1a994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
        <definition>sbIMediaList sbILibrary::createMediaList</definition>
        <argsstring>(in AString aType)</argsstring>
        <name>createMediaList</name>
        <param>
          <type>in AString</type>
          <declname>aType</declname>
        </param>
        <briefdescription>
<para>Creates a new media list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>- The type of media list to create.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new media list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="123"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_12d06325f48acd0eb7bd1d3da8d51dda5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
        <definition>sbIMediaList sbILibrary::copyMediaList</definition>
        <argsstring>(in AString aType, in sbIMediaList aSource)</argsstring>
        <name>copyMediaList</name>
        <param>
          <type>in AString</type>
          <declname>aType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aSource</declname>
        </param>
        <briefdescription>
<para>Creates a new media list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>- The type of media list to create. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aSource</parametername>
</parameternamelist>
<parameterdescription>
<para>- A media list whose items and properties are to be copied.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new media list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="134"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_18618c5edb57160383e123241856a181d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
        <definition>sbIMediaItem sbILibrary::getMediaItem</definition>
        <argsstring>(in AString aGuid)</argsstring>
        <name>getMediaItem</name>
        <param>
          <type>in AString</type>
          <declname>aGuid</declname>
        </param>
        <briefdescription>
<para>Get a media item. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aGuid</parametername>
</parameternamelist>
<parameterdescription>
<para>Guid of media item to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The requested media item </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="141"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_1f87abee5d36302272e3d842af0bc9125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbILibrary::registerMediaListFactory</definition>
        <argsstring>(in sbIMediaListFactory aFactory)</argsstring>
        <name>registerMediaListFactory</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list_factory" kindref="compound">sbIMediaListFactory</ref></type>
          <declname>aFactory</declname>
        </param>
        <briefdescription>
<para>Register a new media list type at run time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFactory</parametername>
</parameternamelist>
<parameterdescription>
<para>- The factory that will create the media list </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="153"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_1103b68674687a92cdb798c8e481aa2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbILibrary::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
<para>Called when the library should remove unsupported media list types, unknown property types, temporary items, or otherwise optimize its performance or size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="168"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_18192dae731890f3724ae0804cb37e0f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbILibrary::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
<para>Called when the library should clean up in preparation for shutdown of the application. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="174"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_144581250b8eb021a3e911f994ff7d5c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbILibrary::batchCreateMediaItems</definition>
        <argsstring>(in nsIArray aURIArray)</argsstring>
        <name>batchCreateMediaItems</name>
        <param>
          <type>in nsIArray</type>
          <declname>aURIArray</declname>
        </param>
        <briefdescription>
<para>Create many media items from a list of URIs, and notify their addition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURIArray</parametername>
</parameternamelist>
<parameterdescription>
<para>nsIArray of nsIURI objects </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nsIArray of the new <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref> objects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="181"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_190f6e909197ec28182c697f350114344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbILibrary::batchGetMediaItems</definition>
        <argsstring>(in nsIArray aGUIDArray)</argsstring>
        <name>batchGetMediaItems</name>
        <param>
          <type>in nsIArray</type>
          <declname>aGUIDArray</declname>
        </param>
        <briefdescription>
<para>Get many media items from a list of guid strings. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURIArray</parametername>
</parameternamelist>
<parameterdescription>
<para>nsIArray of GUID strings. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nsIArray of the new <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref> objects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="188"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_1333693ed243cb3eff87aaf523873a7d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbILibrary::batchNotifyAdded</definition>
        <argsstring>(in nsIArray aMediaItemArray)</argsstring>
        <name>batchNotifyAdded</name>
        <param>
          <type>in nsIArray</type>
          <declname>aMediaItemArray</declname>
        </param>
        <briefdescription>
<para>Notify the world that the array is added. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURIArray</parametername>
</parameternamelist>
<parameterdescription>
<para>nsIArray of <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="194"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_16768dfcfc96451caf01356628efb8afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbILibrary::batchCreateMediaItemsAsync</definition>
        <argsstring>(in nsIArray aURIArray, in sbIBatchCreateMediaItemsListener aListener)</argsstring>
        <name>batchCreateMediaItemsAsync</name>
        <param>
          <type>in nsIArray</type>
          <declname>aURIArray</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_batch_create_media_items_listener" kindref="compound">sbIBatchCreateMediaItemsListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Asychronously create many media items from a list of URIs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURIArray</parametername>
</parameternamelist>
<parameterdescription>
<para>nsIArray of nsIURI objects </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aListener</parametername>
</parameternamelist>
<parameterdescription>
<para>Listener to receive progress and complete notifications </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_library_1219c7f4ce3a62c36c374df24cb267d61" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
        <definition>readonly attribute sbIDevice sbILibrary::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <briefdescription>
<para>Reference to the device that this library is stored on. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="84" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_library_124498844eb5629b212440b0b1db0cd17" prot="public" static="no" mutable="no">
        <type>readonly attribute boolean</type>
        <definition>readonly attribute boolean sbILibrary::supportsForeignMediaItems</definition>
        <argsstring></argsstring>
        <name>supportsForeignMediaItems</name>
        <briefdescription>
<para>Declares if this library will host foreign media items. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="89" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_library_1283d3a82ec0021cfc02928330bd99cac" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIPropertyBag2</type>
        <definition>readonly attribute nsIPropertyBag2 sbILibrary::creationParameters</definition>
        <argsstring></argsstring>
        <name>creationParameters</name>
        <briefdescription>
<para>Holds the parameters with which this library was created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="94" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_library_1106f95a78294350f4def9d57d4c6df4a" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_library_factory" kindref="compound">sbILibraryFactory</ref></type>
        <definition>readonly attribute sbILibraryFactory sbILibrary::factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <briefdescription>
<para>Holds the factory that created this library. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="99" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_library_17554ccb1c5ea11775ce4d38160492041" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIStringEnumerator</type>
        <definition>readonly attribute nsIStringEnumerator sbILibrary::mediaListTypes</definition>
        <argsstring></argsstring>
        <name>mediaListTypes</name>
        <briefdescription>
<para>A list of available media list types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="146" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Media library abstraction. </para>    </briefdescription>
    <detaileddescription>
<para>The library interface is the primary means of exposing media library data to Songbird. Implementors of this interface must also provide implementations of <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref> and <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref>.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref>, <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="150">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="157">
        <label>sbIDeviceCapabilities</label>
        <link refid="interfacesb_i_device_capabilities"/>
      </node>
      <node id="154">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="155" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="157" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
        <childnode refid="154" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="156" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="155">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="156" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
    </collaborationgraph>
    <location file="C:/projects/songbird/components/library/base/public/sbILibrary.idl" line="80" bodyfile="C:/projects/songbird/components/library/base/public/sbILibrary.idl" bodystart="79" bodyend="203"/>
    <listofallmembers>
      <member refid="interfacesb_i_library_144581250b8eb021a3e911f994ff7d5c4" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>batchCreateMediaItems</name></member>
      <member refid="interfacesb_i_library_16768dfcfc96451caf01356628efb8afb" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>batchCreateMediaItemsAsync</name></member>
      <member refid="interfacesb_i_library_190f6e909197ec28182c697f350114344" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>batchGetMediaItems</name></member>
      <member refid="interfacesb_i_library_1333693ed243cb3eff87aaf523873a7d0" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>batchNotifyAdded</name></member>
      <member refid="interfacesb_i_library_12d06325f48acd0eb7bd1d3da8d51dda5" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>copyMediaList</name></member>
      <member refid="interfacesb_i_library_resource_162a515cdcadcae2da7861391abbb36e4" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>created</name></member>
      <member refid="interfacesb_i_library_1eef8f889905c110f95219797196917ab" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>createMediaItem</name></member>
      <member refid="interfacesb_i_library_173cf5777340f4c11d077621bacd1a994" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>createMediaList</name></member>
      <member refid="interfacesb_i_library_1283d3a82ec0021cfc02928330bd99cac" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>creationParameters</name></member>
      <member refid="interfacesb_i_library_1219c7f4ce3a62c36c374df24cb267d61" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>device</name></member>
      <member refid="interfacesb_i_library_resource_132061d667e86c05b22d3ee6d57e24001" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>equals</name></member>
      <member refid="interfacesb_i_library_1106f95a78294350f4def9d57d4c6df4a" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>factory</name></member>
      <member refid="interfacesb_i_library_18618c5edb57160383e123241856a181d" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>getMediaItem</name></member>
      <member refid="interfacesb_i_library_resource_1fecce0a9f8cf88784cbfdce7d8143719" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>getProperty</name></member>
      <member refid="interfacesb_i_library_resource_1c97a2ea6d6aa52d2dfd74095895f74f6" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>guid</name></member>
      <member refid="interfacesb_i_library_17554ccb1c5ea11775ce4d38160492041" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>mediaListTypes</name></member>
      <member refid="interfacesb_i_library_1103b68674687a92cdb798c8e481aa2f7" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>optimize</name></member>
      <member refid="interfacesb_i_library_1f87abee5d36302272e3d842af0bc9125" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>registerMediaListFactory</name></member>
      <member refid="interfacesb_i_library_1bc37a369815fbf2f1174658ce0ec5f98" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>resolve</name></member>
      <member refid="interfacesb_i_library_resource_1fa7bdb6a26b3c120968f0573cba92ae7" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>setProperty</name></member>
      <member refid="interfacesb_i_library_18192dae731890f3724ae0804cb37e0f1" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>shutdown</name></member>
      <member refid="interfacesb_i_library_124498844eb5629b212440b0b1db0cd17" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>supportsForeignMediaItems</name></member>
      <member refid="interfacesb_i_library_resource_1377285cd148468c9550954df62ecad13" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>updated</name></member>
      <member refid="interfacesb_i_library_resource_1e6dfc14a8a20b1486304a25d9f4f77c0" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>write</name></member>
      <member refid="interfacesb_i_library_resource_159a9d52527f1014cb02fd09e60272b07" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>writePending</name></member>
      <member refid="interfacesb_i_library_resource_1810100a298bdedf20f1dc1265619f53d" prot="public" virt="non-virtual"><scope>sbILibrary</scope><name>writeThrough</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
