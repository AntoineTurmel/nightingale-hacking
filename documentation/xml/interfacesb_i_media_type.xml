<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="interfacesb_i_media_type" kind="interface" prot="public">
    <compoundname>sbIMediaType</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_media_type_157e75a94de3d3ff3b33a3e80862e3c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaType::getMIMETypes</definition>
        <argsstring>(out PRUint32 nMIMECount,[array, size_is(nMIMECount), retval] out wstring aMIMETypes)</argsstring>
        <name>getMIMETypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>nMIMECount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nMIMECount), retval]</attributes>
          <type>out wstring</type>
          <declname>aMIMETypes</declname>
        </param>
        <briefdescription>
<para>Get the entire list of supported mimetypes. </para>        </briefdescription>
        <detaileddescription>
<para>Return all the different mimetypes supported as part of this <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nMIMECount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aMIMETypes</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of mimetype strings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="71"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_type_1645966d291b5d3a2c287f39b380cc9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediaType::getExtensions</definition>
        <argsstring>(out PRUint32 nExtCount,[array, size_is(nExtCount), retval] out wstring aExts)</argsstring>
        <name>getExtensions</name>
        <param>
          <type>out PRUint32</type>
          <declname>nExtCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(nExtCount), retval]</attributes>
          <type>out wstring</type>
          <declname>aExts</declname>
        </param>
        <briefdescription>
<para>Get the entire list of supported extensions. </para>        </briefdescription>
        <detaileddescription>
<para>Return all the different extensions supported as part of this <ref refid="interfacesb_i_media_type" kindref="compound">sbIMediaType</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nExtCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of items in the array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aExts</parametername>
</parameternamelist>
<parameterdescription>
<para>The array of extension strings </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_media_type_10d05e1aff78771f0f1298d887278d602" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaType::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the media type set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="46" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_type_14bd7e1dde1cd1ed7661ece4e95c7bd65" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaType::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>The long description of the media type set. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="51" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_type_1b547da6ed4a82a97ca9f2feb38af9a9b" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaType::majorType</definition>
        <argsstring></argsstring>
        <name>majorType</name>
        <briefdescription>
<para>The primary major type string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="56" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_type_194c0bf43d6d88fe099c338693bcbdf2c" prot="public" static="no" mutable="no">
        <type>attribute AString</type>
        <definition>attribute AString sbIMediaType::contentType</definition>
        <argsstring></argsstring>
        <name>contentType</name>
        <briefdescription>
<para>The primary content type string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="61" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An object to represent a requested or supported set of mimetypes. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>Stub interface. Currently unimplemented. </para></xrefdescription></xrefsect><simplesect kind="see"><para><ref refid="interfacesb_i_media_transcoder_manager" kindref="compound">sbIMediaTranscoderManager</ref>, <ref refid="interfacesb_i_media_transcoder" kindref="compound">sbIMediaTranscoder</ref>, <ref refid="interfacesb_i_media_transcoder_callback" kindref="compound">sbIMediaTranscoderCallback</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" line="42" bodyfile="C:/projects/songbird/components/mediacore/transcoding/public/sbIMediaTranscoder.idl" bodystart="41" bodyend="82"/>
    <listofallmembers>
      <member refid="interfacesb_i_media_type_194c0bf43d6d88fe099c338693bcbdf2c" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>contentType</name></member>
      <member refid="interfacesb_i_media_type_14bd7e1dde1cd1ed7661ece4e95c7bd65" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>description</name></member>
      <member refid="interfacesb_i_media_type_1645966d291b5d3a2c287f39b380cc9dc" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>getExtensions</name></member>
      <member refid="interfacesb_i_media_type_157e75a94de3d3ff3b33a3e80862e3c8a" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>getMIMETypes</name></member>
      <member refid="interfacesb_i_media_type_1b547da6ed4a82a97ca9f2feb38af9a9b" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>majorType</name></member>
      <member refid="interfacesb_i_media_type_10d05e1aff78771f0f1298d887278d602" prot="public" virt="non-virtual"><scope>sbIMediaType</scope><name>name</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
