<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_global_hotkeys" kind="interface" prot="public">
    <compoundname>sbIGlobalHotkeys</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_global_hotkeys_1ed3adc05315431171236d4034843be90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIGlobalHotkeys::addHotkey</definition>
        <argsstring>(in PRInt32 keyCode, in PRBool altKey, in PRBool ctrlKey, in PRBool shiftKey, in PRBool metaKey, in AString key_id, in sbIGlobalHotkeyCallback cb)</argsstring>
        <name>addHotkey</name>
        <param>
          <type>in PRInt32</type>
          <declname>keyCode</declname>
        </param>
        <param>
          <type>in PRBool</type>
          <declname>altKey</declname>
        </param>
        <param>
          <type>in PRBool</type>
          <declname>ctrlKey</declname>
        </param>
        <param>
          <type>in PRBool</type>
          <declname>shiftKey</declname>
        </param>
        <param>
          <type>in PRBool</type>
          <declname>metaKey</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>key_id</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_global_hotkey_callback" kindref="compound">sbIGlobalHotkeyCallback</ref></type>
          <declname>cb</declname>
        </param>
        <briefdescription>
<para>Global hotkey registration method This method is used to register a hotkey. </para>        </briefdescription>
        <detaileddescription>
<para>Hotkeys are specified via key code and modifiers, and an arbitrary id string is given back to the callback method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>keyCode</parametername>
</parameternamelist>
<parameterdescription>
<para>The keyboard code for the hotkey </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>altKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of the Alt key in combination with the keyboard code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctrlKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of the Control key in combination with the keyboard code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shiftKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of the Shift key in combination with the keyboard code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metaKey</parametername>
</parameternamelist>
<parameterdescription>
<para>The state of the Meta key in combination with the keyboard code </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The arbitrary id associated with this hotkey </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback object to call when the hotkey is pressed </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_global_hotkeys_16ac24c884fd8596d954f12a9ab9f9d70" kindref="member">removeHotkey</ref>, <ref refid="interfacesb_i_global_hotkey_callback" kindref="compound">sbIGlobalHotkeyCallback</ref>, <ref refid="interfacesb_i_global_hotkey_callback_1a931092f7e7b533e3a4ef21a3a3f31ba" kindref="member">sbIGlobalHotkeyCallback::onHotkey()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/integration/public/IGlobalHotkeys.idl" line="84"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_global_hotkeys_16ac24c884fd8596d954f12a9ab9f9d70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIGlobalHotkeys::removeHotkey</definition>
        <argsstring>(in AString key_id)</argsstring>
        <name>removeHotkey</name>
        <param>
          <type>in AString</type>
          <declname>key_id</declname>
        </param>
        <briefdescription>
<para>Global hotkey unregistration method This method is used to unregister a hotkey that has been previously registered with AddHotkey. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the key to unregister </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_global_hotkeys_1ed3adc05315431171236d4034843be90" kindref="member">addHotkey</ref>, <ref refid="interfacesb_i_global_hotkeys_11035102519c33b5dcfcbd60be299feef" kindref="member">removeAllHotkeys</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/integration/public/IGlobalHotkeys.idl" line="92"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_global_hotkeys_11035102519c33b5dcfcbd60be299feef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIGlobalHotkeys::removeAllHotkeys</definition>
        <argsstring>()</argsstring>
        <name>removeAllHotkeys</name>
        <briefdescription>
<para>Global hotkeys unregistration method This method is used to unregister all hotkeys that have been previously registered with addHotkey. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="interfacesb_i_global_hotkeys_1ed3adc05315431171236d4034843be90" kindref="member">addHotkey</ref>, <ref refid="interfacesb_i_global_hotkeys_16ac24c884fd8596d954f12a9ab9f9d70" kindref="member">removeHotkey</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/integration/public/IGlobalHotkeys.idl" line="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Global hotkey registration/unregistration interface This interface is used to register or unregister hotkey callbacks. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="interfacesb_i_global_hotkey_callback" kindref="compound">sbIGlobalHotkeyCallback</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="z:/projects/songbird/components/integration/public/IGlobalHotkeys.idl" line="67" bodyfile="z:/projects/songbird/components/integration/public/IGlobalHotkeys.idl" bodystart="66" bodyend="100"/>
    <listofallmembers>
      <member refid="interfacesb_i_global_hotkeys_1ed3adc05315431171236d4034843be90" prot="public" virt="non-virtual"><scope>sbIGlobalHotkeys</scope><name>addHotkey</name></member>
      <member refid="interfacesb_i_global_hotkeys_11035102519c33b5dcfcbd60be299feef" prot="public" virt="non-virtual"><scope>sbIGlobalHotkeys</scope><name>removeAllHotkeys</name></member>
      <member refid="interfacesb_i_global_hotkeys_16ac24c884fd8596d954f12a9ab9f9d70" prot="public" virt="non-virtual"><scope>sbIGlobalHotkeys</scope><name>removeHotkey</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
