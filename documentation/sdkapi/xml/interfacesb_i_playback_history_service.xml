<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_playback_history_service" kind="interface" prot="public">
    <compoundname>sbIPlaybackHistoryService</compoundname>
    <includes refid="sb_i_playback_history_service_8idl" local="no">sbIPlaybackHistoryService.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_playback_history_service_11a6da1d9dc4e14a6c98d2f080f01a530" prot="public" static="no" mutable="no">
        <type>readonly attribute nsISimpleEnumerator</type>
        <definition>readonly attribute nsISimpleEnumerator sbIPlaybackHistoryService::entries</definition>
        <argsstring></argsstring>
        <name>entries</name>
        <briefdescription>
<para>Enumerator of all entries in the playback history service. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The enumerator will contain <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="53" bodyfile="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_playback_history_service_1af845430f8cb073f00004c7154d8ad6f" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long long</type>
        <definition>readonly attribute unsigned long long sbIPlaybackHistoryService::entryCount</definition>
        <argsstring></argsstring>
        <name>entryCount</name>
        <briefdescription>
<para>Total number of entries in the playback history service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="58" bodyfile="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_playback_history_service_144c768602b3f79cdfdefcd1d72740a71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref></type>
        <definition>sbIPlaybackHistoryEntry sbIPlaybackHistoryService::createEntry</definition>
        <argsstring>(in sbIMediaItem aItem, in long long aTimestamp, in long long aDuration, in sbIPropertyArray aAnnotations)</argsstring>
        <name>createEntry</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
          <declname>aItem</declname>
        </param>
        <param>
          <type>in long long</type>
          <declname>aTimestamp</declname>
        </param>
        <param>
          <type>in long long</type>
          <declname>aDuration</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_property_array" kindref="compound">sbIPropertyArray</ref></type>
          <declname>aAnnotations</declname>
        </param>
        <briefdescription>
<para>Create a playback history entry from a media item and a timestamp. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aItem</parametername>
</parameternamelist>
<parameterdescription>
<para>The media item for which you wish to create an entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aTimestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The time at which the item was played in UNIX timestamp format. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDuration</parametername>
</parameternamelist>
<parameterdescription>
<para>The duration of playback for the item for this entry. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aAnnotations</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional annotations for the entry. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="70"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1072c3cc456167eeb622784f70fdc7b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::addEntry</definition>
        <argsstring>(in sbIPlaybackHistoryEntry aEntry)</argsstring>
        <name>addEntry</name>
        <param>
          <type>in <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref></type>
          <declname>aEntry</declname>
        </param>
        <briefdescription>
<para>Add an entry to the playback history service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback history entry you wish to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="76"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_11ff600e1b6f7f949c9082371d6269bed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::addEntries</definition>
        <argsstring>(in nsIArray aEntries)</argsstring>
        <name>addEntries</name>
        <param>
          <type>in nsIArray</type>
          <declname>aEntries</declname>
        </param>
        <briefdescription>
<para>Add entries to the playback history service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aEntries</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_INVALID_ARG</parametername>
</parameternamelist>
<parameterdescription>
<para>when the array does not contain <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref> objects. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="84"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_18a3e513dfeeb524ee1dc3c5ec553d1bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref></type>
        <definition>sbIPlaybackHistoryEntry sbIPlaybackHistoryService::getEntryByIndex</definition>
        <argsstring>(in long long aIndex)</argsstring>
        <name>getEntryByIndex</name>
        <param>
          <type>in long long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Get an entry by index. Negative indexes wrap from the last entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="90"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1fc0f0af932aca881e15e578440650838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbIPlaybackHistoryService::getEntriesByIndex</definition>
        <argsstring>(in long long aStartIndex, in unsigned long long aCount)</argsstring>
        <name>getEntriesByIndex</name>
        <param>
          <type>in long long</type>
          <declname>aStartIndex</declname>
        </param>
        <param>
          <type>in unsigned long long</type>
          <declname>aCount</declname>
        </param>
        <briefdescription>
<para>Get entries from the playback history service using a start index. Negative indexes wrap from the last entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aStartIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The start index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of entries you wish to get. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The array will contain <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref> objects. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="100"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1967ce779cd7348355da6f59bb3fc3dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbIPlaybackHistoryService::getEntriesByTimestamp</definition>
        <argsstring>(in long long aStartTimestamp, in long long aEndTimestamp)</argsstring>
        <name>getEntriesByTimestamp</name>
        <param>
          <type>in long long</type>
          <declname>aStartTimestamp</declname>
        </param>
        <param>
          <type>in long long</type>
          <declname>aEndTimestamp</declname>
        </param>
        <briefdescription>
<para>Get entries between start timestamp and end timestamp. The range is inclusive. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aStartTimestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning of the range. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aEndTimestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>The end of the range. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The timestamps are standard UNIX style timestamps. </para><para>If aStartTimestamp is greater than aEndTimestamp, the results are returned in descending order. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="112"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_16eebdd84d1941bf54d10b3f01181811d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::removeEntry</definition>
        <argsstring>(in sbIPlaybackHistoryEntry aEntry)</argsstring>
        <name>removeEntry</name>
        <param>
          <type>in <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref></type>
          <declname>aEntry</declname>
        </param>
        <briefdescription>
<para>Remove an entry from the playback history service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aEntry</parametername>
</parameternamelist>
<parameterdescription>
<para>The entry to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="118"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1c947317ad38083e9d6707e7a00fe5913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::removeEntryByIndex</definition>
        <argsstring>(in long long aIndex)</argsstring>
        <name>removeEntryByIndex</name>
        <param>
          <type>in long long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Remove an entry from the playback history service using the entry&apos;s index. Negative indexes wrap from the last entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the entry to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="125"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_11c003d06563e0dce3224176efa33e914" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::removeEntriesByIndex</definition>
        <argsstring>(in long long aStartIndex, in unsigned long long aCount)</argsstring>
        <name>removeEntriesByIndex</name>
        <param>
          <type>in long long</type>
          <declname>aStartIndex</declname>
        </param>
        <param>
          <type>in unsigned long long</type>
          <declname>aCount</declname>
        </param>
        <briefdescription>
<para>Remove entries from the playback history service using a start index. Negative indexes wrap from the last entry. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aStartIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The start index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of entries you wish to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="134"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1f8ac8ff305c2381f592477f1974daba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::removeEntries</definition>
        <argsstring>(in nsIArray aEntries)</argsstring>
        <name>removeEntries</name>
        <param>
          <type>in nsIArray</type>
          <declname>aEntries</declname>
        </param>
        <briefdescription>
<para>Remove entries from the playback history service. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aEntries</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of <ref refid="interfacesb_i_playback_history_entry" kindref="compound">sbIPlaybackHistoryEntry</ref> objects to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="140"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_163430404d007fed3cfbe9fd975877698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbIPlaybackHistoryService::getEntriesByAnnotation</definition>
        <argsstring>(in AString aAnnotationId, in AString aAnnotationValue,[optional] in unsigned long aCount)</argsstring>
        <name>getEntriesByAnnotation</name>
        <param>
          <type>in AString</type>
          <declname>aAnnotationId</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aAnnotationValue</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in unsigned long</type>
          <declname>aCount</declname>
        </param>
        <briefdescription>
<para>Get entries by their annotation value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aAnnotationId</parametername>
</parameternamelist>
<parameterdescription>
<para>The annotation id. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aAnnotationValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The annotation value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[optional]</parametername>
</parameternamelist>
<parameterdescription>
<para>aCount The maximum number of entries to return. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Results are ordered from newest to oldest. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="151"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1b8a4da3a343b582c75290768b4c7cdf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsIArray</type>
        <definition>nsIArray sbIPlaybackHistoryService::getEntriesByAnnotations</definition>
        <argsstring>(in sbIPropertyArray aAnnotations,[optional] in unsigned long aCount)</argsstring>
        <name>getEntriesByAnnotations</name>
        <param>
          <type>in <ref refid="interfacesb_i_property_array" kindref="compound">sbIPropertyArray</ref></type>
          <declname>aAnnotations</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in unsigned long</type>
          <declname>aCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="157"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1e8779952fef0d2303803842a563ee6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear all entries from the playback history service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="162"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_15460eba009778c4e27cffffd74e95d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::addListener</definition>
        <argsstring>(in sbIPlaybackHistoryListener aListener)</argsstring>
        <name>addListener</name>
        <param>
          <type>in <ref refid="interfacesb_i_playback_history_listener" kindref="compound">sbIPlaybackHistoryListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Add a listener. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="167"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_1464486d0a002fae181aaae1090af9aa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaybackHistoryService::removeListener</definition>
        <argsstring>(in sbIPlaybackHistoryListener aListener)</argsstring>
        <name>removeListener</name>
        <param>
          <type>in <ref refid="interfacesb_i_playback_history_listener" kindref="compound">sbIPlaybackHistoryListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Remove a listener. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="172"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_17f5d652f841185a4712fc17b46b05c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsresult</type>
        <definition>nsresult sbIPlaybackHistoryService::addOrUpdateAnnotation</definition>
        <argsstring>(in long long aEntryId, in AString aAnnotationId, in AString aAnnotationValue)</argsstring>
        <name>addOrUpdateAnnotation</name>
        <param>
          <type>in long long</type>
          <declname>aEntryId</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aAnnotationId</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aAnnotationValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="179"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playback_history_service_15150845f997fe0b0ef3ec42d7c8a3442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsresult</type>
        <definition>nsresult sbIPlaybackHistoryService::removeAnnotation</definition>
        <argsstring>(in long long aEntryId, in AString aAnnotationId)</argsstring>
        <name>removeAnnotation</name>
        <param>
          <type>in long long</type>
          <declname>aEntryId</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aAnnotationId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The playback history service stores all entries in _reverse chronological order_. This means that the _most recent_ entry is always the first when using <ref refid="interfacesb_i_playback_history_service_11a6da1d9dc4e14a6c98d2f080f01a530" kindref="member">sbIPlaybackHistoryService::entries</ref>.</para><para>Getter methods assume that index 0 is the most recent entry. </para>    </detaileddescription>
    <location file="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" line="48" bodyfile="c:/builds/songbird/trunk/components/mediacore/playback/history/public/sbIPlaybackHistoryService.idl" bodystart="47" bodyend="186"/>
    <listofallmembers>
      <member refid="interfacesb_i_playback_history_service_11ff600e1b6f7f949c9082371d6269bed" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>addEntries</name></member>
      <member refid="interfacesb_i_playback_history_service_1072c3cc456167eeb622784f70fdc7b0b" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>addEntry</name></member>
      <member refid="interfacesb_i_playback_history_service_15460eba009778c4e27cffffd74e95d00" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>addListener</name></member>
      <member refid="interfacesb_i_playback_history_service_17f5d652f841185a4712fc17b46b05c26" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>addOrUpdateAnnotation</name></member>
      <member refid="interfacesb_i_playback_history_service_1e8779952fef0d2303803842a563ee6e9" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>clear</name></member>
      <member refid="interfacesb_i_playback_history_service_144c768602b3f79cdfdefcd1d72740a71" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>createEntry</name></member>
      <member refid="interfacesb_i_playback_history_service_11a6da1d9dc4e14a6c98d2f080f01a530" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>entries</name></member>
      <member refid="interfacesb_i_playback_history_service_1af845430f8cb073f00004c7154d8ad6f" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>entryCount</name></member>
      <member refid="interfacesb_i_playback_history_service_163430404d007fed3cfbe9fd975877698" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>getEntriesByAnnotation</name></member>
      <member refid="interfacesb_i_playback_history_service_1b8a4da3a343b582c75290768b4c7cdf3" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>getEntriesByAnnotations</name></member>
      <member refid="interfacesb_i_playback_history_service_1fc0f0af932aca881e15e578440650838" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>getEntriesByIndex</name></member>
      <member refid="interfacesb_i_playback_history_service_1967ce779cd7348355da6f59bb3fc3dad" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>getEntriesByTimestamp</name></member>
      <member refid="interfacesb_i_playback_history_service_18a3e513dfeeb524ee1dc3c5ec553d1bd" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>getEntryByIndex</name></member>
      <member refid="interfacesb_i_playback_history_service_15150845f997fe0b0ef3ec42d7c8a3442" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeAnnotation</name></member>
      <member refid="interfacesb_i_playback_history_service_1f8ac8ff305c2381f592477f1974daba0" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeEntries</name></member>
      <member refid="interfacesb_i_playback_history_service_11c003d06563e0dce3224176efa33e914" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeEntriesByIndex</name></member>
      <member refid="interfacesb_i_playback_history_service_16eebdd84d1941bf54d10b3f01181811d" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeEntry</name></member>
      <member refid="interfacesb_i_playback_history_service_1c947317ad38083e9d6707e7a00fe5913" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeEntryByIndex</name></member>
      <member refid="interfacesb_i_playback_history_service_1464486d0a002fae181aaae1090af9aa7" prot="public" virt="non-virtual"><scope>sbIPlaybackHistoryService</scope><name>removeListener</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
