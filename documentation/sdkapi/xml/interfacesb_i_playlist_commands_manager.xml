<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_playlist_commands_manager" kind="interface" prot="public">
    <compoundname>sbIPlaylistCommandsManager</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_1d43255300ff79bffb9d103d4647de36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::registerPlaylistCommandsMediaItem</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>registerPlaylistCommandsMediaItem</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Register <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects to be shown for specific playlists in order to let the user perform actions on a playlist&apos;s items. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface is used to algorithmically define a set of commands to be rendered arbitrarily by a playlist ui object (currently, playlist.xml).</para><para>Commands can be registered for a specific playlist, or for any &quot;type&quot; characteristic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid string for the database to register against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The arbitrary type string to register against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The command object instance to be used for these playlists </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, unregisterPlaylistCommands, playlist.xml </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L154">http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L154</ulink> </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L627">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L627</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="439"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_14d7b3bd7eafd494e724aea3dc3d37909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::unregisterPlaylistCommandsMediaItem</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>unregisterPlaylistCommandsMediaItem</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Unregister a <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> object that was previously registered to registerPlaylistCommandsMediaItem. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid that was used to register the sbIPlaylistCommand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type string that was used to register the sbIPlaylistCommand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The command object that was registered </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, registerPlaylistCommands, playlist.xml </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L194">http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L194</ulink> </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L736">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L736</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="451"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_1e0955c51878fae0a49d5f65ad3a5356d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsISimpleEnumerator</type>
        <definition>nsISimpleEnumerator sbIPlaylistCommandsManager::getPlaylistCommandsMediaItem</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType)</argsstring>
        <name>getPlaylistCommandsMediaItem</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <briefdescription>
<para>Retrieve the list of <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects registered to a specific playlist. </para>        </briefdescription>
        <detaileddescription>
<para>Given the guid, and type strings, returns a list of duplicate instances of the corresponding <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects.</para><para>The &quot;guid&quot; has precedence over the &quot;type&quot; string.</para><para>This method is only called by the playlist UI object, in playlist.xml</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid string for the playlist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the playlist </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A simple enumerator of newly duplicated command object instances to be used for this playlist </para></simplesect>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, playlist.xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="468"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_1c4861ebbacc2d3690b01ba3c245a9e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::registerPlaylistCommandsMediaList</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>registerPlaylistCommandsMediaList</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Register <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects to be shown for specific playlists in order to let the user perform actions on the playlist itself. </para>        </briefdescription>
        <detaileddescription>
<para>The <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface is used to algorithmically define a set of commands to be rendered arbitrarily by a service tree ui object (currently, servicePane.xml).</para><para>Commands can be registered for a specific playlist, or for any &quot;type&quot; characteristic.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid string for the database to register against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The arbitrary type string to register against </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The command object instance to be used for these playlists </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, unregisterPlaylistCommands, playlist.xml </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L681">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L681</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="486"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_1f4f55b9bca19a4838b0243e8712d4453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::unregisterPlaylistCommandsMediaList</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>unregisterPlaylistCommandsMediaList</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Unregister a <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> object that was previously registered to registerPlaylistCommandsMediaList. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid that was used to register the sbIPlaylistCommand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type string that was used to register the sbIPlaylistCommand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The command object that was registered </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, registerPlaylistCommands, playlist.xml </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L741">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L741</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="497"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_1add075eaf8e161fa5dee7b37123a0eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsISimpleEnumerator</type>
        <definition>nsISimpleEnumerator sbIPlaylistCommandsManager::getPlaylistCommandsMediaList</definition>
        <argsstring>(in AString aContextGUID, in AString aPlaylistType)</argsstring>
        <name>getPlaylistCommandsMediaList</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aPlaylistType</declname>
        </param>
        <briefdescription>
<para>Retrieve the list of <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects to be used for a specific playlist. </para>        </briefdescription>
        <detaileddescription>
<para>Given the guid, and type strings, returns a list of duplicate instances of the corresponding <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> objects.</para><para>The &quot;guid&quot; has precedence over the &quot;type&quot; string.</para><para>This method is only called by the servicepane UI object, in servicePane.xml</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aContextGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The guid string for the playlist </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aPlaylistType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the playlist </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A simple enumerator of newly duplicated command object instances to be used for this playlist </para></simplesect>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref>, servicePane.xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="514"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_16d09e15101aba3e2f8e6a5d17c73c9be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::publish</definition>
        <argsstring>(in AString aCommandGUID, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>publish</name>
        <param>
          <type>in AString</type>
          <declname>aCommandGUID</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Publish an <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface for public consumption. </para>        </briefdescription>
        <detaileddescription>
<para>An <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface may be published so that third party code may reuse them in their own command sets.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCommandGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The GUID identifying this command interface </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The interface to publish </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands_manager_177c7b69bd536005897ab613fc6a913a6" kindref="member">request</ref>, <ref refid="interfacesb_i_playlist_commands_manager_122398c9895ed02233d68a829ddade0ac" kindref="member">withdraw</ref>, kPlaylistCommands.jsm, <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L539">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L539</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="527"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_122398c9895ed02233d68a829ddade0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistCommandsManager::withdraw</definition>
        <argsstring>(in AString aCommandGUID, in sbIPlaylistCommands aCommandObj)</argsstring>
        <name>withdraw</name>
        <param>
          <type>in AString</type>
          <declname>aCommandGUID</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>aCommandObj</declname>
        </param>
        <briefdescription>
<para>Withdraw a previously published <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface. </para>        </briefdescription>
        <detaileddescription>
<para>Note that the original interface must be passed to this function for the call to succeed. Since calling <ref refid="interfacesb_i_playlist_commands_manager_177c7b69bd536005897ab613fc6a913a6" kindref="member">request()</ref> returns a copy of the interface rather than the original interface itself, it means that you cannot withdraw someone else&apos;s interface unless you have access to it directly.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCommandGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The GUID identifying this command interface </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aCommandObj</parametername>
</parameternamelist>
<parameterdescription>
<para>The interface to withdraw </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands_manager_16d09e15101aba3e2f8e6a5d17c73c9be" kindref="member">publish</ref>, <ref refid="interfacesb_i_playlist_commands_manager_177c7b69bd536005897ab613fc6a913a6" kindref="member">request</ref>, kPlaylistCommands.jsm, <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L694">http://publicsvn.songbirdnest.com/browser/trunk/components/playlistcommands/src/sbPublicPlaylistCommands.js#L694</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="542"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_commands_manager_177c7b69bd536005897ab613fc6a913a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
        <definition>sbIPlaylistCommands sbIPlaylistCommandsManager::request</definition>
        <argsstring>(in AString aContextGUID)</argsstring>
        <name>request</name>
        <param>
          <type>in AString</type>
          <declname>aContextGUID</declname>
        </param>
        <briefdescription>
<para>Request a copy of a published <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> interface. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCommandGUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The GUID identifying this command interface </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the requested interface, or null if that interface is not in the manager&apos;s repository. </para></simplesect>
<simplesect kind="see"><para><ref refid="interfacesb_i_playlist_commands_manager_16d09e15101aba3e2f8e6a5d17c73c9be" kindref="member">publish</ref>, <ref refid="interfacesb_i_playlist_commands_manager_122398c9895ed02233d68a829ddade0ac" kindref="member">withdraw</ref>, kPlaylistCommands.jsm, <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref> </para><para><ulink url="http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L130">http://publicsvn.songbirdnest.com/browser/extensions/commandsexample/chrome/content/scripts/CommandsExample.js#L130</ulink> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="553"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The service used to register, unregister, and list playlist commands for a particular playlist guid or type. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" line="421" bodyfile="z:/projects/songbird/components/playlistcommands/public/sbIPlaylistCommands.idl" bodystart="420" bodyend="554"/>
    <listofallmembers>
      <member refid="interfacesb_i_playlist_commands_manager_1e0955c51878fae0a49d5f65ad3a5356d" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>getPlaylistCommandsMediaItem</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_1add075eaf8e161fa5dee7b37123a0eb6" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>getPlaylistCommandsMediaList</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_16d09e15101aba3e2f8e6a5d17c73c9be" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>publish</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_1d43255300ff79bffb9d103d4647de36d" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>registerPlaylistCommandsMediaItem</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_1c4861ebbacc2d3690b01ba3c245a9e0e" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>registerPlaylistCommandsMediaList</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_177c7b69bd536005897ab613fc6a913a6" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>request</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_14d7b3bd7eafd494e724aea3dc3d37909" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>unregisterPlaylistCommandsMediaItem</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_1f4f55b9bca19a4838b0243e8712d4453" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>unregisterPlaylistCommandsMediaList</name></member>
      <member refid="interfacesb_i_playlist_commands_manager_122398c9895ed02233d68a829ddade0ac" prot="public" virt="non-virtual"><scope>sbIPlaylistCommandsManager</scope><name>withdraw</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
