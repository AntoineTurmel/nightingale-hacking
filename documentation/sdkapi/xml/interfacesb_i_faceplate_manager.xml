<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_faceplate_manager" kind="interface" prot="public">
    <compoundname>sbIFaceplateManager</compoundname>
    <includes refid="sb_i_faceplate_manager_8idl" local="no">sbIFaceplateManager.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_faceplate_manager_105e4bc17ebe97cf1476ccc0c91e0727a" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long sbIFaceplateManager::paneCount</definition>
        <argsstring></argsstring>
        <name>paneCount</name>
        <briefdescription>
<para>The number of registered faceplate panes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="89" bodyfile="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_1545cf70bbb71ce151fd93679f93b6316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplateManager::showPane</definition>
        <argsstring>(in sbIFaceplatePane aPane)</argsstring>
        <name>showPane</name>
        <param>
          <type>in <ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref></type>
          <declname>aPane</declname>
        </param>
        <briefdescription>
<para>Cause a faceplate pane to be created in all faceplates using the given XBL binding url.Cause all faceplate widgets to immediately switch to the given faceplate pane. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPane</parametername>
</parameternamelist>
<parameterdescription>
<para>An active, instantiated, faceplate pane interface. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="116"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_16b31c1d60034d5cab222c88bf806b498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref></type>
        <definition>sbIFaceplatePane sbIFaceplateManager::getPane</definition>
        <argsstring>(in AString aID)</argsstring>
        <name>getPane</name>
        <param>
          <type>in AString</type>
          <declname>aID</declname>
        </param>
        <briefdescription>
<para>Cause all faceplate widgets to immediately destory their instances of the given faceplate pane. Get an interface representing all instances of a particular faceplate pane. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aID</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique string identifier for this pane. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An interface that can be used to communicate with all the instances of this faceplate pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="136"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_1a89914857c072e2c353a3a5ab90b0fe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>nsISimpleEnumerator</type>
        <definition>nsISimpleEnumerator sbIFaceplateManager::getPanes</definition>
        <argsstring>()</argsstring>
        <name>getPanes</name>
        <briefdescription>
<para>Gets an enumerator for all instantiated faceplate panes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An enumerator containing <ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref> interfaces </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="142"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_1b3123e5ca85835f5e94fdeea42d4c045" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref></type>
        <definition>sbIFaceplatePane sbIFaceplateManager::getDefaultPane</definition>
        <argsstring>()</argsstring>
        <name>getDefaultPane</name>
        <briefdescription>
<para>Get the pane used in the most recent call to showPane. Used to determine what pane a faceplate should display on load. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An active, instantiated, faceplate pane interface. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="149"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_1c8dcacaa2eaa08c03ae7c1c2c948e31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplateManager::addListener</definition>
        <argsstring>(in sbIFaceplateManagerListener aListener)</argsstring>
        <name>addListener</name>
        <param>
          <type>in <ref refid="interfacesb_i_faceplate_manager_listener" kindref="compound">sbIFaceplateManagerListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Register to receive notification when panes are added, removed, and shown. Make sure you remove any listeners you add. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aListener</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback interface </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="157"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_faceplate_manager_1a21378003022b523c9812263add006b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIFaceplateManager::removeListener</definition>
        <argsstring>(in sbIFaceplateManagerListener aListener)</argsstring>
        <name>removeListener</name>
        <param>
          <type>in <ref refid="interfacesb_i_faceplate_manager_listener" kindref="compound">sbIFaceplateManagerListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Unregister notification callbacks. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aListener</parametername>
</parameternamelist>
<parameterdescription>
<para>Previously added callback interface </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manages the panes that are displayed in faceplate widgets. </para>    </briefdescription>
    <detaileddescription>
<para>WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING</para><para>We are redesigning this integration point to better balance user and developer value. In the meantime, the faceplate interface will be disabled to avoid premature use.</para><para>If you need to display status information please open a tab, open a window, or use the status bar area for the time being.</para><para>Please submit any suggestions/feedback as bug reports to <ulink url="http://bugzilla.songbirdnest.com">http://bugzilla.songbirdnest.com</ulink></para><para>WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING</para><para>To use the generic progress display faceplate:  <programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>manager<sp/>=<sp/><sp/>Components.classes[</highlight><highlight class="stringliteral">&quot;@songbirdnest.com/faceplate/manager;1&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.getService(Components.interfaces.sbIFaceplateManager);<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>pane<sp/>=<sp/>manager.createPane(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chrome://songbird/content/bindings/facePlate.xml#progress-pane&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;label1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>demo<sp/>of<sp/>the&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;label2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;progress<sp/>faceplate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;progress-mode&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;determined&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;progress-value&quot;</highlight><highlight class="normal">,<sp/>60);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;label1-hidden&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;label2-hidden&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pane.setData(</highlight><highlight class="stringliteral">&quot;progress-hidden&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight></codeline>
</programlisting></para><para>To make a custom faceplate, see the facePlate.xml. Create a binding to act as a pane, register it using sbIFaceplateManager.createPane, communicate with it via <ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref>, and then remove it via sbIFaceplateManager.destroyPane when finished.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_faceplate_pane" kindref="compound">sbIFaceplatePane</ref> facePlate.xml </para></simplesect>
</para>    </detaileddescription>
    <location file="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" line="85" bodyfile="e:/Projects/songbird/trunk/components/faceplate/public/sbIFaceplateManager.idl" bodystart="84" bodyend="165"/>
    <listofallmembers>
      <member refid="interfacesb_i_faceplate_manager_1c8dcacaa2eaa08c03ae7c1c2c948e31e" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>addListener</name></member>
      <member refid="interfacesb_i_faceplate_manager_1b3123e5ca85835f5e94fdeea42d4c045" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>getDefaultPane</name></member>
      <member refid="interfacesb_i_faceplate_manager_16b31c1d60034d5cab222c88bf806b498" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>getPane</name></member>
      <member refid="interfacesb_i_faceplate_manager_1a89914857c072e2c353a3a5ab90b0fe1" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>getPanes</name></member>
      <member refid="interfacesb_i_faceplate_manager_105e4bc17ebe97cf1476ccc0c91e0727a" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>paneCount</name></member>
      <member refid="interfacesb_i_faceplate_manager_1a21378003022b523c9812263add006b0" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>removeListener</name></member>
      <member refid="interfacesb_i_faceplate_manager_1545cf70bbb71ce151fd93679f93b6316" prot="public" virt="non-virtual"><scope>sbIFaceplateManager</scope><name>showPane</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
