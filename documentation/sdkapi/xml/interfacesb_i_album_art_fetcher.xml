<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_album_art_fetcher" kind="interface" prot="public">
    <compoundname>sbIAlbumArtFetcher</compoundname>
    <derivedcompoundref refid="interfacesb_i_album_art_fetcher_set" prot="public" virt="non-virtual">sbIAlbumArtFetcherSet</derivedcompoundref>
    <includes refid="sb_i_album_art_fetcher_8idl" local="no">sbIAlbumArtFetcher.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_11746f3709c9cac9c1f49e9d7f1c1cf71" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIAlbumArtFetcher::shortName</definition>
        <argsstring></argsstring>
        <name>shortName</name>
        <briefdescription>
<para>Short name of AlbumArtFetcher. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="58" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_1a7de9e782a7485aa19f4689d86b8e1cb" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIAlbumArtFetcher::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Name of AlbumArtFetcher to display to the user on things like menus. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="64" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_1af76c37775392e96621dd55dde3c00e2" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIAlbumArtFetcher::description</definition>
        <argsstring></argsstring>
        <name>description</name>
        <briefdescription>
<para>Description of the AlbumArtFetcher to display to the user. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="69" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_1f0e116558c99df98213df5925fabddf7" prot="public" static="no" mutable="no">
        <type>readonly attribute boolean</type>
        <definition>readonly attribute boolean sbIAlbumArtFetcher::isLocal</definition>
        <argsstring></argsstring>
        <name>isLocal</name>
        <briefdescription>
<para>Flag to indicate if this Fetcher fetches from local sources. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="74" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_1c9205bd18be39e369a6563873b41ef80" prot="public" static="no" mutable="no">
        <type>attribute boolean</type>
        <definition>attribute boolean sbIAlbumArtFetcher::isEnabled</definition>
        <argsstring></argsstring>
        <name>isEnabled</name>
        <briefdescription>
<para>Flag to indicate if this Fetcher is enabled or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="79" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_1f0fb64cdfe322e7bee03ce72215e7085" prot="public" static="no" mutable="no">
        <type>attribute PRInt32</type>
        <definition>attribute PRInt32 sbIAlbumArtFetcher::priority</definition>
        <argsstring></argsstring>
        <name>priority</name>
        <briefdescription>
<para>Priority of this fetcher, a lower number represents a higher priority (so 0 is higher than 10). If multiple fetchers have the same priority then it is first come first serve at that priority. The priorities should not fall below 0 except where a priority of -1 will mean to append to end of list (so it will be the lowest priority). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="89" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_album_art_fetcher_12e7aa9a9a21e080e84ee372a384ff3a1" prot="public" static="no" mutable="no">
        <type>attribute nsIArray</type>
        <definition>attribute nsIArray sbIAlbumArtFetcher::albumArtSourceList</definition>
        <argsstring></argsstring>
        <name>albumArtSourceList</name>
        <briefdescription>
<para>List of sources of album art (e.g., <ref refid="interfacesb_i_metadata_handler" kindref="compound">sbIMetadataHandler</ref>). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="94" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_album_art_fetcher_1e473a55326d08aea0533d88124dae70f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIAlbumArtFetcher::fetchAlbumArtForAlbum</definition>
        <argsstring>(in nsIArray aMediaItems, in sbIAlbumArtListener aListener)</argsstring>
        <name>fetchAlbumArtForAlbum</name>
        <param>
          <type>in nsIArray</type>
          <declname>aMediaItems</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_album_art_listener" kindref="compound">sbIAlbumArtListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Try to fetch album art for a list of items that belong to the same album. This function infers that all items in the list are from the same album. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aMediaItems</parametername>
</parameternamelist>
<parameterdescription>
<para>is an array of sbIMediaItems from the same album </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aListener</parametername>
</parameternamelist>
<parameterdescription>
<para>the listener to inform of success or failure</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>A call to aListener will be done for each item in the list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="106"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_album_art_fetcher_1a891fa93236b58c6b9eded65572bb877" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIAlbumArtFetcher::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for an album art fetcher. Instantiate as a component instance. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="interfacesb_i_album_art_listener" kindref="compound">sbIAlbumArtListener</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="10">
        <label>sbIAlbumArtFetcher</label>
        <link refid="interfacesb_i_album_art_fetcher"/>
      </node>
      <node id="11">
        <label>sbIAlbumArtFetcherSet</label>
        <link refid="interfacesb_i_album_art_fetcher_set"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" line="54" bodyfile="c:/builds/songbird/trunk/components/albumart/public/sbIAlbumArtFetcher.idl" bodystart="53" bodyend="111"/>
    <listofallmembers>
      <member refid="interfacesb_i_album_art_fetcher_12e7aa9a9a21e080e84ee372a384ff3a1" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>albumArtSourceList</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1af76c37775392e96621dd55dde3c00e2" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>description</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1e473a55326d08aea0533d88124dae70f" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>fetchAlbumArtForAlbum</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1c9205bd18be39e369a6563873b41ef80" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>isEnabled</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1f0e116558c99df98213df5925fabddf7" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>isLocal</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1a7de9e782a7485aa19f4689d86b8e1cb" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>name</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1f0fb64cdfe322e7bee03ce72215e7085" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>priority</name></member>
      <member refid="interfacesb_i_album_art_fetcher_11746f3709c9cac9c1f49e9d7f1c1cf71" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>shortName</name></member>
      <member refid="interfacesb_i_album_art_fetcher_1a891fa93236b58c6b9eded65572bb877" prot="public" virt="non-virtual"><scope>sbIAlbumArtFetcher</scope><name>shutdown</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
