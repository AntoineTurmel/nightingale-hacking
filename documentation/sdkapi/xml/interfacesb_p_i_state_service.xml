<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_p_i_state_service" kind="interface" prot="public">
    <compoundname>sbPIStateService</compoundname>
    <includes refid="sb_p_i_state_service_8idl" local="no">sbPIStateService.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_p_i_state_service_1c9bec0da23d7fc8dc35006710a3857b7" prot="public" static="no" mutable="no">
        <type>attribute nsISimpleEnumerator</type>
        <definition>attribute nsISimpleEnumerator sbPIStateService::stateDatastores</definition>
        <argsstring></argsstring>
        <name>stateDatastores</name>
        <briefdescription>
<para>Enumerator of available datastore types. Enumerator of available datastore types. The enumerated nsISupports should always QI to a <ref refid="interfacesb_i_state_datastore" kindref="compound">sbIStateDatastore</ref> interface. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" line="56" bodyfile="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_p_i_state_service_1e25664efa00461ab62f37b9d5c4fd334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbPIStateService::addStateObject</definition>
        <argsstring>(in sbIStateObject aStateObject, in boolean aPersistentObject)</argsstring>
        <name>addStateObject</name>
        <param>
          <type>in <ref refid="interfacesb_i_state_object" kindref="compound">sbIStateObject</ref></type>
          <declname>aStateObject</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>aPersistentObject</declname>
        </param>
        <briefdescription>
<para>Add a state object to the state service repository. </para>        </briefdescription>
        <detaileddescription>
<para>Adding a state object to the state service repository is automatic upon creation of a state object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" line="64"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_p_i_state_service_13edb8fbf80daeca9742a49b052239cba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbPIStateService::removeStateObject</definition>
        <argsstring>(in sbIStateObject aStateObject)</argsstring>
        <name>removeStateObject</name>
        <param>
          <type>in <ref refid="interfacesb_i_state_object" kindref="compound">sbIStateObject</ref></type>
          <declname>aStateObject</declname>
        </param>
        <briefdescription>
<para>Remove a state object to the state service repository. </para>        </briefdescription>
        <detaileddescription>
<para>Removing a state object from the state service repository is automatic upon destruction of a state object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" line="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>[USER CODE SHOULD NOT REFERENCE THIS CLASS] </para>    </briefdescription>
    <detaileddescription>
<para>This interface is implemented as a singleton service. This interface should only be used by code implementing the <ref refid="interfacesb_i_state_object" kindref="compound">sbIStateObject</ref> interface.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_state_object" kindref="compound">sbIStateObject</ref> </para></simplesect>
<simplesect kind="note"><para>This interface *is* threadsafe. Implementations should follow this assumption. </para></simplesect>
</para>    </detaileddescription>
    <location file="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" line="50" bodyfile="E:/Projects/songbird/trunk/components/state/public/sbPIStateService.idl" bodystart="49" bodyend="73"/>
    <listofallmembers>
      <member refid="interfacesb_p_i_state_service_1e25664efa00461ab62f37b9d5c4fd334" prot="public" virt="non-virtual"><scope>sbPIStateService</scope><name>addStateObject</name></member>
      <member refid="interfacesb_p_i_state_service_13edb8fbf80daeca9742a49b052239cba" prot="public" virt="non-virtual"><scope>sbPIStateService</scope><name>removeStateObject</name></member>
      <member refid="interfacesb_p_i_state_service_1c9bec0da23d7fc8dc35006710a3857b7" prot="public" virt="non-virtual"><scope>sbPIStateService</scope><name>stateDatastores</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
