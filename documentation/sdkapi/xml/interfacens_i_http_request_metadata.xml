<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacens_i_http_request_metadata" kind="interface" prot="public">
    <compoundname>nsIHttpRequestMetadata</compoundname>
    <includes refid="ns_i_http_server_8idl" local="no">nsIHttpServer.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_14632959e1f434521d67ede765aeeb0c7" prot="public" static="no" mutable="no">
        <type>readonly attribute string</type>
        <definition>readonly attribute string nsIHttpRequestMetadata::method</definition>
        <argsstring></argsstring>
        <name>method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The request type for this request (see RFC 2616, section 5.1.1). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="213" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_1b506c4ca676904b02fcc53ffe234c0d0" prot="public" static="no" mutable="no">
        <type>readonly attribute string</type>
        <definition>readonly attribute string nsIHttpRequestMetadata::host</definition>
        <argsstring></argsstring>
        <name>host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The host of the data being requested (e.g. &quot;localhost&quot; for the <ulink url="http://localhost:8080/file">http://localhost:8080/file</ulink> resource). Note that the relevant port on the host is specified in this.port. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="220" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_1b92290e3606856f1e4f4408e4939015f" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long nsIHttpRequestMetadata::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The port on the server on which the request was received. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="225" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_194799613ea43b992c9e77413330ad9a2" prot="public" static="no" mutable="no">
        <type>readonly attribute string</type>
        <definition>readonly attribute string nsIHttpRequestMetadata::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The requested path, without any query string (e.g. &quot;/dir/file.txt&quot;). It is guaranteed to begin with a &quot;/&quot;. This string is in the </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="231" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_1bba9381df6833faaf422e8eb7efe2193" prot="public" static="no" mutable="no">
        <type>readonly attribute string</type>
        <definition>readonly attribute string nsIHttpRequestMetadata::queryString</definition>
        <argsstring></argsstring>
        <name>queryString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The URL-encoded query string associated with this request, not including the initial &quot;?&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="237" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_1f5140947a19ec5957de10e121be28213" prot="public" static="no" mutable="no">
        <type>readonly attribute string</type>
        <definition>readonly attribute string nsIHttpRequestMetadata::httpVersion</definition>
        <argsstring></argsstring>
        <name>httpVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A string containing the HTTP version of the request (i.e., &quot;1.1&quot;). Leading zeros for either component of the version will be omitted. (In other words, if the request contains the version &quot;1.01&quot;, this attribute will be &quot;1.1&quot;; see RFC 2616, section 3.1.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="245" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacens_i_http_request_metadata_175b4ddb79c439774ec39c4ef149f6ccb" prot="public" static="no" mutable="no">
        <type>readonly attribute nsISimpleEnumerator</type>
        <definition>readonly attribute nsISimpleEnumerator nsIHttpRequestMetadata::headers</definition>
        <argsstring></argsstring>
        <name>headers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An nsISimpleEnumerator over the names of the headers in this request. The header field names in the enumerator may not necessarily have the same case as they do in the request itself. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="284" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="284" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacens_i_http_request_metadata_127b89fa6edfe7fcdbdb1821ccc16c934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string nsIHttpRequestMetadata::getHeader</definition>
        <argsstring>(in string fieldName)</argsstring>
        <name>getHeader</name>
        <param>
          <type>in string</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value for the header in this request specified by fieldName.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the field whose value is to be gotten; note that since HTTP header field names are case-insensitive, this method produces equivalent results for &quot;HeAdER&quot; and &quot;hEADer&quot; as fieldName </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the field value for the given header; note that this value may be normalized (e.g., leading/trailing whitespace removed from the value [or from the values which make this up, if the header is a comma-separated list of values], whitespace runs compressed to single spaces, etc.) </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_INVALID_ARG</parametername>
</parameternamelist>
<parameterdescription>
<para>if fieldName does not constitute a valid header field name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NS_ERROR_NOT_AVAILABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>if the given header does not exist in this </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="264"/>
      </memberdef>
      <memberdef kind="function" id="interfacens_i_http_request_metadata_1fa0027a86b80d01cfb6e59fe63c13713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean nsIHttpRequestMetadata::hasHeader</definition>
        <argsstring>(in string fieldName)</argsstring>
        <name>hasHeader</name>
        <param>
          <type>in string</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a header with the given field name exists in this, false otherwise.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldName</parametername>
</parameternamelist>
<parameterdescription>
<para>the field name whose existence is to be determined in this; note that since HTTP header field names are case-insensitive, this method produces equivalent results for &quot;HeAdER&quot; and &quot;hEADer&quot; as fieldName </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_INVALID_ARG</parametername>
</parameternamelist>
<parameterdescription>
<para>if fieldName does not constitute a valid header field name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface that represents the data included in an HTTP request. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="209" bodyfile="z:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="208" bodyend="287"/>
    <listofallmembers>
      <member refid="interfacens_i_http_request_metadata_127b89fa6edfe7fcdbdb1821ccc16c934" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>getHeader</name></member>
      <member refid="interfacens_i_http_request_metadata_1fa0027a86b80d01cfb6e59fe63c13713" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>hasHeader</name></member>
      <member refid="interfacens_i_http_request_metadata_175b4ddb79c439774ec39c4ef149f6ccb" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>headers</name></member>
      <member refid="interfacens_i_http_request_metadata_1b506c4ca676904b02fcc53ffe234c0d0" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>host</name></member>
      <member refid="interfacens_i_http_request_metadata_1f5140947a19ec5957de10e121be28213" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>httpVersion</name></member>
      <member refid="interfacens_i_http_request_metadata_14632959e1f434521d67ede765aeeb0c7" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>method</name></member>
      <member refid="interfacens_i_http_request_metadata_194799613ea43b992c9e77413330ad9a2" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>path</name></member>
      <member refid="interfacens_i_http_request_metadata_1b92290e3606856f1e4f4408e4939015f" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>port</name></member>
      <member refid="interfacens_i_http_request_metadata_1bba9381df6833faaf422e8eb7efe2193" prot="public" virt="non-virtual"><scope>nsIHttpRequestMetadata</scope><name>queryString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
