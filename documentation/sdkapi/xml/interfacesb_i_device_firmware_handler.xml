<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_device_firmware_handler" kind="interface" prot="public">
    <compoundname>sbIDeviceFirmwareHandler</compoundname>
    <includes refid="sb_i_device_firmware_handler_8idl" local="no">sbIDeviceFirmwareHandler.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1f504a1818c41518f5b40df683bbd9ae3" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIDeviceFirmwareHandler::contractId</definition>
        <argsstring></argsstring>
        <name>contractId</name>
        <briefdescription>
<para>The Contract ID for this handler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="46" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1b020f95bc729ea078ae08562443d6ac5" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIURI</type>
        <definition>readonly attribute nsIURI sbIDeviceFirmwareHandler::latestFirmwareLocation</definition>
        <argsstring></argsstring>
        <name>latestFirmwareLocation</name>
        <briefdescription>
<para>URI for latest firmware (where it can be downloaded from). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="53" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_166aa0116e0c56335fc918e11c9a90b53" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long sbIDeviceFirmwareHandler::latestFirmwareVersion</definition>
        <argsstring></argsstring>
        <name>latestFirmwareVersion</name>
        <briefdescription>
<para>The latest firmware version, in machine friendly format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="60" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_13cd18cbb7cab0eff1705a7dbb89fd9ef" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIDeviceFirmwareHandler::latestFirmwareReadableVersion</definition>
        <argsstring></argsstring>
        <name>latestFirmwareReadableVersion</name>
        <briefdescription>
<para>The latest firmware version, in human readable format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="67" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1a5b913c8d23dcd1d51ae7bb58bf7e28e" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long sbIDeviceFirmwareHandler::currentFirmwareVersion</definition>
        <argsstring></argsstring>
        <name>currentFirmwareVersion</name>
        <briefdescription>
<para>The current firmware version, in machine friendly format. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The handler must be bound to a device for this value to be valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="74" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_10262a5fb9e35164c27484dbab5d427a6" prot="public" static="no" mutable="no">
        <type>readonly attribute AString</type>
        <definition>readonly attribute AString sbIDeviceFirmwareHandler::currentFirmwareReadableVersion</definition>
        <argsstring></argsstring>
        <name>currentFirmwareReadableVersion</name>
        <briefdescription>
<para>The current firmware version on the device, in human readable format (eg. xx.xx.xx.xx). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The handler must be bound to a device for this value to be valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="81" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1ab3335ba0276e485849ec7fbe4392224" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIURI</type>
        <definition>readonly attribute nsIURI sbIDeviceFirmwareHandler::releaseNotesLocation</definition>
        <argsstring></argsstring>
        <name>releaseNotesLocation</name>
        <briefdescription>
<para>Location for the release notes of the latest firmware. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="88" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1ecf236a718269e630ecd656133216ca6" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIURI</type>
        <definition>readonly attribute nsIURI sbIDeviceFirmwareHandler::resetInstructionsLocation</definition>
        <argsstring></argsstring>
        <name>resetInstructionsLocation</name>
        <briefdescription>
<para>Location of the reset instructions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="95" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1e21224a425fc63048b944100a4e7a312" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIURI</type>
        <definition>readonly attribute nsIURI sbIDeviceFirmwareHandler::customerSupportLocation</definition>
        <argsstring></argsstring>
        <name>customerSupportLocation</name>
        <briefdescription>
<para>Device Customer Support URL. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until is is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="102" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1e4baa66d90ddd51c375777eded290151" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIURI</type>
        <definition>readonly attribute nsIURI sbIDeviceFirmwareHandler::registerLocation</definition>
        <argsstring></argsstring>
        <name>registerLocation</name>
        <briefdescription>
<para>Location where one can perform owner registration with the device manufacturer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="110" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1534726c028240f0051e937355b8ae055" prot="public" static="no" mutable="no">
        <type>readonly attribute boolean</type>
        <definition>readonly attribute boolean sbIDeviceFirmwareHandler::needsRecoveryMode</definition>
        <argsstring></argsstring>
        <name>needsRecoveryMode</name>
        <briefdescription>
<para>Whether the device needs to be in recovery mode to have its firmware updated. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="118" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1dbd4c7eb9a88471ad2eddaac40004311" prot="public" static="no" mutable="no">
        <type>readonly attribute boolean</type>
        <definition>readonly attribute boolean sbIDeviceFirmwareHandler::recoveryMode</definition>
        <argsstring></argsstring>
        <name>recoveryMode</name>
        <briefdescription>
<para>Indicates whether the device is in recovery mode or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This value is not valid until it is refreshed at least once. The value can be refreshed by calling refreshInfo. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="125" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_1ca56d3a3752e7fb3d1250563ac695216" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_device_firmware_update" kindref="compound">sbIDeviceFirmwareUpdate</ref></type>
        <definition>readonly attribute sbIDeviceFirmwareUpdate sbIDeviceFirmwareHandler::defaultFirmwareUpdate</definition>
        <argsstring></argsstring>
        <name>defaultFirmwareUpdate</name>
        <briefdescription>
<para>The default firmware update that is packaged with the firmware handler. This update should always be available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="131" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_firmware_handler_13cdeddb04a35be60022cb84feec1ca42" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
        <definition>readonly attribute sbIDevice sbIDeviceFirmwareHandler::boundDevice</definition>
        <argsstring></argsstring>
        <name>boundDevice</name>
        <briefdescription>
<para>The device bound to this handler, or null. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="136" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_143c07f534e764e08bc81ddb0d38e76d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIDeviceFirmwareHandler::canHandleDevice</definition>
        <argsstring>(in sbIDevice aDevice)</argsstring>
        <name>canHandleDevice</name>
        <param>
          <type>in <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
          <declname>aDevice</declname>
        </param>
        <briefdescription>
<para>Check to see if this handler supports the given device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- The device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>No events need to be sent for this method. It should be a synchronous operation. But, do try and be as quick about it as possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="144"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_156601b57d30b562d1acb7200d4974421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIDeviceFirmwareHandler::canUpdate</definition>
        <argsstring>(in sbIDevice aDevice)</argsstring>
        <name>canUpdate</name>
        <param>
          <type>in <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
          <declname>aDevice</declname>
        </param>
        <briefdescription>
<para>Check to see if this handler can update the specified device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- The device </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>No events need to be sent for this method. It should be a synchronous operation. But, do try and be as quick about it as possible. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="152"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_110c0a5b9bda91fe00ee0fa86057915b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::bind</definition>
        <argsstring>(in sbIDevice aDevice, in sbIDeviceEventListener aListener)</argsstring>
        <name>bind</name>
        <param>
          <type>in <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
          <declname>aDevice</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_device_event_listener" kindref="compound">sbIDeviceEventListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Bind the handler to a device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- The device you wish to bind to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[optional]</parametername>
</parameternamelist>
<parameterdescription>
<para>aListener - Optional event listener to also send events to, may be null. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>This can only be called once, all subsequent calls to this method will return NS_ERROR_ALREADY_INITIALIZED. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_ALREADY_INITIALIZED</parametername>
</parameternamelist>
<parameterdescription>
<para>when handler is already bound. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="163"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_146aa3a6c0803f1becc3f5698a7f5a8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIDeviceFirmwareHandler::rebind</definition>
        <argsstring>(in sbIDevice aDevice, in sbIDeviceEventListener aListener)</argsstring>
        <name>rebind</name>
        <param>
          <type>in <ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
          <declname>aDevice</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_device_event_listener" kindref="compound">sbIDeviceEventListener</ref></type>
          <declname>aListener</declname>
        </param>
        <briefdescription>
<para>Rebind a device to an already running handler. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aDevice</parametername>
</parameternamelist>
<parameterdescription>
<para>- The device you wish to bind to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[optional]</parametername>
</parameternamelist>
<parameterdescription>
<para>aListener - Optional event listener to also send events to, may be null. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Rebind is meant to be used when a device switches modes but must continue an existing firmware update (eg. switching to recovery mode). </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>PR_TRUE</parametername>
</parameternamelist>
<parameterdescription>
<para>Rebinding was successful </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>PR_FALSE</parametername>
</parameternamelist>
<parameterdescription>
<para>Rebinding failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="176"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_153b5cdb1d3c7f30cf66fff0f048cf48c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::unbind</definition>
        <argsstring>()</argsstring>
        <name>unbind</name>
        <briefdescription>
<para>Unbind the handler. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="181"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_179b163deae0780432c8670234c9a9545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::cancel</definition>
        <argsstring>()</argsstring>
        <name>cancel</name>
        <briefdescription>
<para>Cancel the current operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="186"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_13846381716f0659c09027ccfdf6fcbb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::refreshInfo</definition>
        <argsstring>()</argsstring>
        <name>refreshInfo</name>
        <briefdescription>
<para>Refresh the firmware location, version, readable version, notes, and instructions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="192"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_198f987fcfdc32d1e0fb681bbff2030c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::update</definition>
        <argsstring>(in sbIDeviceFirmwareUpdate aFirmwareUpdate)</argsstring>
        <name>update</name>
        <param>
          <type>in <ref refid="interfacesb_i_device_firmware_update" kindref="compound">sbIDeviceFirmwareUpdate</ref></type>
          <declname>aFirmwareUpdate</declname>
        </param>
        <briefdescription>
<para>Perform a firmware update on the specified device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFirmwareUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>- The firmware update to apply </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="198"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_1501f2648bdcdb53ab1aa08e792b469d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::recover</definition>
        <argsstring>(in sbIDeviceFirmwareUpdate aFirmwareUpdate)</argsstring>
        <name>recover</name>
        <param>
          <type>in <ref refid="interfacesb_i_device_firmware_update" kindref="compound">sbIDeviceFirmwareUpdate</ref></type>
          <declname>aFirmwareUpdate</declname>
        </param>
        <briefdescription>
<para>Perform a recovery update on the specified device. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Calling this method will often wipe all content from the device </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFirmwareUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>- The firmware update to apply during the recovery update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="206"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_1c73482618e093f76ad82a95ca6da3426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::verifyDevice</definition>
        <argsstring>()</argsstring>
        <name>verifyDevice</name>
        <briefdescription>
<para>Verify the firmware already on the device. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="211"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_firmware_handler_1db91ae019c1faaa9907711ba7ddafc57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceFirmwareHandler::verifyUpdate</definition>
        <argsstring>(in sbIDeviceFirmwareUpdate aFirmwareUpdate)</argsstring>
        <name>verifyUpdate</name>
        <param>
          <type>in <ref refid="interfacesb_i_device_firmware_update" kindref="compound">sbIDeviceFirmwareUpdate</ref></type>
          <declname>aFirmwareUpdate</declname>
        </param>
        <briefdescription>
<para>Verify the firmware update image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aFirmwareUpdate</parametername>
</parameternamelist>
<parameterdescription>
<para>- The firmware update to verify </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Implementations of this interface must be threadsafe. </para><para>The methods which take an <ref refid="interfacesb_i_device_event_listener" kindref="compound">sbIDeviceEventListener</ref> will also send events to the registered device listeners. You only need to use your own listener if you do not have a listener registered with the device. </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="159">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="155">
        <label>sbIDeviceStatus</label>
        <link refid="interfacesb_i_device_status"/>
        <childnode refid="156" relation="usage">
          <edgelabel>mediaItem</edgelabel>
        </childnode>
        <childnode refid="159" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
      </node>
      <node id="152">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="153" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="155" relation="usage">
          <edgelabel>currentStatus</edgelabel>
        </childnode>
        <childnode refid="160" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="158">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
        <childnode refid="152" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="154" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="161">
        <label>sbIDeviceFirmwareUpdate</label>
        <link refid="interfacesb_i_device_firmware_update"/>
      </node>
      <node id="151">
        <label>sbIDeviceFirmwareHandler</label>
        <link refid="interfacesb_i_device_firmware_handler"/>
        <childnode refid="152" relation="usage">
          <edgelabel>boundDevice</edgelabel>
        </childnode>
        <childnode refid="161" relation="usage">
          <edgelabel>defaultFirmwareUpdate</edgelabel>
        </childnode>
      </node>
      <node id="157">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="156">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
        <childnode refid="158" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="154" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="154">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
      <node id="160">
        <label>sbIDeviceProperties</label>
        <link refid="interfacesb_i_device_properties"/>
      </node>
    </collaborationgraph>
    <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" line="42" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceFirmwareHandler.idl" bodystart="41" bodyend="218"/>
    <listofallmembers>
      <member refid="interfacesb_i_device_firmware_handler_110c0a5b9bda91fe00ee0fa86057915b1" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>bind</name></member>
      <member refid="interfacesb_i_device_firmware_handler_13cdeddb04a35be60022cb84feec1ca42" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>boundDevice</name></member>
      <member refid="interfacesb_i_device_firmware_handler_179b163deae0780432c8670234c9a9545" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>cancel</name></member>
      <member refid="interfacesb_i_device_firmware_handler_143c07f534e764e08bc81ddb0d38e76d2" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>canHandleDevice</name></member>
      <member refid="interfacesb_i_device_firmware_handler_156601b57d30b562d1acb7200d4974421" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>canUpdate</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1f504a1818c41518f5b40df683bbd9ae3" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>contractId</name></member>
      <member refid="interfacesb_i_device_firmware_handler_10262a5fb9e35164c27484dbab5d427a6" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>currentFirmwareReadableVersion</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1a5b913c8d23dcd1d51ae7bb58bf7e28e" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>currentFirmwareVersion</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1e21224a425fc63048b944100a4e7a312" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>customerSupportLocation</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1ca56d3a3752e7fb3d1250563ac695216" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>defaultFirmwareUpdate</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1b020f95bc729ea078ae08562443d6ac5" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>latestFirmwareLocation</name></member>
      <member refid="interfacesb_i_device_firmware_handler_13cd18cbb7cab0eff1705a7dbb89fd9ef" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>latestFirmwareReadableVersion</name></member>
      <member refid="interfacesb_i_device_firmware_handler_166aa0116e0c56335fc918e11c9a90b53" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>latestFirmwareVersion</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1534726c028240f0051e937355b8ae055" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>needsRecoveryMode</name></member>
      <member refid="interfacesb_i_device_firmware_handler_146aa3a6c0803f1becc3f5698a7f5a8c4" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>rebind</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1501f2648bdcdb53ab1aa08e792b469d7" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>recover</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1dbd4c7eb9a88471ad2eddaac40004311" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>recoveryMode</name></member>
      <member refid="interfacesb_i_device_firmware_handler_13846381716f0659c09027ccfdf6fcbb8" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>refreshInfo</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1e4baa66d90ddd51c375777eded290151" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>registerLocation</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1ab3335ba0276e485849ec7fbe4392224" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>releaseNotesLocation</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1ecf236a718269e630ecd656133216ca6" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>resetInstructionsLocation</name></member>
      <member refid="interfacesb_i_device_firmware_handler_153b5cdb1d3c7f30cf66fff0f048cf48c" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>unbind</name></member>
      <member refid="interfacesb_i_device_firmware_handler_198f987fcfdc32d1e0fb681bbff2030c8" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>update</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1c73482618e093f76ad82a95ca6da3426" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>verifyDevice</name></member>
      <member refid="interfacesb_i_device_firmware_handler_1db91ae019c1faaa9907711ba7ddafc57" prot="public" virt="non-virtual"><scope>sbIDeviceFirmwareHandler</scope><name>verifyUpdate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
