<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_device_manager2" kind="interface" prot="public">
    <compoundname>sbIDeviceManager2</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_device_manager2_1a2a3cfae7846ecf48c9706db208dd248" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIArray</type>
        <definition>readonly attribute nsIArray sbIDeviceManager2::marshalls</definition>
        <argsstring></argsstring>
        <name>marshalls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of marshalls that are currently instantiated. Order is undefined and may change between reads. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="54" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_device_manager2_113cb9b15be3d1c3cccf19ebd152876f0" prot="public" static="no" mutable="no">
        <type>readonly attribute boolean</type>
        <definition>readonly attribute boolean sbIDeviceManager2::canDisconnect</definition>
        <argsstring></argsstring>
        <name>canDisconnect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Can all devices be disconnected? </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="99" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_device_manager2_15e0c8cbc945e32fc5ae44ee25ba4adc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_device_marshall" kindref="compound">sbIDeviceMarshall</ref></type>
        <definition>sbIDeviceMarshall sbIDeviceManager2::getMarshallByID</definition>
        <argsstring>(in nsIDPtr aIDPtr)</argsstring>
        <name>getMarshallByID</name>
        <param>
          <type>in nsIDPtr</type>
          <declname>aIDPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a device marshall by ID. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="59"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_manager2_1838771a8324f246904802be038a1eeef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIDeviceManager2::updateDevices</definition>
        <argsstring>()</argsstring>
        <name>updateDevices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simply calls updateDevices on all loaded controllers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="64"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_manager2_113cd79ad00524e79002859a6c7f84332" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_device_event" kindref="compound">sbIDeviceEvent</ref></type>
        <definition>sbIDeviceEvent sbIDeviceManager2::createEvent</definition>
        <argsstring>(in unsigned long aType,[optional] in nsIVariant aData,[optional] in nsISupports aOrigin)</argsstring>
        <name>createEvent</name>
        <param>
          <type>in unsigned long</type>
          <declname>aType</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in nsIVariant</type>
          <declname>aData</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in nsISupports</type>
          <declname>aOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new event</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the event; should be one of the COMMAND_* or EVENT_* constants on this interface.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aData</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The data to pass to any listeners that would receive this event.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aOrigin</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Some indication of the source of the event.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_device_event" kindref="compound">sbIDeviceEvent</ref> </para><para><ref refid="interfacesb_i_device_event_target" kindref="compound">sbIDeviceEventTarget</ref> </para><para><ref refid="interfacesb_i_device_event_listener" kindref="compound">sbIDeviceEventListener</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="83"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_device_manager2_13f4e04ef82ed23c426c1aa158461b56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_device" kindref="compound">sbIDevice</ref></type>
        <definition>sbIDevice sbIDeviceManager2::getDeviceForItem</definition>
        <argsstring>(in sbIMediaItem aItem)</argsstring>
        <name>getDeviceForItem</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
          <declname>aItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the device to which the media item specified by aItem belongs. If the media item does not belong to any device, return null.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aItem</parametername>
</parameternamelist>
<parameterdescription>
<para>Media item for which to get device.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Device to which media item belongs. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" line="49" bodyfile="c:/builds/songbird/trunk/components/devices/base/public/sbIDeviceManager.idl" bodystart="48" bodyend="100"/>
    <listofallmembers>
      <member refid="interfacesb_i_device_manager2_113cb9b15be3d1c3cccf19ebd152876f0" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>canDisconnect</name></member>
      <member refid="interfacesb_i_device_manager2_113cd79ad00524e79002859a6c7f84332" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>createEvent</name></member>
      <member refid="interfacesb_i_device_manager2_13f4e04ef82ed23c426c1aa158461b56e" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>getDeviceForItem</name></member>
      <member refid="interfacesb_i_device_manager2_15e0c8cbc945e32fc5ae44ee25ba4adc3" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>getMarshallByID</name></member>
      <member refid="interfacesb_i_device_manager2_1a2a3cfae7846ecf48c9706db208dd248" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>marshalls</name></member>
      <member refid="interfacesb_i_device_manager2_1838771a8324f246904802be038a1eeef" prot="public" virt="non-virtual"><scope>sbIDeviceManager2</scope><name>updateDevices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
