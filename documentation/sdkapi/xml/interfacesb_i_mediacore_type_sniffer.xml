<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_mediacore_type_sniffer" kind="interface" prot="public">
    <compoundname>sbIMediacoreTypeSniffer</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_mediacore_type_sniffer_1579234ef441f1552b1fe3d3f923aa6d5" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIStringEnumerator</type>
        <definition>readonly attribute nsIStringEnumerator sbIMediacoreTypeSniffer::audioFileExtensions</definition>
        <argsstring></argsstring>
        <name>audioFileExtensions</name>
        <briefdescription>
<para>Returns all audio file extensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="38" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_type_sniffer_128addfa12719fb17549a04d2e613955d" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIStringEnumerator</type>
        <definition>readonly attribute nsIStringEnumerator sbIMediacoreTypeSniffer::videoFileExtensions</definition>
        <argsstring></argsstring>
        <name>videoFileExtensions</name>
        <briefdescription>
<para>Returns all video file extensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="43" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_type_sniffer_198c807da1bf157222ec3f929e0667827" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIStringEnumerator</type>
        <definition>readonly attribute nsIStringEnumerator sbIMediacoreTypeSniffer::playlistFileExtensions</definition>
        <argsstring></argsstring>
        <name>playlistFileExtensions</name>
        <briefdescription>
<para>Returns all playlist file extensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="48" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_type_sniffer_1d70bcf1ec82aaf810010805f915735c4" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIStringEnumerator</type>
        <definition>readonly attribute nsIStringEnumerator sbIMediacoreTypeSniffer::mediaFileExtensions</definition>
        <argsstring></argsstring>
        <name>mediaFileExtensions</name>
        <briefdescription>
<para>Returns all media file extensions. Media file extensions are a combination of audio, video file extensions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="54" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_1303f6d0e42fa3c03c5f76ceed3380d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidMediaURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidMediaURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to media content This checks for a number of known file extensions and prefixes to see if the URL contains them and is therefore media. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURL</parametername>
</parameternamelist>
<parameterdescription>
<para>- the URL to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the URL points to media content </para><para>false if the URL does not point to media content </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="65"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_183209eb344b7aed43c8600ea99cbc2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidAudioURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidAudioURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to audio content This checks for a number of known file extensions to see if the URL contains them and is therefore audio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURL</parametername>
</parameternamelist>
<parameterdescription>
<para>- the URL to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the URL points to audio content </para><para>false if the URL does not point to audio content </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="76"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_1802d1e7968cfacec55ad58607e906fba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidVideoURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidVideoURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to video content This checks for a number of known file extensions to see if the URL contains them and is therefore video. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURL</parametername>
</parameternamelist>
<parameterdescription>
<para>- the URL to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the URL points to video content </para><para>false if the URL does not point to video content </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="87"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_1ef635ae0df83151370522ddf9c5c72e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidImageURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidImageURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to image content This checks for a number of known file extensions to see if the URL contains them and is therefore image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURL</parametername>
</parameternamelist>
<parameterdescription>
<para>- the URL to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the URL points to image content </para><para>false if the URL does not point to image content </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="98"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_1c49e93ff600fd41b2bb735e3b683cbdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidPlaylistURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidPlaylistURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to a playlist This checks for a number of known file extensions to see if the URL contains them and is therefore a playlist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aURL</parametername>
</parameternamelist>
<parameterdescription>
<para>- the URL to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the URL points to a playlist </para><para>false if the URL does not point a playlist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="109"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_type_sniffer_1b7e9193d553d7a50f87ed2763665166d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boolean</type>
        <definition>boolean sbIMediacoreTypeSniffer::isValidWebSafePlaylistURL</definition>
        <argsstring>(in nsIURI aURL)</argsstring>
        <name>isValidWebSafePlaylistURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <briefdescription>
<para>Check to see if an url points to a playlist. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is a websafe version. It filters out html, php and other common extensions that the html playlist reader provides that aren&apos;t safe to use during web browsing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" line="34" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreTypeSniffer.idl" bodystart="33" bodyend="118"/>
    <listofallmembers>
      <member refid="interfacesb_i_mediacore_type_sniffer_1579234ef441f1552b1fe3d3f923aa6d5" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>audioFileExtensions</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_183209eb344b7aed43c8600ea99cbc2dc" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidAudioURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1ef635ae0df83151370522ddf9c5c72e6" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidImageURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1303f6d0e42fa3c03c5f76ceed3380d07" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidMediaURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1c49e93ff600fd41b2bb735e3b683cbdc" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidPlaylistURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1802d1e7968cfacec55ad58607e906fba" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidVideoURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1b7e9193d553d7a50f87ed2763665166d" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>isValidWebSafePlaylistURL</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_1d70bcf1ec82aaf810010805f915735c4" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>mediaFileExtensions</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_198c807da1bf157222ec3f929e0667827" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>playlistFileExtensions</name></member>
      <member refid="interfacesb_i_mediacore_type_sniffer_128addfa12719fb17549a04d2e613955d" prot="public" virt="non-virtual"><scope>sbIMediacoreTypeSniffer</scope><name>videoFileExtensions</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
