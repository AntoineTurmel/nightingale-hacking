<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_media_list_view" kind="interface" prot="public">
    <compoundname>sbIMediaListView</compoundname>
    <includes refid="sb_i_media_list_view_8idl" local="no">sbIMediaListView.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_media_list_view_10c728825b5bc85265d000a68d22d56a9" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
        <definition>readonly attribute sbIMediaList sbIMediaListView::mediaList</definition>
        <argsstring></argsstring>
        <name>mediaList</name>
        <briefdescription>
<para>The media list this view is on. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="66" bodyfile="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_list_view_1667647b9de49e09c0ff49680a1167811" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long sbIMediaListView::length</definition>
        <argsstring></argsstring>
        <name>length</name>
        <briefdescription>
<para>Returns the length of filtered view of this list. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="71" bodyfile="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_list_view_1ff6a1e3d67d58ff5a00dfe486efb5305" prot="public" static="no" mutable="no">
        <type>readonly attribute nsITreeView</type>
        <definition>readonly attribute nsITreeView sbIMediaListView::treeView</definition>
        <argsstring></argsstring>
        <name>treeView</name>
        <briefdescription>
<para>Get a treeview that will display this media list view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="76" bodyfile="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_media_list_view_1c8b1eafe724ee791059510c9fdeb8b24" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_cascade_filter_set" kindref="compound">sbICascadeFilterSet</ref></type>
        <definition>readonly attribute sbICascadeFilterSet sbIMediaListView::cascadeFilterSet</definition>
        <argsstring></argsstring>
        <name>cascadeFilterSet</name>
        <briefdescription>
<para>Get the cascade filter set for this media list view. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="81" bodyfile="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_media_list_view_1845aa28b17e2eab43b1ea8b08811d247" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
        <definition>sbIMediaItem sbIMediaListView::getItemByIndex</definition>
        <argsstring>(in unsigned long aIndex)</argsstring>
        <name>getItemByIndex</name>
        <param>
          <type>in unsigned long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Get a media item in the filtered view of this list by index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Filtered index of the media item </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Media item with the requested index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="88"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_1e0d9cde9e14c0b162f746122c8b88632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long sbIMediaListView::getIndexForItem</definition>
        <argsstring>(in sbIMediaItem aMediaItem)</argsstring>
        <name>getIndexForItem</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
          <declname>aMediaItem</declname>
        </param>
        <briefdescription>
<para>Searches the view for the first occurrence of the specified media item and returns the index where it was found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aMediaItem</parametername>
</parameternamelist>
<parameterdescription>
<para>Media item to search for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index where the media item was found </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_NOT_AVAILABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>if the media item is not in the view </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="97"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_17c335bf3d146657c98337f79a476eef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long sbIMediaListView::getUnfilteredIndex</definition>
        <argsstring>(in unsigned long aIndex)</argsstring>
        <name>getUnfilteredIndex</name>
        <param>
          <type>in unsigned long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Given an index of an item in the filtered list, get the index of the same item in the unfiltered list. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Filtered index of the media item </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index of the same item in the unfiltered list </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="105"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_1ef081e769938e55da2a7d7651922d9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AString</type>
        <definition>AString sbIMediaListView::getViewItemUIDForIndex</definition>
        <argsstring>(in unsigned long aIndex)</argsstring>
        <name>getViewItemUIDForIndex</name>
        <param>
          <type>in unsigned long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Returns an opaque identifier that uniquely identifies the media item at a given position. This identifier can be used later to find the same media item after this view&apos;s filter and sort has been changed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Filtered index of the media item </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Opaque identifier of specified media item </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="115"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_1fa7d01d0813d145a01b4763d2e8065bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long sbIMediaListView::getIndexForViewItemUID</definition>
        <argsstring>(in AString aViewItemUID)</argsstring>
        <name>getIndexForViewItemUID</name>
        <param>
          <type>in AString</type>
          <declname>aViewItemUID</declname>
        </param>
        <briefdescription>
<para>Given an opaque identifier returned by getViewItemUIDForIndex, return the index of the media item it identifies. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aViewItemUID</parametername>
</parameternamelist>
<parameterdescription>
<para>The opaque identifier returned by getViewItemUIDForIndex </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Index of media item the identifer identifies. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="124"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_148af8a8f54219b72f876c72b86b6abf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
        <definition>sbIMediaListView sbIMediaListView::clone</definition>
        <argsstring>()</argsstring>
        <name>clone</name>
        <briefdescription>
<para>Create a clone of this view. This will return a copy with the same search, filter, sort, and cascade filter set as the original. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A clone of the media list view </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="131"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_media_list_view_1b5977daa0e5a454727f4ddf42e5525da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list_view_state" kindref="compound">sbIMediaListViewState</ref></type>
        <definition>sbIMediaListViewState sbIMediaListView::getState</definition>
        <argsstring>()</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Returns a snapshot of the current state of this view. Can later be used to restore the state by passing the returned object as an argument to sbIMediaList::CreateView(). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The state of this media list view </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A distinct view on a given media list. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref> </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="349">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="350" relation="public-inheritance">
        </childnode>
      </node>
      <node id="348">
        <label>sbIMediaListView</label>
        <link refid="interfacesb_i_media_list_view"/>
        <childnode refid="349" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
        <childnode refid="357" relation="usage">
          <edgelabel>cascadeFilterSet</edgelabel>
        </childnode>
      </node>
      <node id="356">
        <label>sbIDeviceCapabilities</label>
        <link refid="interfacesb_i_device_capabilities"/>
      </node>
      <node id="353">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="354" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="356" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
      </node>
      <node id="352">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="349" relation="public-inheritance">
        </childnode>
        <childnode refid="353" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="355" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="357">
        <label>sbICascadeFilterSet</label>
        <link refid="interfacesb_i_cascade_filter_set"/>
      </node>
      <node id="351">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="350">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="351" relation="public-inheritance">
        </childnode>
        <childnode refid="352" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="354">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="355" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="355">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
    </collaborationgraph>
    <location file="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" line="62" bodyfile="e:/Projects/songbird/trunk/components/library/base/public/sbIMediaListView.idl" bodystart="61" bodyend="140"/>
    <listofallmembers>
      <member refid="interfacesb_i_media_list_view_1c8b1eafe724ee791059510c9fdeb8b24" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>cascadeFilterSet</name></member>
      <member refid="interfacesb_i_media_list_view_148af8a8f54219b72f876c72b86b6abf9" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>clone</name></member>
      <member refid="interfacesb_i_media_list_view_1e0d9cde9e14c0b162f746122c8b88632" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getIndexForItem</name></member>
      <member refid="interfacesb_i_media_list_view_1fa7d01d0813d145a01b4763d2e8065bc" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getIndexForViewItemUID</name></member>
      <member refid="interfacesb_i_media_list_view_1845aa28b17e2eab43b1ea8b08811d247" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getItemByIndex</name></member>
      <member refid="interfacesb_i_media_list_view_1b5977daa0e5a454727f4ddf42e5525da" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getState</name></member>
      <member refid="interfacesb_i_media_list_view_17c335bf3d146657c98337f79a476eef0" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getUnfilteredIndex</name></member>
      <member refid="interfacesb_i_media_list_view_1ef081e769938e55da2a7d7651922d9f1" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>getViewItemUIDForIndex</name></member>
      <member refid="interfacesb_i_media_list_view_1667647b9de49e09c0ff49680a1167811" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>length</name></member>
      <member refid="interfacesb_i_media_list_view_10c728825b5bc85265d000a68d22d56a9" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>mediaList</name></member>
      <member refid="interfacesb_i_media_list_view_1ff6a1e3d67d58ff5a00dfe486efb5305" prot="public" virt="non-virtual"><scope>sbIMediaListView</scope><name>treeView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
