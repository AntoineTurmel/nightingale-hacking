<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_metadata_job" kind="interface" prot="public">
    <compoundname>sbIMetadataJob</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_metadata_job_156029ad63489ec9ed96a7fffa6194ae0" prot="public" static="no" mutable="no">
        <type>const unsigned short</type>
        <definition>const unsigned short sbIMetadataJob::JOBTYPE_READ</definition>
        <argsstring></argsstring>
        <name>JOBTYPE_READ</name>
        <initializer> 0</initializer>
        <briefdescription>
<para>Constant indicating that this job will read metadata from files into associated media items. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" line="52" bodyfile="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_metadata_job_1b3491c19711d1a2849bdeecec95909e6" prot="public" static="no" mutable="no">
        <type>const unsigned short</type>
        <definition>const unsigned short sbIMetadataJob::JOBTYPE_WRITE</definition>
        <argsstring></argsstring>
        <name>JOBTYPE_WRITE</name>
        <initializer> 1</initializer>
        <briefdescription>
<para>Constant indicating that this job will attempt to write metadata from media items back into associated files. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" line="58" bodyfile="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_metadata_job_1304db6d7f95066ff8c8e5c7b2c47a0d6" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned short</type>
        <definition>readonly attribute unsigned short sbIMetadataJob::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Indicates whether this is a read or write job. See JOBTYPE_READ and JOBTYPE_WRITE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" line="64" bodyfile="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_metadata_job_132e0e57e1a8e1bfc0c389a382b363e6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMetadataJob::append</definition>
        <argsstring>(in nsIArray aMediaItemsArray)</argsstring>
        <name>append</name>
        <param>
          <type>in nsIArray</type>
          <declname>aMediaItemsArray</declname>
        </param>
        <briefdescription>
<para>Add some more media items to the job&apos;s queue. </para>        </briefdescription>
        <detaileddescription>
<para>Appending to a completed job will throw an error.</para><para>THIS METHOD APPENDS ALL THE ITEMS TO THE DATABASE QUEUE, BLOCKING UNTIL COMPLETE. Try to only give it small (&lt; 500 items) arrays in batches.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aMediaItemsArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array filled with media items to be processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" line="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Metadata Job represents the status of a running metadata task. </para>    </briefdescription>
    <detaileddescription>
<para>You get an <ref refid="interfacesb_i_metadata_job" kindref="compound">sbIMetadataJob</ref> by calling <ref refid="interfacesb_i_metadata_job_manager_19f265fad62cd8cc309f4a86c89d410d1" kindref="member">sbIMetadataJobManager::newJob()</ref> with an nsIArray of <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref>.</para><para>Use the <ref refid="interfacesb_i_job_progress" kindref="compound">sbIJobProgress</ref> interface to receive progress notifications, and <ref refid="interfacesb_i_job_cancelable" kindref="compound">sbIJobCancelable</ref> to cancel the job.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_library" kindref="compound">sbILibrary</ref>, <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref>, <ref refid="interfacesb_i_metadata_job_manager" kindref="compound">sbIMetadataJobManager</ref>, <ref refid="interfacesb_i_job_progress" kindref="compound">sbIJobProgress</ref>, <ref refid="interfacesb_i_job_cancelable" kindref="compound">sbIJobCancelable</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" line="46" bodyfile="c:/builds/songbird/trunk/components/mediacore/metadata/manager/public/sbIMetadataJob.idl" bodystart="45" bodyend="77"/>
    <listofallmembers>
      <member refid="interfacesb_i_metadata_job_132e0e57e1a8e1bfc0c389a382b363e6a" prot="public" virt="non-virtual"><scope>sbIMetadataJob</scope><name>append</name></member>
      <member refid="interfacesb_i_metadata_job_156029ad63489ec9ed96a7fffa6194ae0" prot="public" virt="non-virtual"><scope>sbIMetadataJob</scope><name>JOBTYPE_READ</name></member>
      <member refid="interfacesb_i_metadata_job_1b3491c19711d1a2849bdeecec95909e6" prot="public" virt="non-virtual"><scope>sbIMetadataJob</scope><name>JOBTYPE_WRITE</name></member>
      <member refid="interfacesb_i_metadata_job_1304db6d7f95066ff8c8e5c7b2c47a0d6" prot="public" virt="non-virtual"><scope>sbIMetadataJob</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
