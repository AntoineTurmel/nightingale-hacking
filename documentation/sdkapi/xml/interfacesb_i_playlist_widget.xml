<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_playlist_widget" kind="interface" prot="public">
    <compoundname>sbIPlaylistWidget</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_playlist_widget_1c023582f73fbed84eb3b1b63609487a8" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_playlist_click_event" kindref="compound">sbIPlaylistClickEvent</ref></type>
        <definition>readonly attribute sbIPlaylistClickEvent sbIPlaylistWidget::lastClickEvent</definition>
        <argsstring></argsstring>
        <name>lastClickEvent</name>
        <briefdescription>
<para>The last click even that occured on this &lt;WebPlaylist&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>This is used only during the propogation of the PlaylistClickEvent event and will only be non-null for a very brief time during that flow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="156" bodyfile="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1fd3292f2b9571292155841e07adcb567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::rescanCommands</definition>
        <argsstring>()</argsstring>
        <name>rescanCommands</name>
        <briefdescription>
<para>Cause the commands to be re-fetched. </para>        </briefdescription>
        <detaileddescription>
<para>This will cause the playlist to fetch the list of commands again so that any newly added commands will appear in the UI for the playlist</para><para>NOTE - Not callable from web pages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="59"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_139986e570cddb5d1932acc6f0a647e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
        <definition>sbIMediaListView sbIPlaylistWidget::getListView</definition>
        <argsstring>()</argsstring>
        <name>getListView</name>
        <briefdescription>
<para>Get the view being displayed in the &lt;WebPlaylist&gt;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A medialist view for the currently displayed medialist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="66"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1176ef603697f7ce4d52f2bb8bc455cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::bind</definition>
        <argsstring>(in sbIMediaListView mediaListView, in sbIPlaylistCommands commands, in boolean resize, in boolean collapse)</argsstring>
        <name>bind</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
          <declname>mediaListView</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>commands</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>resize</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>collapse</declname>
        </param>
        <briefdescription>
<para>Attach the &lt;WebPlaylist&gt; to the view passed in. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mediaListView</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ordered, sorted, selected grouping of tracks to display in the UI </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commands</parametername>
</parameternamelist>
<parameterdescription>
<para>- the commands to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resize</parametername>
</parameternamelist>
<parameterdescription>
<para>- boolean, if true the playlist will look up the resize_height attribute for the size to resize to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collapse</parametername>
</parameternamelist>
<parameterdescription>
<para>- apparently no longer used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="81"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_11c7b3baeb159a3dc6fa5b8b73432ccba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::showColumn</definition>
        <argsstring>(in AString aColumnName)</argsstring>
        <name>showColumn</name>
        <param>
          <type>in AString</type>
          <declname>aColumnName</declname>
        </param>
        <briefdescription>
<para>Make a column show up in the UI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aColumnName</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name of the column to display </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="102"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1b54636b919d480ad5d9ed7a56df4902f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::hideColumn</definition>
        <argsstring>(in AString aColumnName)</argsstring>
        <name>hideColumn</name>
        <param>
          <type>in AString</type>
          <declname>aColumnName</declname>
        </param>
        <briefdescription>
<para>Make a column disappear from the UI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aColumnName</parametername>
</parameternamelist>
<parameterdescription>
<para>- the name of the column to hide </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="122"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_12c7775c5b1d348cad166898abc1bd3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::moveColumnBefore</definition>
        <argsstring>(in AString aColumnName, in AString aBeforeColumnName)</argsstring>
        <name>moveColumnBefore</name>
        <param>
          <type>in AString</type>
          <declname>aColumnName</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aBeforeColumnName</declname>
        </param>
        <briefdescription>
<para>Make the named column move before the second. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aColumnName</parametername>
</parameternamelist>
<parameterdescription>
<para>- The column to move </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aBeforeColumnName</parametername>
</parameternamelist>
<parameterdescription>
<para>- The column that will be after (to the right of) the first column </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="132"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1f541b89c267cecbf3fd0d3ee3426b033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::insertColumn</definition>
        <argsstring>(in sbIPropertyInfo aPropInfo, in boolean aIsHidden, in long aWidth, in AString aSortOrder, in AString aBeforeCol)</argsstring>
        <name>insertColumn</name>
        <param>
          <type>in <ref refid="interfacesb_i_property_info" kindref="compound">sbIPropertyInfo</ref></type>
          <declname>aPropInfo</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>aIsHidden</declname>
        </param>
        <param>
          <type>in long</type>
          <declname>aWidth</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aSortOrder</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aBeforeCol</declname>
        </param>
        <briefdescription>
<para>Add a column indicated by the propertyInfo into the UI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPropInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>- the propertyInfo that defines the column data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aIsHidden</parametername>
</parameternamelist>
<parameterdescription>
<para>- if the column should be visible </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>- the width of the column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aSortOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>- What direction the sort should be in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aBeforeCol</parametername>
</parameternamelist>
<parameterdescription>
<para>- The column name that the added column should be inserted before </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="148"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="504">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="501" relation="public-inheritance">
        </childnode>
      </node>
      <node id="508">
        <label>sbIDeviceCapabilities</label>
        <link refid="interfacesb_i_device_capabilities"/>
      </node>
      <node id="505">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="506" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="508" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
      </node>
      <node id="503">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="504" relation="public-inheritance">
        </childnode>
        <childnode refid="505" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="507" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="502">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="501">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="502" relation="public-inheritance">
        </childnode>
        <childnode refid="503" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="506">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="507" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="507">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
      <node id="500">
        <label>sbIPlaylistClickEvent</label>
        <link refid="interfacesb_i_playlist_click_event"/>
        <childnode refid="501" relation="usage">
          <edgelabel>item</edgelabel>
        </childnode>
      </node>
      <node id="499">
        <label>sbIPlaylistWidget</label>
        <link refid="interfacesb_i_playlist_widget"/>
        <childnode refid="500" relation="usage">
          <edgelabel>lastClickEvent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="49" bodyfile="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" bodystart="48" bodyend="157"/>
    <listofallmembers>
      <member refid="interfacesb_i_playlist_widget_1176ef603697f7ce4d52f2bb8bc455cef" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>bind</name></member>
      <member refid="interfacesb_i_playlist_widget_139986e570cddb5d1932acc6f0a647e0f" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>getListView</name></member>
      <member refid="interfacesb_i_playlist_widget_1b54636b919d480ad5d9ed7a56df4902f" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>hideColumn</name></member>
      <member refid="interfacesb_i_playlist_widget_1f541b89c267cecbf3fd0d3ee3426b033" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>insertColumn</name></member>
      <member refid="interfacesb_i_playlist_widget_1c023582f73fbed84eb3b1b63609487a8" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>lastClickEvent</name></member>
      <member refid="interfacesb_i_playlist_widget_12c7775c5b1d348cad166898abc1bd3e4" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>moveColumnBefore</name></member>
      <member refid="interfacesb_i_playlist_widget_1fd3292f2b9571292155841e07adcb567" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>rescanCommands</name></member>
      <member refid="interfacesb_i_playlist_widget_11c7b3baeb159a3dc6fa5b8b73432ccba" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>showColumn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
