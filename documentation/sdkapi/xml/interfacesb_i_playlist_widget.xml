<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_playlist_widget" kind="interface" prot="public">
    <compoundname>sbIPlaylistWidget</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_playlist_widget_1c023582f73fbed84eb3b1b63609487a8" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_playlist_click_event" kindref="compound">sbIPlaylistClickEvent</ref></type>
        <definition>readonly attribute sbIPlaylistClickEvent sbIPlaylistWidget::lastClickEvent</definition>
        <argsstring></argsstring>
        <name>lastClickEvent</name>
        <briefdescription>
<para>The last click even that occured on this &lt;WebPlaylist&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>This is used only during the propogation of the PlaylistClickEvent event and will only be non-null for a very brief time during that flow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="231" bodyfile="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1fd3292f2b9571292155841e07adcb567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::rescanCommands</definition>
        <argsstring>()</argsstring>
        <name>rescanCommands</name>
        <briefdescription>
<para>Cause the commands to be re-fetched. </para>        </briefdescription>
        <detaileddescription>
<para>This will cause the playlist to fetch the list of commands again so that any newly added commands will appear in the UI for the playlist</para><para>NOTE - Not callable from web pages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="59"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_139986e570cddb5d1932acc6f0a647e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
        <definition>sbIMediaListView sbIPlaylistWidget::getListView</definition>
        <argsstring>()</argsstring>
        <name>getListView</name>
        <briefdescription>
<para>Get the view being displayed in the &lt;WebPlaylist&gt;. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE - Not callable from web pages.</para><para><simplesect kind="return"><para>A medialist view for the currently displayed medialist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="68"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1176ef603697f7ce4d52f2bb8bc455cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::bind</definition>
        <argsstring>(in sbIMediaListView mediaListView, in sbIPlaylistCommands commands, in boolean resize, in boolean collapse)</argsstring>
        <name>bind</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
          <declname>mediaListView</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_commands" kindref="compound">sbIPlaylistCommands</ref></type>
          <declname>commands</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>resize</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>collapse</declname>
        </param>
        <briefdescription>
<para>Attach the &lt;WebPlaylist&gt; to the view passed in. </para>        </briefdescription>
        <detaileddescription>
<para>NOTE - Not callable from web pages.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mediaListView</parametername>
</parameternamelist>
<parameterdescription>
<para>- the ordered, sorted, selected grouping of tracks to display in the UI </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>commands</parametername>
</parameternamelist>
<parameterdescription>
<para>- the commands to be used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>resize</parametername>
</parameternamelist>
<parameterdescription>
<para>- boolean, if true the playlist will look up the resize_height attribute for the size to resize to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>collapse</parametername>
</parameternamelist>
<parameterdescription>
<para>- apparently no longer used </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="85"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_16d734ebceaaaf931882ea882b034495b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long sbIPlaylistWidget::getColumnCount</definition>
        <argsstring>()</argsstring>
        <name>getColumnCount</name>
        <briefdescription>
<para>Get the total number of columns in the web playlist. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of columns in the web playlist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="101"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1beec3e34b905d617f4ca536b3806b11c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::clearColumns</definition>
        <argsstring>()</argsstring>
        <name>clearColumns</name>
        <briefdescription>
<para>Clear all columns from the web playlist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="111"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_16da4706da9e7352222edfba6d5de3414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::appendColumn</definition>
        <argsstring>(in AString aPropertyID,[optional] in AString aWidth)</argsstring>
        <name>appendColumn</name>
        <param>
          <type>in AString</type>
          <declname>aPropertyID</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in AString</type>
          <declname>aWidth</declname>
        </param>
        <briefdescription>
<para>Add a column to the right side of visible columns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPropertyID</parametername>
</parameternamelist>
<parameterdescription>
<para>- The ID of the property you want to add as a column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>- The width in pixels of the column. If there has been a width set for this particular column then that width will be respected and this ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="133"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1c91f64c42ecdd35cd493f1fb6c737828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::insertColumnBefore</definition>
        <argsstring>(in AString aPropertyID,[optional] in AString aBeforePropertyID,[optional] in AString aWidth)</argsstring>
        <name>insertColumnBefore</name>
        <param>
          <type>in AString</type>
          <declname>aPropertyID</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in AString</type>
          <declname>aBeforePropertyID</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in AString</type>
          <declname>aWidth</declname>
        </param>
        <briefdescription>
<para>Insert a column into the web playlist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPropertyID</parametername>
</parameternamelist>
<parameterdescription>
<para>- The ID of the property you want to add as a column </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aBeforePropertyID</parametername>
</parameternamelist>
<parameterdescription>
<para>- If specified, the new column will appear before the column that is bound to the specified property. If not specified, the column will be added to the end of the list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>- The width in pixels of the column. If there has been a width set for this particular column then that width will be respected and this ignored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="162"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_1954f750374aa2eb5ee5f1dbd90515207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::removeColumn</definition>
        <argsstring>(in AString aPropertyID)</argsstring>
        <name>removeColumn</name>
        <param>
          <type>in AString</type>
          <declname>aPropertyID</declname>
        </param>
        <briefdescription>
<para>Remove a column from the playlist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPropertyID</parametername>
</parameternamelist>
<parameterdescription>
<para>- The ID of the property that is bound to the column you wish to remove. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="179"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_12a2e67cb62d2e986b28a2652931032bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AString</type>
        <definition>AString sbIPlaylistWidget::getColumnPropertyIDByIndex</definition>
        <argsstring>(in unsigned long aIndex)</argsstring>
        <name>getColumnPropertyIDByIndex</name>
        <param>
          <type>in unsigned long</type>
          <declname>aIndex</declname>
        </param>
        <briefdescription>
<para>Get the property ID bould to a particular column at a given index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>- The index of the column from which you want to retrieve the bound property </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The ID of the property bound to the specified column </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="201"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_widget_16750c08bbd51228859ed153b8ba0bdac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistWidget::setSortColumn</definition>
        <argsstring>(in AString aPropertyID, in boolean aIsAscending)</argsstring>
        <name>setSortColumn</name>
        <param>
          <type>in AString</type>
          <declname>aPropertyID</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>aIsAscending</declname>
        </param>
        <briefdescription>
<para>Set the sort of the web playlist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aPropertyID</parametername>
</parameternamelist>
<parameterdescription>
<para>- The ID of the property that is bound to the column you wish to sort. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aIsAscending</parametername>
</parameternamelist>
<parameterdescription>
<para>- True if the sort should be ascending, false if the sort should be descending. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="516">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="520">
        <label>sbIDeviceCapabilities</label>
        <link refid="interfacesb_i_device_capabilities"/>
      </node>
      <node id="517">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="518" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="520" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
      </node>
      <node id="515">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="516" relation="public-inheritance">
        </childnode>
        <childnode refid="517" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="519" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="514">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="513">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="514" relation="public-inheritance">
        </childnode>
        <childnode refid="515" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="518">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="519" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="519">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
      <node id="512">
        <label>sbIPlaylistClickEvent</label>
        <link refid="interfacesb_i_playlist_click_event"/>
        <childnode refid="513" relation="usage">
          <edgelabel>item</edgelabel>
        </childnode>
      </node>
      <node id="511">
        <label>sbIPlaylistWidget</label>
        <link refid="interfacesb_i_playlist_widget"/>
        <childnode refid="512" relation="usage">
          <edgelabel>lastClickEvent</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" line="49" bodyfile="e:/Projects/songbird/trunk/bindings/public/sbIPlaylistWidget.idl" bodystart="48" bodyend="232"/>
    <listofallmembers>
      <member refid="interfacesb_i_playlist_widget_16da4706da9e7352222edfba6d5de3414" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>appendColumn</name></member>
      <member refid="interfacesb_i_playlist_widget_1176ef603697f7ce4d52f2bb8bc455cef" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>bind</name></member>
      <member refid="interfacesb_i_playlist_widget_1beec3e34b905d617f4ca536b3806b11c" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>clearColumns</name></member>
      <member refid="interfacesb_i_playlist_widget_16d734ebceaaaf931882ea882b034495b" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>getColumnCount</name></member>
      <member refid="interfacesb_i_playlist_widget_12a2e67cb62d2e986b28a2652931032bc" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>getColumnPropertyIDByIndex</name></member>
      <member refid="interfacesb_i_playlist_widget_139986e570cddb5d1932acc6f0a647e0f" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>getListView</name></member>
      <member refid="interfacesb_i_playlist_widget_1c91f64c42ecdd35cd493f1fb6c737828" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>insertColumnBefore</name></member>
      <member refid="interfacesb_i_playlist_widget_1c023582f73fbed84eb3b1b63609487a8" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>lastClickEvent</name></member>
      <member refid="interfacesb_i_playlist_widget_1954f750374aa2eb5ee5f1dbd90515207" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>removeColumn</name></member>
      <member refid="interfacesb_i_playlist_widget_1fd3292f2b9571292155841e07adcb567" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>rescanCommands</name></member>
      <member refid="interfacesb_i_playlist_widget_16750c08bbd51228859ed153b8ba0bdac" prot="public" virt="non-virtual"><scope>sbIPlaylistWidget</scope><name>setSortColumn</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
