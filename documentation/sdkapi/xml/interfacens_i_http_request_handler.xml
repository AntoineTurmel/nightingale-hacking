<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="interfacens_i_http_request_handler" kind="interface" prot="public">
    <compoundname>nsIHttpRequestHandler</compoundname>
    <includes refid="ns_i_http_server_8idl" local="no">nsIHttpServer.idl</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacens_i_http_request_handler_131d05b4e927e44dea1875c420364faae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nsIHttpRequestHandler::handle</definition>
        <argsstring>(in nsIHttpRequestMetadata metadata, in nsIHttpResponse response)</argsstring>
        <name>handle</name>
        <param>
          <type>in <ref refid="interfacens_i_http_request_metadata" kindref="compound">nsIHttpRequestMetadata</ref></type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>in <ref refid="interfacens_i_http_response" kindref="compound">nsIHttpResponse</ref></type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Processes the HTTP request represented by metadata and initializes the passed-in response to reflect the correct HTTP response.</para><para>Note that in some uses of <ref refid="interfacens_i_http_request_handler" kindref="compound">nsIHttpRequestHandler</ref>, this method is required to not throw an exception; in the general case, however, this method may throw an exception (causing an HTTP 500 response to occur).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>data representing an HTTP request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>an initially-empty response which must be modified to reflect the data which should be sent as the response to the request described by metadata </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="199"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface that handles HTTP requests. </para>    </briefdescription>
    <detaileddescription>
<para>A representation of a handler for HTTP requests. The handler is used by calling its .handle method with data for an incoming request; it is the handler&apos;s job to use that data as it sees fit to make the desired response.</para><para><simplesect kind="note"><para>This interface uses the [function] attribute, so you can pass a script-defined function with the functionality of <ref refid="interfacens_i_http_request_handler_131d05b4e927e44dea1875c420364faae" kindref="member">handle()</ref> to any method which has a <ref refid="interfacens_i_http_request_handler" kindref="compound">nsIHttpRequestHandler</ref> parameter, instead of wrapping it in an otherwise empty object. </para></simplesect>
</para>    </detaileddescription>
    <location file="C:/projects/songbird/components/testharness/public/nsIHttpServer.idl" line="184" bodyfile="C:/projects/songbird/components/testharness/public/nsIHttpServer.idl" bodystart="183" bodyend="200"/>
    <listofallmembers>
      <member refid="interfacens_i_http_request_handler_131d05b4e927e44dea1875c420364faae" prot="public" virt="non-virtual"><scope>nsIHttpRequestHandler</scope><name>handle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
