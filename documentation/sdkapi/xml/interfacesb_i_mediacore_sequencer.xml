<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_mediacore_sequencer" kind="interface" prot="public">
    <compoundname>sbIMediacoreSequencer</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1ee6f8e965e48cd93230265df13cb457b" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_FORWARD</definition>
        <argsstring></argsstring>
        <name>MODE_FORWARD</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="41" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_195fbd0feb475a3dbfed928907b208679" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_REVERSE</definition>
        <argsstring></argsstring>
        <name>MODE_REVERSE</name>
        <initializer> 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="42" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_10e7d377928b72f835ba10ad86f111400" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_SHUFFLE</definition>
        <argsstring></argsstring>
        <name>MODE_SHUFFLE</name>
        <initializer> 1 &lt;&lt; 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="43" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1869642309bc07427f7246ac76b35972b" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_CUSTOM</definition>
        <argsstring></argsstring>
        <name>MODE_CUSTOM</name>
        <initializer> 1 &lt;&lt; 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="45" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_128ba7f4c7b0d8ef763d54a2ce7f7448a" prot="public" static="no" mutable="no">
        <type>attribute unsigned long</type>
        <definition>attribute unsigned long sbIMediacoreSequencer::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="47" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1a0c21fcafa2f88a1c35fdc6cc94c7cf7" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_REPEAT_NONE</definition>
        <argsstring></argsstring>
        <name>MODE_REPEAT_NONE</name>
        <initializer> 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="49" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1c0ec11b90344b57f844e37bd8e4f4c9a" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_REPEAT_ONE</definition>
        <argsstring></argsstring>
        <name>MODE_REPEAT_ONE</name>
        <initializer> 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="50" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_156c827f6a041bbe9d4b1fb628e853fda" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long sbIMediacoreSequencer::MODE_REPEAT_ALL</definition>
        <argsstring></argsstring>
        <name>MODE_REPEAT_ALL</name>
        <initializer> 1 &lt;&lt; 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="51" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1821e609b52fe05192437909dde79e944" prot="public" static="no" mutable="no">
        <type>attribute unsigned long</type>
        <definition>attribute unsigned long sbIMediacoreSequencer::repeatMode</definition>
        <argsstring></argsstring>
        <name>repeatMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="53" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1c985ee0b93321e4292132ba9e9f14f14" prot="public" static="no" mutable="no">
        <type>attribute <ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
        <definition>attribute sbIMediaListView sbIMediacoreSequencer::view</definition>
        <argsstring></argsstring>
        <name>view</name>
        <briefdescription>
<para>The view that was used to generate the current sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="58" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1fbc99c3ef09d8455f0fa754974aa2bd6" prot="public" static="no" mutable="no">
        <type>readonly attribute unsigned long</type>
        <definition>readonly attribute unsigned long sbIMediacoreSequencer::viewPosition</definition>
        <argsstring></argsstring>
        <name>viewPosition</name>
        <briefdescription>
<para>The current position in the view. This position is tied to the sequencePosition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_NOT_AVAILABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>when the sequence position is invalid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="65" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1204877665fb8bfdec3937391cc0ef18e" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
        <definition>readonly attribute sbIMediaItem sbIMediacoreSequencer::currentItem</definition>
        <argsstring></argsstring>
        <name>currentItem</name>
        <briefdescription>
<para>The current item in the view. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is the equivalent of calling <ref refid="interfacesb_i_media_list_view_1845aa28b17e2eab43b1ea8b08811d247" kindref="member">sbIMediaListView::getItemByIndex</ref> using viewPosition. </para><para>This may be null if there is no currentItem. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="73" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_16f688adf2d91ff9a4b59262a7b7d0928" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_media_item" kindref="compound">sbIMediaItem</ref></type>
        <definition>readonly attribute sbIMediaItem sbIMediacoreSequencer::nextItem</definition>
        <argsstring></argsstring>
        <name>nextItem</name>
        <briefdescription>
<para>The next item in the sequence. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is equivalent to getting the current sequence and asking it for sequencePosition + 1. </para><para>This may be null if there is no next item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="81" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1d5ad845c004121ab4db97e13a42c9a27" prot="public" static="no" mutable="no">
        <type>readonly attribute nsIArray</type>
        <definition>readonly attribute nsIArray sbIMediacoreSequencer::currentSequence</definition>
        <argsstring></argsstring>
        <name>currentSequence</name>
        <briefdescription>
<para>The current sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="86" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_17db9ea823f7b9ebbab7c25a722949325" prot="public" static="no" mutable="no">
        <type>attribute unsigned long</type>
        <definition>attribute unsigned long sbIMediacoreSequencer::sequencePosition</definition>
        <argsstring></argsstring>
        <name>sequencePosition</name>
        <briefdescription>
<para>The current position in the sequence. This position is tied to the viewPosition. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_NOT_AVAILABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>when the sequence position is invalid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="93" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1e2dfae1af957165a52c0aa5ed9a1d85f" prot="public" static="no" mutable="no">
        <type>const long</type>
        <definition>const long sbIMediacoreSequencer::AUTO_PICK_INDEX</definition>
        <argsstring></argsstring>
        <name>AUTO_PICK_INDEX</name>
        <initializer> -1</initializer>
        <briefdescription>
<para>Allow the sequencer to pick the most appropriate start index for a sequence. </para>        </briefdescription>
        <detaileddescription>
<para>The sequencer will pick a random index for the start of the sequence if shuffle is enabled. If shuffle is disabled, the sequencer will pick the first available index: 0.</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_mediacore_sequencer_1243ba201cfe52ccee5989b1d3274e636" kindref="member">playView</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="118" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_sequencer_1b9c4f16af056b8d53ccc1b35ed77a3e2" prot="public" static="no" mutable="no">
        <type>attribute <ref refid="interfacesb_i_mediacore_sequence_generator" kindref="compound">sbIMediacoreSequenceGenerator</ref></type>
        <definition>attribute sbIMediacoreSequenceGenerator sbIMediacoreSequencer::customGenerator</definition>
        <argsstring></argsstring>
        <name>customGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="160" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_1243ba201cfe52ccee5989b1d3274e636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::playView</definition>
        <argsstring>(in sbIMediaListView aView,[optional] in long long aItemIndex)</argsstring>
        <name>playView</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list_view" kindref="compound">sbIMediaListView</ref></type>
          <declname>aView</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in long long</type>
          <declname>aItemIndex</declname>
        </param>
        <briefdescription>
<para>Play a media list view as a sequence. Optionally provide the index of the item in the view that should play first in the sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aView</parametername>
</parameternamelist>
<parameterdescription>
<para>The view you wish to play. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aItemIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the item inside the view to play first. You may pass <ref refid="interfacesb_i_mediacore_sequencer_1e2dfae1af957165a52c0aa5ed9a1d85f" kindref="member">sbIMediacoreSequencer::AUTO_PICK_INDEX</ref> if you wish to have the sequencer pick the most appropriate start index for the sequence. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_mediacore_sequencer_1e2dfae1af957165a52c0aa5ed9a1d85f" kindref="member">AUTO_PICK_INDEX</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="106"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_1789c5607a5a6f7a0ec2d869fbf7105a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::playURL</definition>
        <argsstring>(in nsIURI aURI)</argsstring>
        <name>playURL</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURI</declname>
        </param>
        <briefdescription>
<para>Play a single URL as a sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="123"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_19c0ff429f1dfee1f8fca430b4e61fa42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::play</definition>
        <argsstring>()</argsstring>
        <name>play</name>
        <briefdescription>
<para>Play the sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="128"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_1a25fbe2a1312bfe435247bdfe3758820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stop the sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="133"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_15484b1485cf1fb4fa24710407f8d2d61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
<para>Go to the next item in the sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="138"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_18195b091dc8f8d313c54beb6ba3ca1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::previous</definition>
        <argsstring>()</argsstring>
        <name>previous</name>
        <briefdescription>
<para>Go to the previous item in the sequence. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="143"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_1f8e70dc8b402ed7e004e91be319fa8c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::requestHandleNextItem</definition>
        <argsstring>(in sbIMediacore aMediacore)</argsstring>
        <name>requestHandleNextItem</name>
        <param>
          <type>in <ref refid="interfacesb_i_mediacore" kindref="compound">sbIMediacore</ref></type>
          <declname>aMediacore</declname>
        </param>
        <briefdescription>
<para>Indicate that the current core will handle the next item in the sequence when the stream ends. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="149"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_sequencer_116b08698d074e8cce9140d68c8457243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIMediacoreSequencer::abort</definition>
        <argsstring>()</argsstring>
        <name>abort</name>
        <briefdescription>
<para>Abort the current item playback attempt. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method may only be called from BEFORE_TRACK_CHANGE. If you attempt to call it from another context, it will silently fail. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="596">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="593" relation="public-inheritance">
        </childnode>
      </node>
      <node id="604">
        <label>sbIMediaListView</label>
        <link refid="interfacesb_i_media_list_view"/>
        <childnode refid="596" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
        <childnode refid="605" relation="usage">
          <edgelabel>selection</edgelabel>
        </childnode>
        <childnode refid="606" relation="usage">
          <edgelabel>cascadeFilterSet</edgelabel>
        </childnode>
      </node>
      <node id="605">
        <label>sbIMediaListViewSelection</label>
        <link refid="interfacesb_i_media_list_view_selection"/>
        <childnode refid="593" relation="usage">
          <edgelabel>currentMediaItem</edgelabel>
        </childnode>
      </node>
      <node id="600">
        <label>sbIDeviceStatus</label>
        <link refid="interfacesb_i_device_status"/>
        <childnode refid="593" relation="usage">
          <edgelabel>mediaItem</edgelabel>
        </childnode>
        <childnode refid="596" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
      </node>
      <node id="601">
        <label>sbIDeviceCapabilities</label>
        <link refid="interfacesb_i_device_capabilities"/>
      </node>
      <node id="592">
        <label>sbIMediacoreSequencer</label>
        <link refid="interfacesb_i_mediacore_sequencer"/>
        <childnode refid="593" relation="usage">
          <edgelabel>nextItem
currentItem</edgelabel>
        </childnode>
        <childnode refid="603" relation="usage">
          <edgelabel>customGenerator</edgelabel>
        </childnode>
        <childnode refid="604" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
      </node>
      <node id="597">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="598" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>currentStatus</edgelabel>
        </childnode>
        <childnode refid="601" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
        <childnode refid="602" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="595">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="596" relation="public-inheritance">
        </childnode>
        <childnode refid="597" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="599" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="606">
        <label>sbICascadeFilterSet</label>
        <link refid="interfacesb_i_cascade_filter_set"/>
      </node>
      <node id="594">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="593">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="594" relation="public-inheritance">
        </childnode>
        <childnode refid="595" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="603">
        <label>sbIMediacoreSequenceGenerator</label>
        <link refid="interfacesb_i_mediacore_sequence_generator"/>
      </node>
      <node id="598">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="599" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="599">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
      <node id="602">
        <label>sbIDeviceProperties</label>
        <link refid="interfacesb_i_device_properties"/>
      </node>
    </collaborationgraph>
    <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" line="40" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreSequencer.idl" bodystart="39" bodyend="161"/>
    <listofallmembers>
      <member refid="interfacesb_i_mediacore_sequencer_116b08698d074e8cce9140d68c8457243" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>abort</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1e2dfae1af957165a52c0aa5ed9a1d85f" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>AUTO_PICK_INDEX</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1204877665fb8bfdec3937391cc0ef18e" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>currentItem</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1d5ad845c004121ab4db97e13a42c9a27" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>currentSequence</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1b9c4f16af056b8d53ccc1b35ed77a3e2" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>customGenerator</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_128ba7f4c7b0d8ef763d54a2ce7f7448a" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>mode</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1869642309bc07427f7246ac76b35972b" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_CUSTOM</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1ee6f8e965e48cd93230265df13cb457b" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_FORWARD</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_156c827f6a041bbe9d4b1fb628e853fda" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_REPEAT_ALL</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1a0c21fcafa2f88a1c35fdc6cc94c7cf7" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_REPEAT_NONE</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1c0ec11b90344b57f844e37bd8e4f4c9a" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_REPEAT_ONE</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_195fbd0feb475a3dbfed928907b208679" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_REVERSE</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_10e7d377928b72f835ba10ad86f111400" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>MODE_SHUFFLE</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_15484b1485cf1fb4fa24710407f8d2d61" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>next</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_16f688adf2d91ff9a4b59262a7b7d0928" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>nextItem</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_19c0ff429f1dfee1f8fca430b4e61fa42" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>play</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1789c5607a5a6f7a0ec2d869fbf7105a7" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>playURL</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1243ba201cfe52ccee5989b1d3274e636" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>playView</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_18195b091dc8f8d313c54beb6ba3ca1c6" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>previous</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1821e609b52fe05192437909dde79e944" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>repeatMode</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1f8e70dc8b402ed7e004e91be319fa8c3" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>requestHandleNextItem</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_17db9ea823f7b9ebbab7c25a722949325" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>sequencePosition</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1a25fbe2a1312bfe435247bdfe3758820" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>stop</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1c985ee0b93321e4292132ba9e9f14f14" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>view</name></member>
      <member refid="interfacesb_i_mediacore_sequencer_1fbc99c3ef09d8455f0fa754974aa2bd6" prot="public" virt="non-virtual"><scope>sbIMediacoreSequencer</scope><name>viewPosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
