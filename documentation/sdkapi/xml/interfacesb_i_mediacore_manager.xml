<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_mediacore_manager" kind="interface" prot="public">
    <compoundname>sbIMediacoreManager</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_16c6ac5478e54513f76a1d12cdba83d3f" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore" kindref="compound">sbIMediacore</ref></type>
        <definition>readonly attribute sbIMediacore sbIMediacoreManager::primaryCore</definition>
        <argsstring></argsstring>
        <name>primaryCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The primary core is always used to play user content.</para><para>If you need a mediacore for background tasks of any kind, it is preferable to create a new instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="56" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_14b31b46aa055273e00f0f4877c6af93f" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_balance_control" kindref="compound">sbIMediacoreBalanceControl</ref></type>
        <definition>readonly attribute sbIMediacoreBalanceControl sbIMediacoreManager::balanceControl</definition>
        <argsstring></argsstring>
        <name>balanceControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="58" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_1e6059c54ad6eea4849a03942f2f2f156" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_volume_control" kindref="compound">sbIMediacoreVolumeControl</ref></type>
        <definition>readonly attribute sbIMediacoreVolumeControl sbIMediacoreManager::volumeControl</definition>
        <argsstring></argsstring>
        <name>volumeControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="59" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_14e024127c997556feff582b15eb51823" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_multiband_equalizer" kindref="compound">sbIMediacoreMultibandEqualizer</ref></type>
        <definition>readonly attribute sbIMediacoreMultibandEqualizer sbIMediacoreManager::equalizer</definition>
        <argsstring></argsstring>
        <name>equalizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="61" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_14d710e46b0d1218f791d05989f29d8f5" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_playback_control" kindref="compound">sbIMediacorePlaybackControl</ref></type>
        <definition>readonly attribute sbIMediacorePlaybackControl sbIMediacoreManager::playbackControl</definition>
        <argsstring></argsstring>
        <name>playbackControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="62" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_15316f957dcb5c1821740f41aa3ca2871" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_capabilities" kindref="compound">sbIMediacoreCapabilities</ref></type>
        <definition>readonly attribute sbIMediacoreCapabilities sbIMediacoreManager::capabilities</definition>
        <argsstring></argsstring>
        <name>capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="64" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_15aa4d0a2e956e27f66d1e6d710742581" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_status" kindref="compound">sbIMediacoreStatus</ref></type>
        <definition>readonly attribute sbIMediacoreStatus sbIMediacoreManager::status</definition>
        <argsstring></argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="65" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_16d833e34bd175091a3364856761376b2" prot="public" static="no" mutable="no">
        <type>readonly attribute <ref refid="interfacesb_i_mediacore_video_window" kindref="compound">sbIMediacoreVideoWindow</ref></type>
        <definition>readonly attribute sbIMediacoreVideoWindow sbIMediacoreManager::video</definition>
        <argsstring></argsstring>
        <name>video</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="67" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="interfacesb_i_mediacore_manager_1689507ad9e06653da8c4ba66bf06063d" prot="public" static="no" mutable="no">
        <type>attribute <ref refid="interfacesb_i_mediacore_sequencer" kindref="compound">sbIMediacoreSequencer</ref></type>
        <definition>attribute sbIMediacoreSequencer sbIMediacoreManager::sequencer</definition>
        <argsstring></argsstring>
        <name>sequencer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The current sequencer used to generate and manage playback sequences.</para><para>Setting the sequencer will have the following effect:</para><para>1. Current sequences remain unaffected. 2. When playback of current sequences is complete, the new sequencer is used to generate the next sequence. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="78" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_mediacore_manager_1ab3c2c0e856fca0bb25ef249c8e19181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_mediacore_video_window" kindref="compound">sbIMediacoreVideoWindow</ref></type>
        <definition>sbIMediacoreVideoWindow sbIMediacoreManager::getPrimaryVideoWindow</definition>
        <argsstring>(in boolean aCreate,[optional] in unsigned long aWidthHint,[optional] in unsigned long aHeightHint)</argsstring>
        <name>getPrimaryVideoWindow</name>
        <param>
          <type>in boolean</type>
          <declname>aCreate</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in unsigned long</type>
          <declname>aWidthHint</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in unsigned long</type>
          <declname>aHeightHint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get (or create) the primary video window</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aCreate</parametername>
</parameternamelist>
<parameterdescription>
<para>Create the window if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aWidthHint</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Width of the video that will be shown </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aHeightHint</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Height of the video that will be shown </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Both width and height hints have to be non-zero if you wish them to be used to size the video window upon creation. If you do not use the hints, the video window will rely on a VIDEO_SIZE_CHANGED event to size itself properly. </para><para>This method will return null if aCreate is false and there is no video window available. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="96"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_mediacore_manager_12b6cfeb6020f3286aaa3e893a63a2e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_mediacore_event" kindref="compound">sbIMediacoreEvent</ref></type>
        <definition>sbIMediacoreEvent sbIMediacoreManager::createEvent</definition>
        <argsstring>(in unsigned long aType, in sbIMediacore aOrigin,[optional] in nsIVariant aData,[optional] in sbIMediacoreError aError)</argsstring>
        <name>createEvent</name>
        <param>
          <type>in unsigned long</type>
          <declname>aType</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_mediacore" kindref="compound">sbIMediacore</ref></type>
          <declname>aOrigin</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in nsIVariant</type>
          <declname>aData</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in <ref refid="interfacesb_i_mediacore_error" kindref="compound">sbIMediacoreError</ref></type>
          <declname>aError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new event</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the event; should be one of the COMMAND_* or EVENT_* constants on the <ref refid="interfacesb_i_mediacore_event" kindref="compound">sbIMediacoreEvent</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aData</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) The data to pass to any listeners that would receive this event.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aOrigin</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) Some indication of the source of the event.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aError</parametername>
</parameternamelist>
<parameterdescription>
<para>(Optional) An error associated with the event</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="interfacesb_i_mediacore_event" kindref="compound">sbIMediacoreEvent</ref> </para><para><ref refid="interfacesb_i_mediacore_event_target" kindref="compound">sbIMediacoreEventTarget</ref> </para><para><ref refid="interfacesb_i_mediacore_event_listener" kindref="compound">sbIMediacoreEventListener</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="609">
        <label>sbIMediaList</label>
        <link refid="interfacesb_i_media_list"/>
        <childnode refid="606" relation="public-inheritance">
        </childnode>
      </node>
      <node id="616">
        <label>sbIMediaListView</label>
        <link refid="interfacesb_i_media_list_view"/>
        <childnode refid="609" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
        <childnode refid="617" relation="usage">
          <edgelabel>selection</edgelabel>
        </childnode>
        <childnode refid="618" relation="usage">
          <edgelabel>cascadeFilterSet</edgelabel>
        </childnode>
      </node>
      <node id="604">
        <label>sbIMediacoreCapabilities</label>
        <link refid="interfacesb_i_mediacore_capabilities"/>
      </node>
      <node id="620">
        <label>sbIMediacoreBalanceControl</label>
        <link refid="interfacesb_i_mediacore_balance_control"/>
      </node>
      <node id="617">
        <label>sbIMediaListViewSelection</label>
        <link refid="interfacesb_i_media_list_view_selection"/>
        <childnode refid="606" relation="usage">
          <edgelabel>currentMediaItem</edgelabel>
        </childnode>
      </node>
      <node id="613">
        <label>sbIDeviceStatus</label>
        <link refid="interfacesb_i_device_status"/>
        <childnode refid="606" relation="usage">
          <edgelabel>mediaItem</edgelabel>
        </childnode>
        <childnode refid="609" relation="usage">
          <edgelabel>mediaList</edgelabel>
        </childnode>
      </node>
      <node id="619">
        <label>sbIMediacoreMultibandEqualizer</label>
        <link refid="interfacesb_i_mediacore_multiband_equalizer"/>
      </node>
      <node id="605">
        <label>sbIMediacoreSequencer</label>
        <link refid="interfacesb_i_mediacore_sequencer"/>
        <childnode refid="606" relation="usage">
          <edgelabel>nextItem
currentItem</edgelabel>
        </childnode>
        <childnode refid="615" relation="usage">
          <edgelabel>customGenerator</edgelabel>
        </childnode>
        <childnode refid="616" relation="usage">
          <edgelabel>view</edgelabel>
        </childnode>
      </node>
      <node id="610">
        <label>sbIDevice</label>
        <link refid="interfacesb_i_device"/>
        <childnode refid="611" relation="usage">
          <edgelabel>content</edgelabel>
        </childnode>
        <childnode refid="613" relation="usage">
          <edgelabel>currentStatus</edgelabel>
        </childnode>
        <childnode refid="614" relation="usage">
          <edgelabel>properties</edgelabel>
        </childnode>
      </node>
      <node id="602">
        <label>sbIMediacore</label>
        <link refid="interfacesb_i_mediacore"/>
        <childnode refid="603" relation="usage">
          <edgelabel>status</edgelabel>
        </childnode>
        <childnode refid="604" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
        <childnode refid="605" relation="usage">
          <edgelabel>sequencer</edgelabel>
        </childnode>
      </node>
      <node id="608">
        <label>sbILibrary</label>
        <link refid="interfacesb_i_library"/>
        <childnode refid="609" relation="public-inheritance">
        </childnode>
        <childnode refid="610" relation="usage">
          <edgelabel>device</edgelabel>
        </childnode>
        <childnode refid="612" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="618">
        <label>sbICascadeFilterSet</label>
        <link refid="interfacesb_i_cascade_filter_set"/>
      </node>
      <node id="600">
        <label>sbIMediacorePlaybackControl</label>
        <link refid="interfacesb_i_mediacore_playback_control"/>
      </node>
      <node id="598">
        <label>sbIMediacoreManager</label>
        <link refid="interfacesb_i_mediacore_manager"/>
        <childnode refid="599" relation="usage">
          <edgelabel>video</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>playbackControl</edgelabel>
        </childnode>
        <childnode refid="601" relation="usage">
          <edgelabel>volumeControl</edgelabel>
        </childnode>
        <childnode refid="602" relation="usage">
          <edgelabel>primaryCore</edgelabel>
        </childnode>
        <childnode refid="603" relation="usage">
          <edgelabel>status</edgelabel>
        </childnode>
        <childnode refid="619" relation="usage">
          <edgelabel>equalizer</edgelabel>
        </childnode>
        <childnode refid="604" relation="usage">
          <edgelabel>capabilities</edgelabel>
        </childnode>
        <childnode refid="605" relation="usage">
          <edgelabel>sequencer</edgelabel>
        </childnode>
        <childnode refid="620" relation="usage">
          <edgelabel>balanceControl</edgelabel>
        </childnode>
      </node>
      <node id="607">
        <label>sbILibraryResource</label>
        <link refid="interfacesb_i_library_resource"/>
      </node>
      <node id="606">
        <label>sbIMediaItem</label>
        <link refid="interfacesb_i_media_item"/>
        <childnode refid="607" relation="public-inheritance">
        </childnode>
        <childnode refid="608" relation="usage">
          <edgelabel>library</edgelabel>
        </childnode>
      </node>
      <node id="615">
        <label>sbIMediacoreSequenceGenerator</label>
        <link refid="interfacesb_i_mediacore_sequence_generator"/>
      </node>
      <node id="611">
        <label>sbIDeviceContent</label>
        <link refid="interfacesb_i_device_content"/>
        <childnode refid="612" relation="usage">
          <edgelabel>libraryFactory</edgelabel>
        </childnode>
      </node>
      <node id="612">
        <label>sbILibraryFactory</label>
        <link refid="interfacesb_i_library_factory"/>
      </node>
      <node id="603">
        <label>sbIMediacoreStatus</label>
        <link refid="interfacesb_i_mediacore_status"/>
      </node>
      <node id="599">
        <label>sbIMediacoreVideoWindow</label>
        <link refid="interfacesb_i_mediacore_video_window"/>
      </node>
      <node id="601">
        <label>sbIMediacoreVolumeControl</label>
        <link refid="interfacesb_i_mediacore_volume_control"/>
      </node>
      <node id="614">
        <label>sbIDeviceProperties</label>
        <link refid="interfacesb_i_device_properties"/>
      </node>
    </collaborationgraph>
    <location file="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" line="49" bodyfile="c:/builds/songbird/trunk/components/mediacore/base/public/sbIMediacoreManager.idl" bodystart="48" bodyend="119"/>
    <listofallmembers>
      <member refid="interfacesb_i_mediacore_manager_14b31b46aa055273e00f0f4877c6af93f" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>balanceControl</name></member>
      <member refid="interfacesb_i_mediacore_manager_15316f957dcb5c1821740f41aa3ca2871" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>capabilities</name></member>
      <member refid="interfacesb_i_mediacore_manager_12b6cfeb6020f3286aaa3e893a63a2e74" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>createEvent</name></member>
      <member refid="interfacesb_i_mediacore_manager_14e024127c997556feff582b15eb51823" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>equalizer</name></member>
      <member refid="interfacesb_i_mediacore_manager_1ab3c2c0e856fca0bb25ef249c8e19181" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>getPrimaryVideoWindow</name></member>
      <member refid="interfacesb_i_mediacore_manager_14d710e46b0d1218f791d05989f29d8f5" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>playbackControl</name></member>
      <member refid="interfacesb_i_mediacore_manager_16c6ac5478e54513f76a1d12cdba83d3f" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>primaryCore</name></member>
      <member refid="interfacesb_i_mediacore_manager_1689507ad9e06653da8c4ba66bf06063d" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>sequencer</name></member>
      <member refid="interfacesb_i_mediacore_manager_15aa4d0a2e956e27f66d1e6d710742581" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>status</name></member>
      <member refid="interfacesb_i_mediacore_manager_16d833e34bd175091a3364856761376b2" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>video</name></member>
      <member refid="interfacesb_i_mediacore_manager_1e6059c54ad6eea4849a03942f2f2f156" prot="public" virt="non-virtual"><scope>sbIMediacoreManager</scope><name>volumeControl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
