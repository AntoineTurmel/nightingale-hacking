<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_library_diffing_service" kind="interface" prot="public">
    <compoundname>sbILibraryDiffingService</compoundname>
    <includes refid="sb_i_library_diffing_service_8idl" local="no">sbILibraryDiffingService.idl</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_library_diffing_service_132464afdc5a1f229a4ee1e0895b9f07c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref></type>
        <definition>sbILibraryChangeset sbILibraryDiffingService::createChangeset</definition>
        <argsstring>(in sbIMediaList aSource, in sbIMediaList aDestination)</argsstring>
        <name>createChangeset</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aSource</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aDestination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a changeset from a source and destination library or media list.</para><para>The changeset will contain all the information necessary to make the destination the same as the source.</para><para>All changes in the changeset are provided in chronological order. Applying these changes out of order to the destination will have adverse effects.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The source library or list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDestination</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination library or list. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A changeset. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="71"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_diffing_service_103194bea9ec9f35fffb931710ff9849a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref></type>
        <definition>sbILibraryChangeset sbILibraryDiffingService::createMultiChangeset</definition>
        <argsstring>(in nsIArray aSources, in sbIMediaList aDestination)</argsstring>
        <name>createMultiChangeset</name>
        <param>
          <type>in nsIArray</type>
          <declname>aSources</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aDestination</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a changeset from multiple sources and a destination library or media list.</para><para>The changeset will contain all information necessary to make the destination have the same contents and properties for items as the sources. It will _not_ give you order information though. Sortable destinations will not have the same sort order as the sources.</para><para>Applying these changes out of order to the destination will have adverse effects.</para><para><simplesect kind="note"><para>The Destination must be library.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSources</parametername>
</parameternamelist>
<parameterdescription>
<para>The source libraries or media lists. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDestination</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination library or media list. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A changeset. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="91"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_diffing_service_1b78ab473c045c107ef92fac444cb9027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AString</type>
        <definition>AString sbILibraryDiffingService::createChangesetAsync</definition>
        <argsstring>(in sbIMediaList aSource, in sbIMediaList aDestination,[optional] in nsIObserver aObserver)</argsstring>
        <name>createChangesetAsync</name>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aSource</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aDestination</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in nsIObserver</type>
          <declname>aObserver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a changeset from a source and destination library or medialist in asynchronous fashion.</para><para>The changeset will contain all the information necessary to make the destination the same as the source.</para><para>All changes in the changeset are provided in chronological order. Applying these changes out of order to the destination will have adverse effects.</para><para>The observer will get called with the following arguments when the changeset is ready:</para><para>aSubject will be a <ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref> instance. aTopic will be &quot;library-changeset-ready&quot;. aData will be the changeset cookie. The cookie can be used to retreive the changeset for processing at a later time outside of the observer call.</para><para>The observer will be called on the thread it was created.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The source. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDestination</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObserver</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional observer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a changeset cookie. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="122"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_diffing_service_19deacf4cc1a733b78b230583194b8e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref></type>
        <definition>sbILibraryChangeset sbILibraryDiffingService::createMultiChangesetAsync</definition>
        <argsstring>(in nsIArray aSources, in sbIMediaList aDestination,[optional] in nsIObserver aObserver)</argsstring>
        <name>createMultiChangesetAsync</name>
        <param>
          <type>in nsIArray</type>
          <declname>aSources</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aDestination</declname>
        </param>
        <param>
          <attributes>[optional]</attributes>
          <type>in nsIObserver</type>
          <declname>aObserver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a changeset from multiple sources to a single destination in an asynchronous fashion.</para><para>The changeset will contain all information necessary to make the destination have the same contents and properties for items as the sources. It will _not_ give you order information though. Sortable destinations will not have the same sort order as the sources.</para><para>Applying these changes out of order to the destination will have adverse effects.</para><para>The observer will get called with the following arguments when the changeset is ready:</para><para>aSubject will be a <ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref> instance. aTopic will be &quot;library-changeset-ready&quot;. aData will be the changeset cookie. The cookie can be used to retreive the changeset for processing at a later time outside of the observer call.</para><para>The observer will be called on the thread it was created.</para><para>If you do not wish to use an observer, you may retrieve the changeset using the cookie that is returned in conjunction with the getChangeset method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aSources</parametername>
</parameternamelist>
<parameterdescription>
<para>The source libraries or lists. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aDestination</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aObserver</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional observer. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a changeset cookie. </para></simplesect>
<simplesect kind="see"><para><ref refid="interfacesb_i_library_diffing_service_172ea0e0f0133009a627b525301c365b1" kindref="member">getChangeset</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="158"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_library_diffing_service_172ea0e0f0133009a627b525301c365b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref></type>
        <definition>sbILibraryChangeset sbILibraryDiffingService::getChangeset</definition>
        <argsstring>(in AString aChangesetCookie)</argsstring>
        <name>getChangeset</name>
        <param>
          <type>in AString</type>
          <declname>aChangesetCookie</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retreive a changeset using a changeset cookie.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aChangesetCookie</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The library changeset. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>NS_ERROR_NOT_AVAILABLE</parametername>
</parameternamelist>
<parameterdescription>
<para>when no changeset is available for a given cookie. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Library and media list diffing service. </para>    </briefdescription>
    <detaileddescription>
<para>The library diffing service enables to create changesets for a source library or media list (or multiple libraries or lists) to a destination library or media list.</para><para>The resulting changeset can be used to make the destination the contain the same items and properties as the source (or sources combined)</para><para><simplesect kind="see"><para><ref refid="interfacesb_i_library_logging_service" kindref="compound">sbILibraryLoggingService</ref> <ref refid="interfacesb_i_library_changeset" kindref="compound">sbILibraryChangeset</ref> <ref refid="interfacesb_i_library_diffing_service_172ea0e0f0133009a627b525301c365b1" kindref="member">getChangeset</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" line="55" bodyfile="c:/builds/songbird/trunk/components/library/base/public/sbILibraryDiffingService.idl" bodystart="54" bodyend="168"/>
    <listofallmembers>
      <member refid="interfacesb_i_library_diffing_service_132464afdc5a1f229a4ee1e0895b9f07c" prot="public" virt="non-virtual"><scope>sbILibraryDiffingService</scope><name>createChangeset</name></member>
      <member refid="interfacesb_i_library_diffing_service_1b78ab473c045c107ef92fac444cb9027" prot="public" virt="non-virtual"><scope>sbILibraryDiffingService</scope><name>createChangesetAsync</name></member>
      <member refid="interfacesb_i_library_diffing_service_103194bea9ec9f35fffb931710ff9849a" prot="public" virt="non-virtual"><scope>sbILibraryDiffingService</scope><name>createMultiChangeset</name></member>
      <member refid="interfacesb_i_library_diffing_service_19deacf4cc1a733b78b230583194b8e5a" prot="public" virt="non-virtual"><scope>sbILibraryDiffingService</scope><name>createMultiChangesetAsync</name></member>
      <member refid="interfacesb_i_library_diffing_service_172ea0e0f0133009a627b525301c365b1" prot="public" virt="non-virtual"><scope>sbILibraryDiffingService</scope><name>getChangeset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
