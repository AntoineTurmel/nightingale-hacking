<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.2">
  <compounddef id="interfacesb_i_playlist_reader_manager" kind="interface" prot="public">
    <compoundname>sbIPlaylistReaderManager</compoundname>
    <includes refid="sb_i_playlist_reader_8idl" local="no">sbIPlaylistReader.idl</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="interfacesb_i_playlist_reader_manager_1eb430ecd664df3f04fab6b6e9033230f" prot="public" static="no" mutable="no">
        <type>attribute nsIURI</type>
        <definition>attribute nsIURI sbIPlaylistReaderManager::originalURI</definition>
        <argsstring></argsstring>
        <name>originalURI</name>
        <briefdescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="180" bodyfile="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interfacesb_i_playlist_reader_manager_15c9ead20cd1b64a9598263954a58ca17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long sbIPlaylistReaderManager::loadPlaylist</definition>
        <argsstring>(in nsIURI aURL, in sbIMediaList aMediaList, in AString aContentType, in boolean aAddDistinctOnly, in sbIPlaylistReaderListener aPlaylistReaderListener)</argsstring>
        <name>loadPlaylist</name>
        <param>
          <type>in nsIURI</type>
          <declname>aURL</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aMediaList</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aContentType</declname>
        </param>
        <param>
          <type>in boolean</type>
          <declname>aAddDistinctOnly</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_playlist_reader_listener" kindref="compound">sbIPlaylistReaderListener</ref></type>
          <declname>aPlaylistReaderListener</declname>
        </param>
        <briefdescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="191"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_reader_manager_16acca395c9315e16bc807460579eddfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistReaderManager::read</definition>
        <argsstring>(in nsIFile aFile, in sbIMediaList aMediaList, in AString aContentType, in PRBool aAddDistinctOnly)</argsstring>
        <name>read</name>
        <param>
          <type>in nsIFile</type>
          <declname>aFile</declname>
        </param>
        <param>
          <type>in <ref refid="interfacesb_i_media_list" kindref="compound">sbIMediaList</ref></type>
          <declname>aMediaList</declname>
        </param>
        <param>
          <type>in AString</type>
          <declname>aContentType</declname>
        </param>
        <param>
          <type>in PRBool</type>
          <declname>aAddDistinctOnly</declname>
        </param>
        <briefdescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="201"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_reader_manager_1021cb1b89f0fda35a5afd3fadfe4fca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistReaderManager::supportedMIMETypes</definition>
        <argsstring>(out PRUint32 aMIMECount,[array, size_is(aMIMECount), retval] out wstring aMIMETypes)</argsstring>
        <name>supportedMIMETypes</name>
        <param>
          <type>out PRUint32</type>
          <declname>aMIMECount</declname>
        </param>
        <param>
          <attributes>[array, size_is(aMIMECount), retval]</attributes>
          <type>out wstring</type>
          <declname>aMIMETypes</declname>
        </param>
        <briefdescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="209"/>
      </memberdef>
      <memberdef kind="function" id="interfacesb_i_playlist_reader_manager_1ac0de28c6fa58a44f8cb7949789d85e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sbIPlaylistReaderManager::supportedFileExtensions</definition>
        <argsstring>(out PRUint32 aExtCount,[array, size_is(aExtCount), retval] out wstring aExts)</argsstring>
        <name>supportedFileExtensions</name>
        <param>
          <type>out PRUint32</type>
          <declname>aExtCount</declname>
        </param>
        <param>
          <attributes>[array, size_is(aExtCount), retval]</attributes>
          <type>out wstring</type>
          <declname>aExts</declname>
        </param>
        <briefdescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface to be used to read playlists. It will try to find the proper <ref refid="interfacesb_i_playlist_reader" kindref="compound">sbIPlaylistReader</ref> subclass and use it. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="interfacesb_i_playlist_reader" kindref="compound">sbIPlaylistReader</ref>, <ref refid="interfacesb_i_playlist_reader_listener" kindref="compound">sbIPlaylistReaderListener</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" line="174" bodyfile="e:/Projects/songbird/trunk/components/playlistreader/public/sbIPlaylistReader.idl" bodystart="173" bodyend="218"/>
    <listofallmembers>
      <member refid="interfacesb_i_playlist_reader_manager_15c9ead20cd1b64a9598263954a58ca17" prot="public" virt="non-virtual"><scope>sbIPlaylistReaderManager</scope><name>loadPlaylist</name></member>
      <member refid="interfacesb_i_playlist_reader_manager_1eb430ecd664df3f04fab6b6e9033230f" prot="public" virt="non-virtual"><scope>sbIPlaylistReaderManager</scope><name>originalURI</name></member>
      <member refid="interfacesb_i_playlist_reader_manager_16acca395c9315e16bc807460579eddfb" prot="public" virt="non-virtual"><scope>sbIPlaylistReaderManager</scope><name>read</name></member>
      <member refid="interfacesb_i_playlist_reader_manager_1ac0de28c6fa58a44f8cb7949789d85e0" prot="public" virt="non-virtual"><scope>sbIPlaylistReaderManager</scope><name>supportedFileExtensions</name></member>
      <member refid="interfacesb_i_playlist_reader_manager_1021cb1b89f0fda35a5afd3fadfe4fca6" prot="public" virt="non-virtual"><scope>sbIPlaylistReaderManager</scope><name>supportedMIMETypes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
